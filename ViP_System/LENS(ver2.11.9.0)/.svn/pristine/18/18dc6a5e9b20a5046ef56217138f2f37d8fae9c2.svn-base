using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using LENS2;
using System.Collections.Generic;

namespace UnitTestProject
{
	[TestClass]
	public class MappingDataUnitTest
	{

		//static Dictionary<int, string> テストマッピングデータ = new Dictionary<int,string>()
		//{
		//	{1 , "1" }, {2 , "2" }, {3 , "3" }, {4 , "4" }, {5 , "5" }, {6 , "6" }, {7 , "7" }, {8 , "8" },
		//	{9 , "9" }, {10, "10"}, {11, "11"}, {12, "12"}, {13, "13"}, {14, "14"}, {15, "15"}, {16, "16"},
		//	{17, "17"}, {18, "18"}, {19, "19"}, {20, "20"}, {21, "21"}, {22, "22"}, {23, "23"}, {24, "24"},
		//	{25, "25"}, {26, "26"}, {27, "27"}, {28, "28"}, {29, "29"}, {30, "30"}, {31, "31"}, {32, "32"},
		//	{33, "33"}, {34, "34"}, {35, "19"}, {36, "20"}, {37, "21"}, {38, "22"}, {39, "23"}, {40, "24"},
		//	{41, "41"}, {42, "42"}, {43, "27"}, {44, "28"}, {45, "29"}, {46, "30"}, {47, "31"}, {48, "32"},
		//	{49, "49"}, {50, "50"}, {51, "19"}, {52, "20"}, {53, "21"}, {54, "22"}, {55, "23"}, {56, "24"},
		//	{57, "57"}, {58, "58"}, {59, "27"}, {60, "28"}, {61, "29"}, {62, "30"}, {63, "31"}, {64, "32"}
		//};

		//static Dictionary<int, string> 期待される偶数段マッピングデータ = new Dictionary<int,string>()
		//{
		//	{1 , "0"}, {2 , "1"}, {3 , "1"}, {4 , "0"}, {5 , "0"}, {6 , "1"}, {7 , "1"}, {8 , "0"},
		//	{9 , "0"}, {10, "1"}, {11, "1"}, {12, "0"}, {13, "0"}, {14, "1"}, {15, "1"}, {16, "0"},
		//	{17, "0"}, {18, "1"}, {19, "1"}, {20, "0"}, {21, "0"}, {22, "1"}, {23, "1"}, {24, "0"},
		//	{25, "0"}, {26, "1"}, {27, "1"}, {28, "0"}, {29, "0"}, {30, "1"}, {31, "1"}, {32, "0"},
		//	{33, "0"}, {34, "1"}, {35, "1"}, {36, "0"}, {37, "0"}, {38, "1"}, {39, "1"}, {40, "0"},
		//	{41, "0"}, {42, "1"}, {43, "1"}, {44, "0"}, {45, "0"}, {46, "1"}, {47, "1"}, {48, "0"},
		//	{49, "0"}, {50, "1"}, {51, "1"}, {52, "0"}, {53, "0"}, {54, "1"}, {55, "1"}, {56, "0"},
		//	{57, "0"}, {58, "1"}, {59, "1"}, {60, "0"}, {61, "0"}, {62, "1"}, {63, "1"}, {64, "0"}
		//};

		//static Dictionary<int, string> 期待される奇数段マッピングデータ = new Dictionary<int,string>()
		//{
		//	{1 , "0"}, {2 , "1"}, {3 , "1"}, {4 , "0"}, {5 , "0"}, {6 , "1"}, {7 , "1"}, {8 , "0"},
		//	{9 , "0"}, {10, "1"}, {11, "1"}, {12, "0"}, {13, "0"}, {14, "1"}, {15, "1"}, {16, "0"},
		//	{17, "0"}, {18, "1"}, {19, "1"}, {20, "0"}, {21, "0"}, {22, "1"}, {23, "1"}, {24, "0"},
		//	{25, "0"}, {26, "1"}, {27, "1"}, {28, "0"}, {29, "0"}, {30, "1"}, {31, "1"}, {32, "0"},
		//	{33, "0"}, {34, "1"}, {35, "1"}, {36, "0"}, {37, "0"}, {38, "1"}, {39, "1"}, {40, "0"},
		//	{41, "0"}, {42, "1"}, {43, "1"}, {44, "0"}, {45, "0"}, {46, "1"}, {47, "1"}, {48, "0"},
		//	{49, "0"}, {50, "1"}, {51, "1"}, {52, "0"}, {53, "0"}, {54, "1"}, {55, "1"}, {56, "0"},
		//	{57, "0"}, {58, "1"}, {59, "1"}, {60, "0"}, {61, "0"}, {62, "1"}, {63, "1"}, {64, "0"}
		//};

		//static Dictionary<int, string> 期待される全段マッピングデータ = new Dictionary<int,string>()
		//{
		//	{1 , "0"}, {2 , "1"}, {3 , "1"}, {4 , "0"}, {5 , "0"}, {6 , "1"}, {7 , "1"}, {8 , "0"},
		//	{9 , "0"}, {10, "1"}, {11, "1"}, {12, "0"}, {13, "0"}, {14, "1"}, {15, "1"}, {16, "0"},
		//	{17, "0"}, {18, "1"}, {19, "1"}, {20, "0"}, {21, "0"}, {22, "1"}, {23, "1"}, {24, "0"},
		//	{25, "0"}, {26, "1"}, {27, "1"}, {28, "0"}, {29, "0"}, {30, "1"}, {31, "1"}, {32, "0"},
		//	{33, "0"}, {34, "1"}, {35, "1"}, {36, "0"}, {37, "0"}, {38, "1"}, {39, "1"}, {40, "0"},
		//	{41, "0"}, {42, "1"}, {43, "1"}, {44, "0"}, {45, "0"}, {46, "1"}, {47, "1"}, {48, "0"},
		//	{49, "0"}, {50, "1"}, {51, "1"}, {52, "0"}, {53, "0"}, {54, "1"}, {55, "1"}, {56, "0"},
		//	{57, "0"}, {58, "1"}, {59, "1"}, {60, "0"}, {61, "0"}, {62, "1"}, {63, "1"}, {64, "0"}
		//};

		//private TestContext testContextInstance;
		//public TestContext TestContext
		//{
		//	get { return testContextInstance; }
		//	set { testContextInstance = value; }
		//}

		//[TestMethod]
		//[TestCase(テストマッピングデータ, 4, 2, 8, Magazine.LoadStep.Even, 期待される偶数段マッピングデータ, "<4*2pcs、8段偶数段搭載のマガジン上下反転>")]
		//[TestCase(テストマッピングデータ, 4, 2, 8, Magazine.LoadStep.Odd, 期待される奇数段マッピングデータ, "<4*2pcs、8段奇数段搭載のマガジン上下反転>")]
		//[TestCase(テストマッピングデータ, 4, 2, 8, Magazine.LoadStep.All, 期待される全段マッピングデータ, "<4*2pcs、8段全段搭載のマガジン上下反転>")]
		//public void マガジン上下反転したマッピングデータ取得()
		//{

		//	TestContext.Run((Dictionary<int, string> マッピングデータ, int フレームのX方向パッケージ数, int フレームのY方向パッケージ数
		//		, int マガジン段数, Magazine.LoadStep マガジン搭載方法, Dictionary<int, string> 期待値, string msg) =>
		//	{
		//		MappingData.GetUpsideDownMagazineSequentialMappingData(マッピングデータ, フレームのX方向パッケージ数, フレームのY方向パッケージ数,
		//			マガジン段数, マガジン搭載方法).Is(期待値, msg);
		//	});

		//}
	}
}
