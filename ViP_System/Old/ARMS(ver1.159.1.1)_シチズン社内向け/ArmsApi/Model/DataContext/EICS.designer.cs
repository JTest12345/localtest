#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArmsApi.Model.DataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QCIL")]
	public partial class EICSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 拡張メソッドの定義
    partial void OnCreated();
    partial void InsertTmLSET(TmLSET instance);
    partial void UpdateTmLSET(TmLSET instance);
    partial void DeleteTmLSET(TmLSET instance);
    partial void InsertTmTypeGroup(TmTypeGroup instance);
    partial void UpdateTmTypeGroup(TmTypeGroup instance);
    partial void DeleteTmTypeGroup(TmTypeGroup instance);
    partial void InsertTmEQUI(TmEQUI instance);
    partial void UpdateTmEQUI(TmEQUI instance);
    partial void DeleteTmEQUI(TmEQUI instance);
    partial void InsertTnPsMeasureResult(TnPsMeasureResult instance);
    partial void UpdateTnPsMeasureResult(TnPsMeasureResult instance);
    partial void DeleteTnPsMeasureResult(TnPsMeasureResult instance);
    #endregion
		
		public EICSDataContext() : 
				base(global::ArmsApi.Properties.Settings.Default.QCILConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public EICSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EICSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EICSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EICSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TmLSET> TmLSET
		{
			get
			{
				return this.GetTable<TmLSET>();
			}
		}
		
		public System.Data.Linq.Table<TmTypeGroup> TmTypeGroup
		{
			get
			{
				return this.GetTable<TmTypeGroup>();
			}
		}
		
		public System.Data.Linq.Table<TmEQUI> TmEQUI
		{
			get
			{
				return this.GetTable<TmEQUI>();
			}
		}
		
		public System.Data.Linq.Table<TnPsMeasureResult> TnPsMeasureResult
		{
			get
			{
				return this.GetTable<TnPsMeasureResult>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TmLSET")]
	public partial class TmLSET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Inline_CD;
		
		private string _Equipment_NO;
		
		private string _Equipment_CD;
		
		private int _Process_CD;
		
		private int _Seq_NO;
		
		private string _IPAddress_NO;
		
		private string _Port_NO;
		
		private string _InputFolder_NM;
		
		private string _LoaderAddress_NO;
		
		private string _LoaderPlcNode_NO;
		
		private bool _Del_FG;
		
		private string _UpdUser_CD;
		
		private System.DateTime _LastUpd_DT;
		
		private string _ThreadGrp_CD;
		
		private System.Nullable<bool> _MainThread_FG;
		
		private string _EquipPart_ID;
		
		private string _WorkingType_CD;
		
		private bool _ArmsTypeNoCheck_FG;
		
		private bool _ReferMultiServer_FG;
		
		private bool _EnableResultPriorityJudge_FG;
		
		private string _WorkingTypeGroup_CD;
		
		private string _Chip_NM;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInline_CDChanging(int value);
    partial void OnInline_CDChanged();
    partial void OnEquipment_NOChanging(string value);
    partial void OnEquipment_NOChanged();
    partial void OnEquipment_CDChanging(string value);
    partial void OnEquipment_CDChanged();
    partial void OnProcess_CDChanging(int value);
    partial void OnProcess_CDChanged();
    partial void OnSeq_NOChanging(int value);
    partial void OnSeq_NOChanged();
    partial void OnIPAddress_NOChanging(string value);
    partial void OnIPAddress_NOChanged();
    partial void OnPort_NOChanging(string value);
    partial void OnPort_NOChanged();
    partial void OnInputFolder_NMChanging(string value);
    partial void OnInputFolder_NMChanged();
    partial void OnLoaderAddress_NOChanging(string value);
    partial void OnLoaderAddress_NOChanged();
    partial void OnLoaderPlcNode_NOChanging(string value);
    partial void OnLoaderPlcNode_NOChanged();
    partial void OnDel_FGChanging(bool value);
    partial void OnDel_FGChanged();
    partial void OnUpdUser_CDChanging(string value);
    partial void OnUpdUser_CDChanged();
    partial void OnLastUpd_DTChanging(System.DateTime value);
    partial void OnLastUpd_DTChanged();
    partial void OnThreadGrp_CDChanging(string value);
    partial void OnThreadGrp_CDChanged();
    partial void OnMainThread_FGChanging(System.Nullable<bool> value);
    partial void OnMainThread_FGChanged();
    partial void OnEquipPart_IDChanging(string value);
    partial void OnEquipPart_IDChanged();
    partial void OnWorkingType_CDChanging(string value);
    partial void OnWorkingType_CDChanged();
    partial void OnArmsTypeNoCheck_FGChanging(bool value);
    partial void OnArmsTypeNoCheck_FGChanged();
    partial void OnReferMultiServer_FGChanging(bool value);
    partial void OnReferMultiServer_FGChanged();
    partial void OnEnableResultPriorityJudge_FGChanging(bool value);
    partial void OnEnableResultPriorityJudge_FGChanged();
    partial void OnWorkingTypeGroup_CDChanging(string value);
    partial void OnWorkingTypeGroup_CDChanged();
    partial void OnChip_NMChanging(string value);
    partial void OnChip_NMChanged();
    #endregion
		
		public TmLSET()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inline_CD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Inline_CD
		{
			get
			{
				return this._Inline_CD;
			}
			set
			{
				if ((this._Inline_CD != value))
				{
					this.OnInline_CDChanging(value);
					this.SendPropertyChanging();
					this._Inline_CD = value;
					this.SendPropertyChanged("Inline_CD");
					this.OnInline_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment_NO", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Equipment_NO
		{
			get
			{
				return this._Equipment_NO;
			}
			set
			{
				if ((this._Equipment_NO != value))
				{
					this.OnEquipment_NOChanging(value);
					this.SendPropertyChanging();
					this._Equipment_NO = value;
					this.SendPropertyChanged("Equipment_NO");
					this.OnEquipment_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment_CD", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string Equipment_CD
		{
			get
			{
				return this._Equipment_CD;
			}
			set
			{
				if ((this._Equipment_CD != value))
				{
					this.OnEquipment_CDChanging(value);
					this.SendPropertyChanging();
					this._Equipment_CD = value;
					this.SendPropertyChanged("Equipment_CD");
					this.OnEquipment_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Process_CD", DbType="Int NOT NULL")]
		public int Process_CD
		{
			get
			{
				return this._Process_CD;
			}
			set
			{
				if ((this._Process_CD != value))
				{
					this.OnProcess_CDChanging(value);
					this.SendPropertyChanging();
					this._Process_CD = value;
					this.SendPropertyChanged("Process_CD");
					this.OnProcess_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq_NO", DbType="Int NOT NULL")]
		public int Seq_NO
		{
			get
			{
				return this._Seq_NO;
			}
			set
			{
				if ((this._Seq_NO != value))
				{
					this.OnSeq_NOChanging(value);
					this.SendPropertyChanging();
					this._Seq_NO = value;
					this.SendPropertyChanged("Seq_NO");
					this.OnSeq_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress_NO", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string IPAddress_NO
		{
			get
			{
				return this._IPAddress_NO;
			}
			set
			{
				if ((this._IPAddress_NO != value))
				{
					this.OnIPAddress_NOChanging(value);
					this.SendPropertyChanging();
					this._IPAddress_NO = value;
					this.SendPropertyChanged("IPAddress_NO");
					this.OnIPAddress_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port_NO", DbType="Char(8)")]
		public string Port_NO
		{
			get
			{
				return this._Port_NO;
			}
			set
			{
				if ((this._Port_NO != value))
				{
					this.OnPort_NOChanging(value);
					this.SendPropertyChanging();
					this._Port_NO = value;
					this.SendPropertyChanged("Port_NO");
					this.OnPort_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputFolder_NM", DbType="Char(128)")]
		public string InputFolder_NM
		{
			get
			{
				return this._InputFolder_NM;
			}
			set
			{
				if ((this._InputFolder_NM != value))
				{
					this.OnInputFolder_NMChanging(value);
					this.SendPropertyChanging();
					this._InputFolder_NM = value;
					this.SendPropertyChanged("InputFolder_NM");
					this.OnInputFolder_NMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaderAddress_NO", DbType="Char(15)")]
		public string LoaderAddress_NO
		{
			get
			{
				return this._LoaderAddress_NO;
			}
			set
			{
				if ((this._LoaderAddress_NO != value))
				{
					this.OnLoaderAddress_NOChanging(value);
					this.SendPropertyChanging();
					this._LoaderAddress_NO = value;
					this.SendPropertyChanged("LoaderAddress_NO");
					this.OnLoaderAddress_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaderPlcNode_NO", DbType="Char(15)")]
		public string LoaderPlcNode_NO
		{
			get
			{
				return this._LoaderPlcNode_NO;
			}
			set
			{
				if ((this._LoaderPlcNode_NO != value))
				{
					this.OnLoaderPlcNode_NOChanging(value);
					this.SendPropertyChanging();
					this._LoaderPlcNode_NO = value;
					this.SendPropertyChanged("LoaderPlcNode_NO");
					this.OnLoaderPlcNode_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del_FG", DbType="Bit NOT NULL")]
		public bool Del_FG
		{
			get
			{
				return this._Del_FG;
			}
			set
			{
				if ((this._Del_FG != value))
				{
					this.OnDel_FGChanging(value);
					this.SendPropertyChanging();
					this._Del_FG = value;
					this.SendPropertyChanged("Del_FG");
					this.OnDel_FGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUser_CD", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string UpdUser_CD
		{
			get
			{
				return this._UpdUser_CD;
			}
			set
			{
				if ((this._UpdUser_CD != value))
				{
					this.OnUpdUser_CDChanging(value);
					this.SendPropertyChanging();
					this._UpdUser_CD = value;
					this.SendPropertyChanged("UpdUser_CD");
					this.OnUpdUser_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpd_DT", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpd_DT
		{
			get
			{
				return this._LastUpd_DT;
			}
			set
			{
				if ((this._LastUpd_DT != value))
				{
					this.OnLastUpd_DTChanging(value);
					this.SendPropertyChanging();
					this._LastUpd_DT = value;
					this.SendPropertyChanged("LastUpd_DT");
					this.OnLastUpd_DTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadGrp_CD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ThreadGrp_CD
		{
			get
			{
				return this._ThreadGrp_CD;
			}
			set
			{
				if ((this._ThreadGrp_CD != value))
				{
					this.OnThreadGrp_CDChanging(value);
					this.SendPropertyChanging();
					this._ThreadGrp_CD = value;
					this.SendPropertyChanged("ThreadGrp_CD");
					this.OnThreadGrp_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainThread_FG", DbType="Bit")]
		public System.Nullable<bool> MainThread_FG
		{
			get
			{
				return this._MainThread_FG;
			}
			set
			{
				if ((this._MainThread_FG != value))
				{
					this.OnMainThread_FGChanging(value);
					this.SendPropertyChanging();
					this._MainThread_FG = value;
					this.SendPropertyChanged("MainThread_FG");
					this.OnMainThread_FGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipPart_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EquipPart_ID
		{
			get
			{
				return this._EquipPart_ID;
			}
			set
			{
				if ((this._EquipPart_ID != value))
				{
					this.OnEquipPart_IDChanging(value);
					this.SendPropertyChanging();
					this._EquipPart_ID = value;
					this.SendPropertyChanged("EquipPart_ID");
					this.OnEquipPart_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingType_CD", DbType="VarChar(50)")]
		public string WorkingType_CD
		{
			get
			{
				return this._WorkingType_CD;
			}
			set
			{
				if ((this._WorkingType_CD != value))
				{
					this.OnWorkingType_CDChanging(value);
					this.SendPropertyChanging();
					this._WorkingType_CD = value;
					this.SendPropertyChanged("WorkingType_CD");
					this.OnWorkingType_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArmsTypeNoCheck_FG", DbType="Bit NOT NULL")]
		public bool ArmsTypeNoCheck_FG
		{
			get
			{
				return this._ArmsTypeNoCheck_FG;
			}
			set
			{
				if ((this._ArmsTypeNoCheck_FG != value))
				{
					this.OnArmsTypeNoCheck_FGChanging(value);
					this.SendPropertyChanging();
					this._ArmsTypeNoCheck_FG = value;
					this.SendPropertyChanged("ArmsTypeNoCheck_FG");
					this.OnArmsTypeNoCheck_FGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferMultiServer_FG", DbType="Bit NOT NULL")]
		public bool ReferMultiServer_FG
		{
			get
			{
				return this._ReferMultiServer_FG;
			}
			set
			{
				if ((this._ReferMultiServer_FG != value))
				{
					this.OnReferMultiServer_FGChanging(value);
					this.SendPropertyChanging();
					this._ReferMultiServer_FG = value;
					this.SendPropertyChanged("ReferMultiServer_FG");
					this.OnReferMultiServer_FGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableResultPriorityJudge_FG", DbType="Bit NOT NULL")]
		public bool EnableResultPriorityJudge_FG
		{
			get
			{
				return this._EnableResultPriorityJudge_FG;
			}
			set
			{
				if ((this._EnableResultPriorityJudge_FG != value))
				{
					this.OnEnableResultPriorityJudge_FGChanging(value);
					this.SendPropertyChanging();
					this._EnableResultPriorityJudge_FG = value;
					this.SendPropertyChanged("EnableResultPriorityJudge_FG");
					this.OnEnableResultPriorityJudge_FGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingTypeGroup_CD", DbType="VarChar(50)")]
		public string WorkingTypeGroup_CD
		{
			get
			{
				return this._WorkingTypeGroup_CD;
			}
			set
			{
				if ((this._WorkingTypeGroup_CD != value))
				{
					this.OnWorkingTypeGroup_CDChanging(value);
					this.SendPropertyChanging();
					this._WorkingTypeGroup_CD = value;
					this.SendPropertyChanged("WorkingTypeGroup_CD");
					this.OnWorkingTypeGroup_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chip_NM", DbType="NVarChar(50)")]
		public string Chip_NM
		{
			get
			{
				return this._Chip_NM;
			}
			set
			{
				if ((this._Chip_NM != value))
				{
					this.OnChip_NMChanging(value);
					this.SendPropertyChanging();
					this._Chip_NM = value;
					this.SendPropertyChanged("Chip_NM");
					this.OnChip_NMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TmTypeGroup")]
	public partial class TmTypeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Model_NM;
		
		private string _Type_CD;
		
		private string _Chip_NM;
		
		private string _TypeGroup_CD;
		
		private bool _Del_FG;
		
		private string _UpdUser_CD;
		
		private System.DateTime _LastUpd_DT;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModel_NMChanging(string value);
    partial void OnModel_NMChanged();
    partial void OnType_CDChanging(string value);
    partial void OnType_CDChanged();
    partial void OnChip_NMChanging(string value);
    partial void OnChip_NMChanged();
    partial void OnTypeGroup_CDChanging(string value);
    partial void OnTypeGroup_CDChanged();
    partial void OnDel_FGChanging(bool value);
    partial void OnDel_FGChanged();
    partial void OnUpdUser_CDChanging(string value);
    partial void OnUpdUser_CDChanged();
    partial void OnLastUpd_DTChanging(System.DateTime value);
    partial void OnLastUpd_DTChanged();
    #endregion
		
		public TmTypeGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model_NM", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Model_NM
		{
			get
			{
				return this._Model_NM;
			}
			set
			{
				if ((this._Model_NM != value))
				{
					this.OnModel_NMChanging(value);
					this.SendPropertyChanging();
					this._Model_NM = value;
					this.SendPropertyChanged("Model_NM");
					this.OnModel_NMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_CD", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type_CD
		{
			get
			{
				return this._Type_CD;
			}
			set
			{
				if ((this._Type_CD != value))
				{
					this.OnType_CDChanging(value);
					this.SendPropertyChanging();
					this._Type_CD = value;
					this.SendPropertyChanged("Type_CD");
					this.OnType_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chip_NM", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Chip_NM
		{
			get
			{
				return this._Chip_NM;
			}
			set
			{
				if ((this._Chip_NM != value))
				{
					this.OnChip_NMChanging(value);
					this.SendPropertyChanging();
					this._Chip_NM = value;
					this.SendPropertyChanged("Chip_NM");
					this.OnChip_NMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeGroup_CD", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string TypeGroup_CD
		{
			get
			{
				return this._TypeGroup_CD;
			}
			set
			{
				if ((this._TypeGroup_CD != value))
				{
					this.OnTypeGroup_CDChanging(value);
					this.SendPropertyChanging();
					this._TypeGroup_CD = value;
					this.SendPropertyChanged("TypeGroup_CD");
					this.OnTypeGroup_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del_FG", DbType="Bit NOT NULL")]
		public bool Del_FG
		{
			get
			{
				return this._Del_FG;
			}
			set
			{
				if ((this._Del_FG != value))
				{
					this.OnDel_FGChanging(value);
					this.SendPropertyChanging();
					this._Del_FG = value;
					this.SendPropertyChanged("Del_FG");
					this.OnDel_FGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUser_CD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdUser_CD
		{
			get
			{
				return this._UpdUser_CD;
			}
			set
			{
				if ((this._UpdUser_CD != value))
				{
					this.OnUpdUser_CDChanging(value);
					this.SendPropertyChanging();
					this._UpdUser_CD = value;
					this.SendPropertyChanged("UpdUser_CD");
					this.OnUpdUser_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpd_DT", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpd_DT
		{
			get
			{
				return this._LastUpd_DT;
			}
			set
			{
				if ((this._LastUpd_DT != value))
				{
					this.OnLastUpd_DTChanging(value);
					this.SendPropertyChanging();
					this._LastUpd_DT = value;
					this.SendPropertyChanged("LastUpd_DT");
					this.OnLastUpd_DTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TmEQUI")]
	public partial class TmEQUI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Equipment_NO;
		
		private string _Model_NM;
		
		private string _Assets_NM;
		
		private string _MachinSeq_NO;
		
		private bool _Del_FG;
		
		private string _UpdUser_CD;
		
		private System.DateTime _LastUpd_DT;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipment_NOChanging(string value);
    partial void OnEquipment_NOChanged();
    partial void OnModel_NMChanging(string value);
    partial void OnModel_NMChanged();
    partial void OnAssets_NMChanging(string value);
    partial void OnAssets_NMChanged();
    partial void OnMachinSeq_NOChanging(string value);
    partial void OnMachinSeq_NOChanged();
    partial void OnDel_FGChanging(bool value);
    partial void OnDel_FGChanged();
    partial void OnUpdUser_CDChanging(string value);
    partial void OnUpdUser_CDChanged();
    partial void OnLastUpd_DTChanging(System.DateTime value);
    partial void OnLastUpd_DTChanged();
    #endregion
		
		public TmEQUI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment_NO", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Equipment_NO
		{
			get
			{
				return this._Equipment_NO;
			}
			set
			{
				if ((this._Equipment_NO != value))
				{
					this.OnEquipment_NOChanging(value);
					this.SendPropertyChanging();
					this._Equipment_NO = value;
					this.SendPropertyChanged("Equipment_NO");
					this.OnEquipment_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model_NM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model_NM
		{
			get
			{
				return this._Model_NM;
			}
			set
			{
				if ((this._Model_NM != value))
				{
					this.OnModel_NMChanging(value);
					this.SendPropertyChanging();
					this._Model_NM = value;
					this.SendPropertyChanged("Model_NM");
					this.OnModel_NMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets_NM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Assets_NM
		{
			get
			{
				return this._Assets_NM;
			}
			set
			{
				if ((this._Assets_NM != value))
				{
					this.OnAssets_NMChanging(value);
					this.SendPropertyChanging();
					this._Assets_NM = value;
					this.SendPropertyChanged("Assets_NM");
					this.OnAssets_NMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachinSeq_NO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MachinSeq_NO
		{
			get
			{
				return this._MachinSeq_NO;
			}
			set
			{
				if ((this._MachinSeq_NO != value))
				{
					this.OnMachinSeq_NOChanging(value);
					this.SendPropertyChanging();
					this._MachinSeq_NO = value;
					this.SendPropertyChanged("MachinSeq_NO");
					this.OnMachinSeq_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del_FG", DbType="Bit NOT NULL")]
		public bool Del_FG
		{
			get
			{
				return this._Del_FG;
			}
			set
			{
				if ((this._Del_FG != value))
				{
					this.OnDel_FGChanging(value);
					this.SendPropertyChanging();
					this._Del_FG = value;
					this.SendPropertyChanged("Del_FG");
					this.OnDel_FGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdUser_CD", DbType="Char(8)")]
		public string UpdUser_CD
		{
			get
			{
				return this._UpdUser_CD;
			}
			set
			{
				if ((this._UpdUser_CD != value))
				{
					this.OnUpdUser_CDChanging(value);
					this.SendPropertyChanging();
					this._UpdUser_CD = value;
					this.SendPropertyChanged("UpdUser_CD");
					this.OnUpdUser_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpd_DT", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpd_DT
		{
			get
			{
				return this._LastUpd_DT;
			}
			set
			{
				if ((this._LastUpd_DT != value))
				{
					this.OnLastUpd_DTChanging(value);
					this.SendPropertyChanging();
					this._LastUpd_DT = value;
					this.SendPropertyChanged("LastUpd_DT");
					this.OnLastUpd_DTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TnPsMeasureResult")]
	public partial class TnPsMeasureResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Tray_NO;
		
		private int _Sheet_NO;
		
		private int _QcParam_NO;
		
		private string _Plant_CD;
		
		private System.DateTime _Measure_DT;
		
		private string _Type_CD;
		
		private string _Lot_NO;
		
		private decimal _MeasureAve_VAL;
		
		private bool _New_FG;
		
		private System.DateTime _LastUpd_DT;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTray_NOChanging(string value);
    partial void OnTray_NOChanged();
    partial void OnSheet_NOChanging(int value);
    partial void OnSheet_NOChanged();
    partial void OnQcParam_NOChanging(int value);
    partial void OnQcParam_NOChanged();
    partial void OnPlant_CDChanging(string value);
    partial void OnPlant_CDChanged();
    partial void OnMeasure_DTChanging(System.DateTime value);
    partial void OnMeasure_DTChanged();
    partial void OnType_CDChanging(string value);
    partial void OnType_CDChanged();
    partial void OnLot_NOChanging(string value);
    partial void OnLot_NOChanged();
    partial void OnMeasureAve_VALChanging(decimal value);
    partial void OnMeasureAve_VALChanged();
    partial void OnNew_FGChanging(bool value);
    partial void OnNew_FGChanged();
    partial void OnLastUpd_DTChanging(System.DateTime value);
    partial void OnLastUpd_DTChanged();
    #endregion
		
		public TnPsMeasureResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tray_NO", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tray_NO
		{
			get
			{
				return this._Tray_NO;
			}
			set
			{
				if ((this._Tray_NO != value))
				{
					this.OnTray_NOChanging(value);
					this.SendPropertyChanging();
					this._Tray_NO = value;
					this.SendPropertyChanged("Tray_NO");
					this.OnTray_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sheet_NO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sheet_NO
		{
			get
			{
				return this._Sheet_NO;
			}
			set
			{
				if ((this._Sheet_NO != value))
				{
					this.OnSheet_NOChanging(value);
					this.SendPropertyChanging();
					this._Sheet_NO = value;
					this.SendPropertyChanged("Sheet_NO");
					this.OnSheet_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QcParam_NO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QcParam_NO
		{
			get
			{
				return this._QcParam_NO;
			}
			set
			{
				if ((this._QcParam_NO != value))
				{
					this.OnQcParam_NOChanging(value);
					this.SendPropertyChanging();
					this._QcParam_NO = value;
					this.SendPropertyChanged("QcParam_NO");
					this.OnQcParam_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plant_CD", DbType="NVarChar(24) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Plant_CD
		{
			get
			{
				return this._Plant_CD;
			}
			set
			{
				if ((this._Plant_CD != value))
				{
					this.OnPlant_CDChanging(value);
					this.SendPropertyChanging();
					this._Plant_CD = value;
					this.SendPropertyChanged("Plant_CD");
					this.OnPlant_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure_DT", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Measure_DT
		{
			get
			{
				return this._Measure_DT;
			}
			set
			{
				if ((this._Measure_DT != value))
				{
					this.OnMeasure_DTChanging(value);
					this.SendPropertyChanging();
					this._Measure_DT = value;
					this.SendPropertyChanged("Measure_DT");
					this.OnMeasure_DTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_CD", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string Type_CD
		{
			get
			{
				return this._Type_CD;
			}
			set
			{
				if ((this._Type_CD != value))
				{
					this.OnType_CDChanging(value);
					this.SendPropertyChanging();
					this._Type_CD = value;
					this.SendPropertyChanged("Type_CD");
					this.OnType_CDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lot_NO", DbType="NVarChar(64)")]
		public string Lot_NO
		{
			get
			{
				return this._Lot_NO;
			}
			set
			{
				if ((this._Lot_NO != value))
				{
					this.OnLot_NOChanging(value);
					this.SendPropertyChanging();
					this._Lot_NO = value;
					this.SendPropertyChanged("Lot_NO");
					this.OnLot_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureAve_VAL", DbType="Decimal(18,7) NOT NULL")]
		public decimal MeasureAve_VAL
		{
			get
			{
				return this._MeasureAve_VAL;
			}
			set
			{
				if ((this._MeasureAve_VAL != value))
				{
					this.OnMeasureAve_VALChanging(value);
					this.SendPropertyChanging();
					this._MeasureAve_VAL = value;
					this.SendPropertyChanged("MeasureAve_VAL");
					this.OnMeasureAve_VALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New_FG", DbType="Bit NOT NULL")]
		public bool New_FG
		{
			get
			{
				return this._New_FG;
			}
			set
			{
				if ((this._New_FG != value))
				{
					this.OnNew_FGChanging(value);
					this.SendPropertyChanging();
					this._New_FG = value;
					this.SendPropertyChanged("New_FG");
					this.OnNew_FGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpd_DT", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpd_DT
		{
			get
			{
				return this._LastUpd_DT;
			}
			set
			{
				if ((this._LastUpd_DT != value))
				{
					this.OnLastUpd_DTChanging(value);
					this.SendPropertyChanging();
					this._LastUpd_DT = value;
					this.SendPropertyChanged("LastUpd_DT");
					this.OnLastUpd_DTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
