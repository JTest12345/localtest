//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.18063
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.18063 によって自動生成されました。
// 
#pragma warning disable 1591

namespace EICS.NascaAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NppPublicWebServiceSoapSoap", Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPublicWebServiceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NppPublicLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppPublicLogoutOperationCompleted;
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback NppSearchMaterialOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSeachManufactResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchBlendResinResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditBlendResinResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchBlendResinRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditBlendResinRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchBlendResinResultForVBOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchMeasureRstInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditMeasureRstInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditManufactOrderResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchTargetLotManufactResultFacilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchCarrierLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditCarrierChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppAddFrameAssignCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppPubEditManufactOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppPubEditManufactResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchResultsFacilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditLotCharOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppInsertLotCharProcessScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchLotCharProcessScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppOutRawMatOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppMoveOutMatFromSLAOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppBinMovePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppPopMoveOutMatFromSLAOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppPopSearchInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppPopOutRawMatOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppUpdateSelectSumStOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchLotCharOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchLotCharPbOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppUpdateQultymnteDtOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchInventoryRootsLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchTargetBinInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchOnlyNascaLotPubOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppUpdateNascaLotCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppUpdateLtStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppGetMaterialNMOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppGetSectionBinInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppGetLotCharListOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchNFormSuffixOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchMstLotCharOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchDefectPotRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchPdaConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditPdaConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditWorkPlantClasOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditWorkSurveillanceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditPatPrintHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditNascaShipStOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppEditNascaShipSt2OperationCompleted;
        
        private System.Threading.SendOrPostCallback NppReleaseShipLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppPopLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppSearchInlineMagLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppNelInsertOrderMoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppNelInsertMnfctResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback NppNelInsertCutBlendOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NppPublicWebServiceSoap() {
            this.Url = global::EICS.Properties.Settings.Default.EICS_CEJ_local_nichia_naweb_NppPublicWebServiceSoap;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NppPublicLoginCompletedEventHandler NppPublicLoginCompleted;
        
        /// <remarks/>
        public event NppPublicLogoutCompletedEventHandler NppPublicLogoutCompleted;
        
        /// <remarks/>
        public event NppSearchMaterialOrderCompletedEventHandler NppSearchMaterialOrderCompleted;
        
        /// <remarks/>
        public event NppSeachManufactResultCompletedEventHandler NppSeachManufactResultCompleted;
        
        /// <remarks/>
        public event NppSearchBlendResinResultCompletedEventHandler NppSearchBlendResinResultCompleted;
        
        /// <remarks/>
        public event NppEditBlendResinResultCompletedEventHandler NppEditBlendResinResultCompleted;
        
        /// <remarks/>
        public event NppSearchBlendResinRelationCompletedEventHandler NppSearchBlendResinRelationCompleted;
        
        /// <remarks/>
        public event NppEditBlendResinRelationCompletedEventHandler NppEditBlendResinRelationCompleted;
        
        /// <remarks/>
        public event NppSearchBlendResinResultForVBCompletedEventHandler NppSearchBlendResinResultForVBCompleted;
        
        /// <remarks/>
        public event NppSearchMeasureRstInfoCompletedEventHandler NppSearchMeasureRstInfoCompleted;
        
        /// <remarks/>
        public event NppEditMeasureRstInfoCompletedEventHandler NppEditMeasureRstInfoCompleted;
        
        /// <remarks/>
        public event NppEditManufactOrderResultCompletedEventHandler NppEditManufactOrderResultCompleted;
        
        /// <remarks/>
        public event NppSearchTargetLotManufactResultFacilityCompletedEventHandler NppSearchTargetLotManufactResultFacilityCompleted;
        
        /// <remarks/>
        public event NppSearchCarrierLotCompletedEventHandler NppSearchCarrierLotCompleted;
        
        /// <remarks/>
        public event NppEditCarrierChangeCompletedEventHandler NppEditCarrierChangeCompleted;
        
        /// <remarks/>
        public event NppAddFrameAssignCountCompletedEventHandler NppAddFrameAssignCountCompleted;
        
        /// <remarks/>
        public event NppPubEditManufactOrderCompletedEventHandler NppPubEditManufactOrderCompleted;
        
        /// <remarks/>
        public event NppPubEditManufactResultCompletedEventHandler NppPubEditManufactResultCompleted;
        
        /// <remarks/>
        public event NppSearchResultsFacilityCompletedEventHandler NppSearchResultsFacilityCompleted;
        
        /// <remarks/>
        public event NppEditLotCharCompletedEventHandler NppEditLotCharCompleted;
        
        /// <remarks/>
        public event NppInsertLotCharProcessScheduleCompletedEventHandler NppInsertLotCharProcessScheduleCompleted;
        
        /// <remarks/>
        public event NppSearchLotCharProcessScheduleCompletedEventHandler NppSearchLotCharProcessScheduleCompleted;
        
        /// <remarks/>
        public event NppOutRawMatCompletedEventHandler NppOutRawMatCompleted;
        
        /// <remarks/>
        public event NppMoveOutMatFromSLACompletedEventHandler NppMoveOutMatFromSLACompleted;
        
        /// <remarks/>
        public event NppBinMovePaymentCompletedEventHandler NppBinMovePaymentCompleted;
        
        /// <remarks/>
        public event NppSearchInventoryCompletedEventHandler NppSearchInventoryCompleted;
        
        /// <remarks/>
        public event NppPopMoveOutMatFromSLACompletedEventHandler NppPopMoveOutMatFromSLACompleted;
        
        /// <remarks/>
        public event NppPopSearchInventoryCompletedEventHandler NppPopSearchInventoryCompleted;
        
        /// <remarks/>
        public event NppPopOutRawMatCompletedEventHandler NppPopOutRawMatCompleted;
        
        /// <remarks/>
        public event NppUpdateSelectSumStCompletedEventHandler NppUpdateSelectSumStCompleted;
        
        /// <remarks/>
        public event NppSearchLotCharCompletedEventHandler NppSearchLotCharCompleted;
        
        /// <remarks/>
        public event NppSearchLotCharPbCompletedEventHandler NppSearchLotCharPbCompleted;
        
        /// <remarks/>
        public event NppUpdateQultymnteDtCompletedEventHandler NppUpdateQultymnteDtCompleted;
        
        /// <remarks/>
        public event NppSearchInventoryRootsLotCompletedEventHandler NppSearchInventoryRootsLotCompleted;
        
        /// <remarks/>
        public event NppSearchTargetBinInventoryCompletedEventHandler NppSearchTargetBinInventoryCompleted;
        
        /// <remarks/>
        public event NppSearchOnlyNascaLotPubCompletedEventHandler NppSearchOnlyNascaLotPubCompleted;
        
        /// <remarks/>
        public event NppUpdateNascaLotCommentCompletedEventHandler NppUpdateNascaLotCommentCompleted;
        
        /// <remarks/>
        public event NppUpdateLtStatusCompletedEventHandler NppUpdateLtStatusCompleted;
        
        /// <remarks/>
        public event NppGetMaterialNMCompletedEventHandler NppGetMaterialNMCompleted;
        
        /// <remarks/>
        public event NppGetSectionBinInfoCompletedEventHandler NppGetSectionBinInfoCompleted;
        
        /// <remarks/>
        public event NppGetLotCharListCompletedEventHandler NppGetLotCharListCompleted;
        
        /// <remarks/>
        public event NppSearchNFormSuffixCompletedEventHandler NppSearchNFormSuffixCompleted;
        
        /// <remarks/>
        public event NppSearchMstLotCharCompletedEventHandler NppSearchMstLotCharCompleted;
        
        /// <remarks/>
        public event NppSearchDefectPotRegCompletedEventHandler NppSearchDefectPotRegCompleted;
        
        /// <remarks/>
        public event NppSearchPdaConditionCompletedEventHandler NppSearchPdaConditionCompleted;
        
        /// <remarks/>
        public event NppEditPdaConditionCompletedEventHandler NppEditPdaConditionCompleted;
        
        /// <remarks/>
        public event NppEditWorkPlantClasCompletedEventHandler NppEditWorkPlantClasCompleted;
        
        /// <remarks/>
        public event NppEditWorkSurveillanceInfoCompletedEventHandler NppEditWorkSurveillanceInfoCompleted;
        
        /// <remarks/>
        public event NppEditPatPrintHistoryCompletedEventHandler NppEditPatPrintHistoryCompleted;
        
        /// <remarks/>
        public event NppEditNascaShipStCompletedEventHandler NppEditNascaShipStCompleted;
        
        /// <remarks/>
        public event NppEditNascaShipSt2CompletedEventHandler NppEditNascaShipSt2Completed;
        
        /// <remarks/>
        public event NppReleaseShipLotCompletedEventHandler NppReleaseShipLotCompleted;
        
        /// <remarks/>
        public event NppPopLoginCompletedEventHandler NppPopLoginCompleted;
        
        /// <remarks/>
        public event NppSearchInlineMagLotCompletedEventHandler NppSearchInlineMagLotCompleted;
        
        /// <remarks/>
        public event NppNelInsertOrderMoveCompletedEventHandler NppNelInsertOrderMoveCompleted;
        
        /// <remarks/>
        public event NppNelInsertMnfctResultCompletedEventHandler NppNelInsertMnfctResultCompleted;
        
        /// <remarks/>
        public event NppNelInsertCutBlendOrderCompletedEventHandler NppNelInsertCutBlendOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppPublicLogin", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppPublicLogin(ref NppLoginInfo nppLoginInfo) {
            object[] results = this.Invoke("NppPublicLogin", new object[] {
                        nppLoginInfo});
            nppLoginInfo = ((NppLoginInfo)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppPublicLoginAsync(NppLoginInfo nppLoginInfo) {
            this.NppPublicLoginAsync(nppLoginInfo, null);
        }
        
        /// <remarks/>
        public void NppPublicLoginAsync(NppLoginInfo nppLoginInfo, object userState) {
            if ((this.NppPublicLoginOperationCompleted == null)) {
                this.NppPublicLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppPublicLoginOperationCompleted);
            }
            this.InvokeAsync("NppPublicLogin", new object[] {
                        nppLoginInfo}, this.NppPublicLoginOperationCompleted, userState);
        }
        
        private void OnNppPublicLoginOperationCompleted(object arg) {
            if ((this.NppPublicLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppPublicLoginCompleted(this, new NppPublicLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppPublicLogout", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppPublicLogout() {
            object[] results = this.Invoke("NppPublicLogout", new object[0]);
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppPublicLogoutAsync() {
            this.NppPublicLogoutAsync(null);
        }
        
        /// <remarks/>
        public void NppPublicLogoutAsync(object userState) {
            if ((this.NppPublicLogoutOperationCompleted == null)) {
                this.NppPublicLogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppPublicLogoutOperationCompleted);
            }
            this.InvokeAsync("NppPublicLogout", new object[0], this.NppPublicLogoutOperationCompleted, userState);
        }
        
        private void OnNppPublicLogoutOperationCompleted(object arg) {
            if ((this.NppPublicLogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppPublicLogoutCompleted(this, new NppPublicLogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchMaterialOrder", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchMaterialOrder(string mnfctinstNo, out NppInfoMaterialOrder orderInfo) {
            object[] results = this.Invoke("NppSearchMaterialOrder", new object[] {
                        mnfctinstNo});
            orderInfo = ((NppInfoMaterialOrder)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchMaterialOrderAsync(string mnfctinstNo) {
            this.NppSearchMaterialOrderAsync(mnfctinstNo, null);
        }
        
        /// <remarks/>
        public void NppSearchMaterialOrderAsync(string mnfctinstNo, object userState) {
            if ((this.NppSearchMaterialOrderOperationCompleted == null)) {
                this.NppSearchMaterialOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchMaterialOrderOperationCompleted);
            }
            this.InvokeAsync("NppSearchMaterialOrder", new object[] {
                        mnfctinstNo}, this.NppSearchMaterialOrderOperationCompleted, userState);
        }
        
        private void OnNppSearchMaterialOrderOperationCompleted(object arg) {
            if ((this.NppSearchMaterialOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchMaterialOrderCompleted(this, new NppSearchMaterialOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSeachManufactResult", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSeachManufactResult(string mnfctinstNo, out NppInfoMaterialResults[] resultsInfo) {
            object[] results = this.Invoke("NppSeachManufactResult", new object[] {
                        mnfctinstNo});
            resultsInfo = ((NppInfoMaterialResults[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSeachManufactResultAsync(string mnfctinstNo) {
            this.NppSeachManufactResultAsync(mnfctinstNo, null);
        }
        
        /// <remarks/>
        public void NppSeachManufactResultAsync(string mnfctinstNo, object userState) {
            if ((this.NppSeachManufactResultOperationCompleted == null)) {
                this.NppSeachManufactResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSeachManufactResultOperationCompleted);
            }
            this.InvokeAsync("NppSeachManufactResult", new object[] {
                        mnfctinstNo}, this.NppSeachManufactResultOperationCompleted, userState);
        }
        
        private void OnNppSeachManufactResultOperationCompleted(object arg) {
            if ((this.NppSeachManufactResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSeachManufactResultCompleted(this, new NppSeachManufactResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchBlendResinResult", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchBlendResinResult(int schResultID, out NppBlendResinResultInfo blendResinResultInfo) {
            object[] results = this.Invoke("NppSearchBlendResinResult", new object[] {
                        schResultID});
            blendResinResultInfo = ((NppBlendResinResultInfo)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchBlendResinResultAsync(int schResultID) {
            this.NppSearchBlendResinResultAsync(schResultID, null);
        }
        
        /// <remarks/>
        public void NppSearchBlendResinResultAsync(int schResultID, object userState) {
            if ((this.NppSearchBlendResinResultOperationCompleted == null)) {
                this.NppSearchBlendResinResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchBlendResinResultOperationCompleted);
            }
            this.InvokeAsync("NppSearchBlendResinResult", new object[] {
                        schResultID}, this.NppSearchBlendResinResultOperationCompleted, userState);
        }
        
        private void OnNppSearchBlendResinResultOperationCompleted(object arg) {
            if ((this.NppSearchBlendResinResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchBlendResinResultCompleted(this, new NppSearchBlendResinResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditBlendResinResult", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditBlendResinResult(NppBlendResinResultInfo resinResultInfo) {
            object[] results = this.Invoke("NppEditBlendResinResult", new object[] {
                        resinResultInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditBlendResinResultAsync(NppBlendResinResultInfo resinResultInfo) {
            this.NppEditBlendResinResultAsync(resinResultInfo, null);
        }
        
        /// <remarks/>
        public void NppEditBlendResinResultAsync(NppBlendResinResultInfo resinResultInfo, object userState) {
            if ((this.NppEditBlendResinResultOperationCompleted == null)) {
                this.NppEditBlendResinResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditBlendResinResultOperationCompleted);
            }
            this.InvokeAsync("NppEditBlendResinResult", new object[] {
                        resinResultInfo}, this.NppEditBlendResinResultOperationCompleted, userState);
        }
        
        private void OnNppEditBlendResinResultOperationCompleted(object arg) {
            if ((this.NppEditBlendResinResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditBlendResinResultCompleted(this, new NppEditBlendResinResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchBlendResinRelation", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchBlendResinRelation(int schParResultID, int schChiResultID, out NppBlendResinRelationInfo blendResinRelationInfo) {
            object[] results = this.Invoke("NppSearchBlendResinRelation", new object[] {
                        schParResultID,
                        schChiResultID});
            blendResinRelationInfo = ((NppBlendResinRelationInfo)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchBlendResinRelationAsync(int schParResultID, int schChiResultID) {
            this.NppSearchBlendResinRelationAsync(schParResultID, schChiResultID, null);
        }
        
        /// <remarks/>
        public void NppSearchBlendResinRelationAsync(int schParResultID, int schChiResultID, object userState) {
            if ((this.NppSearchBlendResinRelationOperationCompleted == null)) {
                this.NppSearchBlendResinRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchBlendResinRelationOperationCompleted);
            }
            this.InvokeAsync("NppSearchBlendResinRelation", new object[] {
                        schParResultID,
                        schChiResultID}, this.NppSearchBlendResinRelationOperationCompleted, userState);
        }
        
        private void OnNppSearchBlendResinRelationOperationCompleted(object arg) {
            if ((this.NppSearchBlendResinRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchBlendResinRelationCompleted(this, new NppSearchBlendResinRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditBlendResinRelation", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditBlendResinRelation(NppBlendResinRelationInfo resinRelationInfo) {
            object[] results = this.Invoke("NppEditBlendResinRelation", new object[] {
                        resinRelationInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditBlendResinRelationAsync(NppBlendResinRelationInfo resinRelationInfo) {
            this.NppEditBlendResinRelationAsync(resinRelationInfo, null);
        }
        
        /// <remarks/>
        public void NppEditBlendResinRelationAsync(NppBlendResinRelationInfo resinRelationInfo, object userState) {
            if ((this.NppEditBlendResinRelationOperationCompleted == null)) {
                this.NppEditBlendResinRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditBlendResinRelationOperationCompleted);
            }
            this.InvokeAsync("NppEditBlendResinRelation", new object[] {
                        resinRelationInfo}, this.NppEditBlendResinRelationOperationCompleted, userState);
        }
        
        private void OnNppEditBlendResinRelationOperationCompleted(object arg) {
            if ((this.NppEditBlendResinRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditBlendResinRelationCompleted(this, new NppEditBlendResinRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchBlendResinResultForVB", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchBlendResinResultForVB(int schResultID, out NppBlendResinResultInfo blendResinResultInfo) {
            object[] results = this.Invoke("NppSearchBlendResinResultForVB", new object[] {
                        schResultID});
            blendResinResultInfo = ((NppBlendResinResultInfo)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchBlendResinResultForVBAsync(int schResultID) {
            this.NppSearchBlendResinResultForVBAsync(schResultID, null);
        }
        
        /// <remarks/>
        public void NppSearchBlendResinResultForVBAsync(int schResultID, object userState) {
            if ((this.NppSearchBlendResinResultForVBOperationCompleted == null)) {
                this.NppSearchBlendResinResultForVBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchBlendResinResultForVBOperationCompleted);
            }
            this.InvokeAsync("NppSearchBlendResinResultForVB", new object[] {
                        schResultID}, this.NppSearchBlendResinResultForVBOperationCompleted, userState);
        }
        
        private void OnNppSearchBlendResinResultForVBOperationCompleted(object arg) {
            if ((this.NppSearchBlendResinResultForVBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchBlendResinResultForVBCompleted(this, new NppSearchBlendResinResultForVBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchMeasureRstInfo", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchMeasureRstInfo(NppSchMeasureRst schParams, out NppMeasureRstInfo[] measureRstInfo) {
            object[] results = this.Invoke("NppSearchMeasureRstInfo", new object[] {
                        schParams});
            measureRstInfo = ((NppMeasureRstInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchMeasureRstInfoAsync(NppSchMeasureRst schParams) {
            this.NppSearchMeasureRstInfoAsync(schParams, null);
        }
        
        /// <remarks/>
        public void NppSearchMeasureRstInfoAsync(NppSchMeasureRst schParams, object userState) {
            if ((this.NppSearchMeasureRstInfoOperationCompleted == null)) {
                this.NppSearchMeasureRstInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchMeasureRstInfoOperationCompleted);
            }
            this.InvokeAsync("NppSearchMeasureRstInfo", new object[] {
                        schParams}, this.NppSearchMeasureRstInfoOperationCompleted, userState);
        }
        
        private void OnNppSearchMeasureRstInfoOperationCompleted(object arg) {
            if ((this.NppSearchMeasureRstInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchMeasureRstInfoCompleted(this, new NppSearchMeasureRstInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditMeasureRstInfo", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditMeasureRstInfo(NppMeasureRstInfo measureRstInfo) {
            object[] results = this.Invoke("NppEditMeasureRstInfo", new object[] {
                        measureRstInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditMeasureRstInfoAsync(NppMeasureRstInfo measureRstInfo) {
            this.NppEditMeasureRstInfoAsync(measureRstInfo, null);
        }
        
        /// <remarks/>
        public void NppEditMeasureRstInfoAsync(NppMeasureRstInfo measureRstInfo, object userState) {
            if ((this.NppEditMeasureRstInfoOperationCompleted == null)) {
                this.NppEditMeasureRstInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditMeasureRstInfoOperationCompleted);
            }
            this.InvokeAsync("NppEditMeasureRstInfo", new object[] {
                        measureRstInfo}, this.NppEditMeasureRstInfoOperationCompleted, userState);
        }
        
        private void OnNppEditMeasureRstInfoOperationCompleted(object arg) {
            if ((this.NppEditMeasureRstInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditMeasureRstInfoCompleted(this, new NppEditMeasureRstInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditManufactOrderResult", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditManufactOrderResult(NppEditManufactOrderInfo editOrderInfo) {
            object[] results = this.Invoke("NppEditManufactOrderResult", new object[] {
                        editOrderInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditManufactOrderResultAsync(NppEditManufactOrderInfo editOrderInfo) {
            this.NppEditManufactOrderResultAsync(editOrderInfo, null);
        }
        
        /// <remarks/>
        public void NppEditManufactOrderResultAsync(NppEditManufactOrderInfo editOrderInfo, object userState) {
            if ((this.NppEditManufactOrderResultOperationCompleted == null)) {
                this.NppEditManufactOrderResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditManufactOrderResultOperationCompleted);
            }
            this.InvokeAsync("NppEditManufactOrderResult", new object[] {
                        editOrderInfo}, this.NppEditManufactOrderResultOperationCompleted, userState);
        }
        
        private void OnNppEditManufactOrderResultOperationCompleted(object arg) {
            if ((this.NppEditManufactOrderResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditManufactOrderResultCompleted(this, new NppEditManufactOrderResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchTargetLotManufactResultFacility", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchTargetLotManufactResultFacility(NppSchTargetLotManufactResultFacility schParam, out NppResultsFacilityInfo[] resultsFacilityInfos) {
            object[] results = this.Invoke("NppSearchTargetLotManufactResultFacility", new object[] {
                        schParam});
            resultsFacilityInfos = ((NppResultsFacilityInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchTargetLotManufactResultFacilityAsync(NppSchTargetLotManufactResultFacility schParam) {
            this.NppSearchTargetLotManufactResultFacilityAsync(schParam, null);
        }
        
        /// <remarks/>
        public void NppSearchTargetLotManufactResultFacilityAsync(NppSchTargetLotManufactResultFacility schParam, object userState) {
            if ((this.NppSearchTargetLotManufactResultFacilityOperationCompleted == null)) {
                this.NppSearchTargetLotManufactResultFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchTargetLotManufactResultFacilityOperationCompleted);
            }
            this.InvokeAsync("NppSearchTargetLotManufactResultFacility", new object[] {
                        schParam}, this.NppSearchTargetLotManufactResultFacilityOperationCompleted, userState);
        }
        
        private void OnNppSearchTargetLotManufactResultFacilityOperationCompleted(object arg) {
            if ((this.NppSearchTargetLotManufactResultFacilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchTargetLotManufactResultFacilityCompleted(this, new NppSearchTargetLotManufactResultFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchCarrierLot", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchCarrierLot(string NascaLotNo, string CarrierNo, string MagazineNo, out NppCarrierLotInfo[] rsultsCarrierInfo) {
            object[] results = this.Invoke("NppSearchCarrierLot", new object[] {
                        NascaLotNo,
                        CarrierNo,
                        MagazineNo});
            rsultsCarrierInfo = ((NppCarrierLotInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchCarrierLotAsync(string NascaLotNo, string CarrierNo, string MagazineNo) {
            this.NppSearchCarrierLotAsync(NascaLotNo, CarrierNo, MagazineNo, null);
        }
        
        /// <remarks/>
        public void NppSearchCarrierLotAsync(string NascaLotNo, string CarrierNo, string MagazineNo, object userState) {
            if ((this.NppSearchCarrierLotOperationCompleted == null)) {
                this.NppSearchCarrierLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchCarrierLotOperationCompleted);
            }
            this.InvokeAsync("NppSearchCarrierLot", new object[] {
                        NascaLotNo,
                        CarrierNo,
                        MagazineNo}, this.NppSearchCarrierLotOperationCompleted, userState);
        }
        
        private void OnNppSearchCarrierLotOperationCompleted(object arg) {
            if ((this.NppSearchCarrierLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchCarrierLotCompleted(this, new NppSearchCarrierLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditCarrierChange", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditCarrierChange(string NascaLotNo, string OldCarrierNo, string NewCarrierNo, string OldMagazineNo, string NewMagazineNo) {
            object[] results = this.Invoke("NppEditCarrierChange", new object[] {
                        NascaLotNo,
                        OldCarrierNo,
                        NewCarrierNo,
                        OldMagazineNo,
                        NewMagazineNo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditCarrierChangeAsync(string NascaLotNo, string OldCarrierNo, string NewCarrierNo, string OldMagazineNo, string NewMagazineNo) {
            this.NppEditCarrierChangeAsync(NascaLotNo, OldCarrierNo, NewCarrierNo, OldMagazineNo, NewMagazineNo, null);
        }
        
        /// <remarks/>
        public void NppEditCarrierChangeAsync(string NascaLotNo, string OldCarrierNo, string NewCarrierNo, string OldMagazineNo, string NewMagazineNo, object userState) {
            if ((this.NppEditCarrierChangeOperationCompleted == null)) {
                this.NppEditCarrierChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditCarrierChangeOperationCompleted);
            }
            this.InvokeAsync("NppEditCarrierChange", new object[] {
                        NascaLotNo,
                        OldCarrierNo,
                        NewCarrierNo,
                        OldMagazineNo,
                        NewMagazineNo}, this.NppEditCarrierChangeOperationCompleted, userState);
        }
        
        private void OnNppEditCarrierChangeOperationCompleted(object arg) {
            if ((this.NppEditCarrierChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditCarrierChangeCompleted(this, new NppEditCarrierChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppAddFrameAssignCount", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppAddFrameAssignCount(NppFrameAssignInfo frameAssignInfo) {
            object[] results = this.Invoke("NppAddFrameAssignCount", new object[] {
                        frameAssignInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppAddFrameAssignCountAsync(NppFrameAssignInfo frameAssignInfo) {
            this.NppAddFrameAssignCountAsync(frameAssignInfo, null);
        }
        
        /// <remarks/>
        public void NppAddFrameAssignCountAsync(NppFrameAssignInfo frameAssignInfo, object userState) {
            if ((this.NppAddFrameAssignCountOperationCompleted == null)) {
                this.NppAddFrameAssignCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppAddFrameAssignCountOperationCompleted);
            }
            this.InvokeAsync("NppAddFrameAssignCount", new object[] {
                        frameAssignInfo}, this.NppAddFrameAssignCountOperationCompleted, userState);
        }
        
        private void OnNppAddFrameAssignCountOperationCompleted(object arg) {
            if ((this.NppAddFrameAssignCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppAddFrameAssignCountCompleted(this, new NppAddFrameAssignCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppPubEditManufactOrder", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppPubEditManufactOrder(NppPubMaterialOrderInfo orderInfo, NppLotCharInfo[] lotCharInfo, out string[] retMnfctInstNo) {
            object[] results = this.Invoke("NppPubEditManufactOrder", new object[] {
                        orderInfo,
                        lotCharInfo});
            retMnfctInstNo = ((string[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppPubEditManufactOrderAsync(NppPubMaterialOrderInfo orderInfo, NppLotCharInfo[] lotCharInfo) {
            this.NppPubEditManufactOrderAsync(orderInfo, lotCharInfo, null);
        }
        
        /// <remarks/>
        public void NppPubEditManufactOrderAsync(NppPubMaterialOrderInfo orderInfo, NppLotCharInfo[] lotCharInfo, object userState) {
            if ((this.NppPubEditManufactOrderOperationCompleted == null)) {
                this.NppPubEditManufactOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppPubEditManufactOrderOperationCompleted);
            }
            this.InvokeAsync("NppPubEditManufactOrder", new object[] {
                        orderInfo,
                        lotCharInfo}, this.NppPubEditManufactOrderOperationCompleted, userState);
        }
        
        private void OnNppPubEditManufactOrderOperationCompleted(object arg) {
            if ((this.NppPubEditManufactOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppPubEditManufactOrderCompleted(this, new NppPubEditManufactOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppPubEditManufactResult", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppPubEditManufactResult(NppPubMaterialOrderInfo orderInfo, NppLotCharInfo[] lotCharInfo, out string[] retMnfctRslNo) {
            object[] results = this.Invoke("NppPubEditManufactResult", new object[] {
                        orderInfo,
                        lotCharInfo});
            retMnfctRslNo = ((string[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppPubEditManufactResultAsync(NppPubMaterialOrderInfo orderInfo, NppLotCharInfo[] lotCharInfo) {
            this.NppPubEditManufactResultAsync(orderInfo, lotCharInfo, null);
        }
        
        /// <remarks/>
        public void NppPubEditManufactResultAsync(NppPubMaterialOrderInfo orderInfo, NppLotCharInfo[] lotCharInfo, object userState) {
            if ((this.NppPubEditManufactResultOperationCompleted == null)) {
                this.NppPubEditManufactResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppPubEditManufactResultOperationCompleted);
            }
            this.InvokeAsync("NppPubEditManufactResult", new object[] {
                        orderInfo,
                        lotCharInfo}, this.NppPubEditManufactResultOperationCompleted, userState);
        }
        
        private void OnNppPubEditManufactResultOperationCompleted(object arg) {
            if ((this.NppPubEditManufactResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppPubEditManufactResultCompleted(this, new NppPubEditManufactResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchResultsFacility", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchResultsFacility(string plantCd, string start2EndDt, out NppResultsFacilityInfo[] resultsFacInfo) {
            object[] results = this.Invoke("NppSearchResultsFacility", new object[] {
                        plantCd,
                        start2EndDt});
            resultsFacInfo = ((NppResultsFacilityInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchResultsFacilityAsync(string plantCd, string start2EndDt) {
            this.NppSearchResultsFacilityAsync(plantCd, start2EndDt, null);
        }
        
        /// <remarks/>
        public void NppSearchResultsFacilityAsync(string plantCd, string start2EndDt, object userState) {
            if ((this.NppSearchResultsFacilityOperationCompleted == null)) {
                this.NppSearchResultsFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchResultsFacilityOperationCompleted);
            }
            this.InvokeAsync("NppSearchResultsFacility", new object[] {
                        plantCd,
                        start2EndDt}, this.NppSearchResultsFacilityOperationCompleted, userState);
        }
        
        private void OnNppSearchResultsFacilityOperationCompleted(object arg) {
            if ((this.NppSearchResultsFacilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchResultsFacilityCompleted(this, new NppSearchResultsFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditLotChar", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditLotChar(NppLotCharInfo lotCharInfo) {
            object[] results = this.Invoke("NppEditLotChar", new object[] {
                        lotCharInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditLotCharAsync(NppLotCharInfo lotCharInfo) {
            this.NppEditLotCharAsync(lotCharInfo, null);
        }
        
        /// <remarks/>
        public void NppEditLotCharAsync(NppLotCharInfo lotCharInfo, object userState) {
            if ((this.NppEditLotCharOperationCompleted == null)) {
                this.NppEditLotCharOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditLotCharOperationCompleted);
            }
            this.InvokeAsync("NppEditLotChar", new object[] {
                        lotCharInfo}, this.NppEditLotCharOperationCompleted, userState);
        }
        
        private void OnNppEditLotCharOperationCompleted(object arg) {
            if ((this.NppEditLotCharCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditLotCharCompleted(this, new NppEditLotCharCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppInsertLotCharProcessSchedule", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppInsertLotCharProcessSchedule(NppLotCharProcessScheduleInfo info) {
            object[] results = this.Invoke("NppInsertLotCharProcessSchedule", new object[] {
                        info});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppInsertLotCharProcessScheduleAsync(NppLotCharProcessScheduleInfo info) {
            this.NppInsertLotCharProcessScheduleAsync(info, null);
        }
        
        /// <remarks/>
        public void NppInsertLotCharProcessScheduleAsync(NppLotCharProcessScheduleInfo info, object userState) {
            if ((this.NppInsertLotCharProcessScheduleOperationCompleted == null)) {
                this.NppInsertLotCharProcessScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppInsertLotCharProcessScheduleOperationCompleted);
            }
            this.InvokeAsync("NppInsertLotCharProcessSchedule", new object[] {
                        info}, this.NppInsertLotCharProcessScheduleOperationCompleted, userState);
        }
        
        private void OnNppInsertLotCharProcessScheduleOperationCompleted(object arg) {
            if ((this.NppInsertLotCharProcessScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppInsertLotCharProcessScheduleCompleted(this, new NppInsertLotCharProcessScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchLotCharProcessSchedule", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchLotCharProcessSchedule(NppSchLotCharProcessSchedule schParam, out NppLotCharProcessScheduleInfo[] retInfos) {
            object[] results = this.Invoke("NppSearchLotCharProcessSchedule", new object[] {
                        schParam});
            retInfos = ((NppLotCharProcessScheduleInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchLotCharProcessScheduleAsync(NppSchLotCharProcessSchedule schParam) {
            this.NppSearchLotCharProcessScheduleAsync(schParam, null);
        }
        
        /// <remarks/>
        public void NppSearchLotCharProcessScheduleAsync(NppSchLotCharProcessSchedule schParam, object userState) {
            if ((this.NppSearchLotCharProcessScheduleOperationCompleted == null)) {
                this.NppSearchLotCharProcessScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchLotCharProcessScheduleOperationCompleted);
            }
            this.InvokeAsync("NppSearchLotCharProcessSchedule", new object[] {
                        schParam}, this.NppSearchLotCharProcessScheduleOperationCompleted, userState);
        }
        
        private void OnNppSearchLotCharProcessScheduleOperationCompleted(object arg) {
            if ((this.NppSearchLotCharProcessScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchLotCharProcessScheduleCompleted(this, new NppSearchLotCharProcessScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppOutRawMat", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppOutRawMat(NppInfoOutRawMat infoOutMat) {
            object[] results = this.Invoke("NppOutRawMat", new object[] {
                        infoOutMat});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppOutRawMatAsync(NppInfoOutRawMat infoOutMat) {
            this.NppOutRawMatAsync(infoOutMat, null);
        }
        
        /// <remarks/>
        public void NppOutRawMatAsync(NppInfoOutRawMat infoOutMat, object userState) {
            if ((this.NppOutRawMatOperationCompleted == null)) {
                this.NppOutRawMatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppOutRawMatOperationCompleted);
            }
            this.InvokeAsync("NppOutRawMat", new object[] {
                        infoOutMat}, this.NppOutRawMatOperationCompleted, userState);
        }
        
        private void OnNppOutRawMatOperationCompleted(object arg) {
            if ((this.NppOutRawMatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppOutRawMatCompleted(this, new NppOutRawMatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppMoveOutMatFromSLA", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppMoveOutMatFromSLA(NppInfoMoveOutMatFromSLA infoMoveOutMatFromSLA) {
            object[] results = this.Invoke("NppMoveOutMatFromSLA", new object[] {
                        infoMoveOutMatFromSLA});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppMoveOutMatFromSLAAsync(NppInfoMoveOutMatFromSLA infoMoveOutMatFromSLA) {
            this.NppMoveOutMatFromSLAAsync(infoMoveOutMatFromSLA, null);
        }
        
        /// <remarks/>
        public void NppMoveOutMatFromSLAAsync(NppInfoMoveOutMatFromSLA infoMoveOutMatFromSLA, object userState) {
            if ((this.NppMoveOutMatFromSLAOperationCompleted == null)) {
                this.NppMoveOutMatFromSLAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppMoveOutMatFromSLAOperationCompleted);
            }
            this.InvokeAsync("NppMoveOutMatFromSLA", new object[] {
                        infoMoveOutMatFromSLA}, this.NppMoveOutMatFromSLAOperationCompleted, userState);
        }
        
        private void OnNppMoveOutMatFromSLAOperationCompleted(object arg) {
            if ((this.NppMoveOutMatFromSLACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppMoveOutMatFromSLACompleted(this, new NppMoveOutMatFromSLACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppBinMovePayment", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppBinMovePayment(NppPubBinMove infMoveOut) {
            object[] results = this.Invoke("NppBinMovePayment", new object[] {
                        infMoveOut});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppBinMovePaymentAsync(NppPubBinMove infMoveOut) {
            this.NppBinMovePaymentAsync(infMoveOut, null);
        }
        
        /// <remarks/>
        public void NppBinMovePaymentAsync(NppPubBinMove infMoveOut, object userState) {
            if ((this.NppBinMovePaymentOperationCompleted == null)) {
                this.NppBinMovePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppBinMovePaymentOperationCompleted);
            }
            this.InvokeAsync("NppBinMovePayment", new object[] {
                        infMoveOut}, this.NppBinMovePaymentOperationCompleted, userState);
        }
        
        private void OnNppBinMovePaymentOperationCompleted(object arg) {
            if ((this.NppBinMovePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppBinMovePaymentCompleted(this, new NppBinMovePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchInventory", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchInventory(NppSchInventory schInventory, out NppLotInfo3 lotInfo) {
            object[] results = this.Invoke("NppSearchInventory", new object[] {
                        schInventory});
            lotInfo = ((NppLotInfo3)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchInventoryAsync(NppSchInventory schInventory) {
            this.NppSearchInventoryAsync(schInventory, null);
        }
        
        /// <remarks/>
        public void NppSearchInventoryAsync(NppSchInventory schInventory, object userState) {
            if ((this.NppSearchInventoryOperationCompleted == null)) {
                this.NppSearchInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchInventoryOperationCompleted);
            }
            this.InvokeAsync("NppSearchInventory", new object[] {
                        schInventory}, this.NppSearchInventoryOperationCompleted, userState);
        }
        
        private void OnNppSearchInventoryOperationCompleted(object arg) {
            if ((this.NppSearchInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchInventoryCompleted(this, new NppSearchInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppPopMoveOutMatFromSLA", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppPopMoveOutMatFromSLA(NppLoginInfo nppLoginInfo, NppInfoMoveOutMatFromSLA infoMoveOutMatFromSLA) {
            object[] results = this.Invoke("NppPopMoveOutMatFromSLA", new object[] {
                        nppLoginInfo,
                        infoMoveOutMatFromSLA});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppPopMoveOutMatFromSLAAsync(NppLoginInfo nppLoginInfo, NppInfoMoveOutMatFromSLA infoMoveOutMatFromSLA) {
            this.NppPopMoveOutMatFromSLAAsync(nppLoginInfo, infoMoveOutMatFromSLA, null);
        }
        
        /// <remarks/>
        public void NppPopMoveOutMatFromSLAAsync(NppLoginInfo nppLoginInfo, NppInfoMoveOutMatFromSLA infoMoveOutMatFromSLA, object userState) {
            if ((this.NppPopMoveOutMatFromSLAOperationCompleted == null)) {
                this.NppPopMoveOutMatFromSLAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppPopMoveOutMatFromSLAOperationCompleted);
            }
            this.InvokeAsync("NppPopMoveOutMatFromSLA", new object[] {
                        nppLoginInfo,
                        infoMoveOutMatFromSLA}, this.NppPopMoveOutMatFromSLAOperationCompleted, userState);
        }
        
        private void OnNppPopMoveOutMatFromSLAOperationCompleted(object arg) {
            if ((this.NppPopMoveOutMatFromSLACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppPopMoveOutMatFromSLACompleted(this, new NppPopMoveOutMatFromSLACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppPopSearchInventory", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppPopSearchInventory(NppSchInventory schInventory, NppLoginInfo nppLoginInfo, out NppLotInfo3 lotInfo) {
            object[] results = this.Invoke("NppPopSearchInventory", new object[] {
                        schInventory,
                        nppLoginInfo});
            lotInfo = ((NppLotInfo3)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppPopSearchInventoryAsync(NppSchInventory schInventory, NppLoginInfo nppLoginInfo) {
            this.NppPopSearchInventoryAsync(schInventory, nppLoginInfo, null);
        }
        
        /// <remarks/>
        public void NppPopSearchInventoryAsync(NppSchInventory schInventory, NppLoginInfo nppLoginInfo, object userState) {
            if ((this.NppPopSearchInventoryOperationCompleted == null)) {
                this.NppPopSearchInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppPopSearchInventoryOperationCompleted);
            }
            this.InvokeAsync("NppPopSearchInventory", new object[] {
                        schInventory,
                        nppLoginInfo}, this.NppPopSearchInventoryOperationCompleted, userState);
        }
        
        private void OnNppPopSearchInventoryOperationCompleted(object arg) {
            if ((this.NppPopSearchInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppPopSearchInventoryCompleted(this, new NppPopSearchInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppPopOutRawMat", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppPopOutRawMat(NppLoginInfo nppLoginInfo, NppInfoOutRawMat infoOutMat) {
            object[] results = this.Invoke("NppPopOutRawMat", new object[] {
                        nppLoginInfo,
                        infoOutMat});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppPopOutRawMatAsync(NppLoginInfo nppLoginInfo, NppInfoOutRawMat infoOutMat) {
            this.NppPopOutRawMatAsync(nppLoginInfo, infoOutMat, null);
        }
        
        /// <remarks/>
        public void NppPopOutRawMatAsync(NppLoginInfo nppLoginInfo, NppInfoOutRawMat infoOutMat, object userState) {
            if ((this.NppPopOutRawMatOperationCompleted == null)) {
                this.NppPopOutRawMatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppPopOutRawMatOperationCompleted);
            }
            this.InvokeAsync("NppPopOutRawMat", new object[] {
                        nppLoginInfo,
                        infoOutMat}, this.NppPopOutRawMatOperationCompleted, userState);
        }
        
        private void OnNppPopOutRawMatOperationCompleted(object arg) {
            if ((this.NppPopOutRawMatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppPopOutRawMatCompleted(this, new NppPopOutRawMatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppUpdateSelectSumSt", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppUpdateSelectSumSt(NppUpdNascaLotInfo updInfo) {
            object[] results = this.Invoke("NppUpdateSelectSumSt", new object[] {
                        updInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppUpdateSelectSumStAsync(NppUpdNascaLotInfo updInfo) {
            this.NppUpdateSelectSumStAsync(updInfo, null);
        }
        
        /// <remarks/>
        public void NppUpdateSelectSumStAsync(NppUpdNascaLotInfo updInfo, object userState) {
            if ((this.NppUpdateSelectSumStOperationCompleted == null)) {
                this.NppUpdateSelectSumStOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppUpdateSelectSumStOperationCompleted);
            }
            this.InvokeAsync("NppUpdateSelectSumSt", new object[] {
                        updInfo}, this.NppUpdateSelectSumStOperationCompleted, userState);
        }
        
        private void OnNppUpdateSelectSumStOperationCompleted(object arg) {
            if ((this.NppUpdateSelectSumStCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppUpdateSelectSumStCompleted(this, new NppUpdateSelectSumStCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchLotChar", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchLotChar(NppLotCharInfo schParams, out NppLotCharInfo[] lotCharInfo) {
            object[] results = this.Invoke("NppSearchLotChar", new object[] {
                        schParams});
            lotCharInfo = ((NppLotCharInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchLotCharAsync(NppLotCharInfo schParams) {
            this.NppSearchLotCharAsync(schParams, null);
        }
        
        /// <remarks/>
        public void NppSearchLotCharAsync(NppLotCharInfo schParams, object userState) {
            if ((this.NppSearchLotCharOperationCompleted == null)) {
                this.NppSearchLotCharOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchLotCharOperationCompleted);
            }
            this.InvokeAsync("NppSearchLotChar", new object[] {
                        schParams}, this.NppSearchLotCharOperationCompleted, userState);
        }
        
        private void OnNppSearchLotCharOperationCompleted(object arg) {
            if ((this.NppSearchLotCharCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchLotCharCompleted(this, new NppSearchLotCharCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchLotCharPb", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchLotCharPb(NppLotCharInfo schParams, out NppLotCharInfo[] lotCharInfo) {
            object[] results = this.Invoke("NppSearchLotCharPb", new object[] {
                        schParams});
            lotCharInfo = ((NppLotCharInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchLotCharPbAsync(NppLotCharInfo schParams) {
            this.NppSearchLotCharPbAsync(schParams, null);
        }
        
        /// <remarks/>
        public void NppSearchLotCharPbAsync(NppLotCharInfo schParams, object userState) {
            if ((this.NppSearchLotCharPbOperationCompleted == null)) {
                this.NppSearchLotCharPbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchLotCharPbOperationCompleted);
            }
            this.InvokeAsync("NppSearchLotCharPb", new object[] {
                        schParams}, this.NppSearchLotCharPbOperationCompleted, userState);
        }
        
        private void OnNppSearchLotCharPbOperationCompleted(object arg) {
            if ((this.NppSearchLotCharPbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchLotCharPbCompleted(this, new NppSearchLotCharPbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppUpdateQultymnteDt", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppUpdateQultymnteDt(NppUpdRootsLotInfo updInfo) {
            object[] results = this.Invoke("NppUpdateQultymnteDt", new object[] {
                        updInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppUpdateQultymnteDtAsync(NppUpdRootsLotInfo updInfo) {
            this.NppUpdateQultymnteDtAsync(updInfo, null);
        }
        
        /// <remarks/>
        public void NppUpdateQultymnteDtAsync(NppUpdRootsLotInfo updInfo, object userState) {
            if ((this.NppUpdateQultymnteDtOperationCompleted == null)) {
                this.NppUpdateQultymnteDtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppUpdateQultymnteDtOperationCompleted);
            }
            this.InvokeAsync("NppUpdateQultymnteDt", new object[] {
                        updInfo}, this.NppUpdateQultymnteDtOperationCompleted, userState);
        }
        
        private void OnNppUpdateQultymnteDtOperationCompleted(object arg) {
            if ((this.NppUpdateQultymnteDtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppUpdateQultymnteDtCompleted(this, new NppUpdateQultymnteDtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchInventoryRootsLot", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchInventoryRootsLot(NppSchInventory schInventory, out NppLotInfo3[] lotInfo) {
            object[] results = this.Invoke("NppSearchInventoryRootsLot", new object[] {
                        schInventory});
            lotInfo = ((NppLotInfo3[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchInventoryRootsLotAsync(NppSchInventory schInventory) {
            this.NppSearchInventoryRootsLotAsync(schInventory, null);
        }
        
        /// <remarks/>
        public void NppSearchInventoryRootsLotAsync(NppSchInventory schInventory, object userState) {
            if ((this.NppSearchInventoryRootsLotOperationCompleted == null)) {
                this.NppSearchInventoryRootsLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchInventoryRootsLotOperationCompleted);
            }
            this.InvokeAsync("NppSearchInventoryRootsLot", new object[] {
                        schInventory}, this.NppSearchInventoryRootsLotOperationCompleted, userState);
        }
        
        private void OnNppSearchInventoryRootsLotOperationCompleted(object arg) {
            if ((this.NppSearchInventoryRootsLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchInventoryRootsLotCompleted(this, new NppSearchInventoryRootsLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchTargetBinInventory", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchTargetBinInventory(NppSchInventory schInventory, out NppLotInfo3[] lotInfo) {
            object[] results = this.Invoke("NppSearchTargetBinInventory", new object[] {
                        schInventory});
            lotInfo = ((NppLotInfo3[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchTargetBinInventoryAsync(NppSchInventory schInventory) {
            this.NppSearchTargetBinInventoryAsync(schInventory, null);
        }
        
        /// <remarks/>
        public void NppSearchTargetBinInventoryAsync(NppSchInventory schInventory, object userState) {
            if ((this.NppSearchTargetBinInventoryOperationCompleted == null)) {
                this.NppSearchTargetBinInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchTargetBinInventoryOperationCompleted);
            }
            this.InvokeAsync("NppSearchTargetBinInventory", new object[] {
                        schInventory}, this.NppSearchTargetBinInventoryOperationCompleted, userState);
        }
        
        private void OnNppSearchTargetBinInventoryOperationCompleted(object arg) {
            if ((this.NppSearchTargetBinInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchTargetBinInventoryCompleted(this, new NppSearchTargetBinInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchOnlyNascaLotPub", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchOnlyNascaLotPub(string typeCD, string nascaLotNO, out NppNascaLotInfo[] nascaLotInfo) {
            object[] results = this.Invoke("NppSearchOnlyNascaLotPub", new object[] {
                        typeCD,
                        nascaLotNO});
            nascaLotInfo = ((NppNascaLotInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchOnlyNascaLotPubAsync(string typeCD, string nascaLotNO) {
            this.NppSearchOnlyNascaLotPubAsync(typeCD, nascaLotNO, null);
        }
        
        /// <remarks/>
        public void NppSearchOnlyNascaLotPubAsync(string typeCD, string nascaLotNO, object userState) {
            if ((this.NppSearchOnlyNascaLotPubOperationCompleted == null)) {
                this.NppSearchOnlyNascaLotPubOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchOnlyNascaLotPubOperationCompleted);
            }
            this.InvokeAsync("NppSearchOnlyNascaLotPub", new object[] {
                        typeCD,
                        nascaLotNO}, this.NppSearchOnlyNascaLotPubOperationCompleted, userState);
        }
        
        private void OnNppSearchOnlyNascaLotPubOperationCompleted(object arg) {
            if ((this.NppSearchOnlyNascaLotPubCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchOnlyNascaLotPubCompleted(this, new NppSearchOnlyNascaLotPubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppUpdateNascaLotComment", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppUpdateNascaLotComment(string typeCD, string nascaLotNO, string commentNm) {
            object[] results = this.Invoke("NppUpdateNascaLotComment", new object[] {
                        typeCD,
                        nascaLotNO,
                        commentNm});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppUpdateNascaLotCommentAsync(string typeCD, string nascaLotNO, string commentNm) {
            this.NppUpdateNascaLotCommentAsync(typeCD, nascaLotNO, commentNm, null);
        }
        
        /// <remarks/>
        public void NppUpdateNascaLotCommentAsync(string typeCD, string nascaLotNO, string commentNm, object userState) {
            if ((this.NppUpdateNascaLotCommentOperationCompleted == null)) {
                this.NppUpdateNascaLotCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppUpdateNascaLotCommentOperationCompleted);
            }
            this.InvokeAsync("NppUpdateNascaLotComment", new object[] {
                        typeCD,
                        nascaLotNO,
                        commentNm}, this.NppUpdateNascaLotCommentOperationCompleted, userState);
        }
        
        private void OnNppUpdateNascaLotCommentOperationCompleted(object arg) {
            if ((this.NppUpdateNascaLotCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppUpdateNascaLotCommentCompleted(this, new NppUpdateNascaLotCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppUpdateLtStatus", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppUpdateLtStatus(string nascaLotNO, string ltStatusCD) {
            object[] results = this.Invoke("NppUpdateLtStatus", new object[] {
                        nascaLotNO,
                        ltStatusCD});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppUpdateLtStatusAsync(string nascaLotNO, string ltStatusCD) {
            this.NppUpdateLtStatusAsync(nascaLotNO, ltStatusCD, null);
        }
        
        /// <remarks/>
        public void NppUpdateLtStatusAsync(string nascaLotNO, string ltStatusCD, object userState) {
            if ((this.NppUpdateLtStatusOperationCompleted == null)) {
                this.NppUpdateLtStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppUpdateLtStatusOperationCompleted);
            }
            this.InvokeAsync("NppUpdateLtStatus", new object[] {
                        nascaLotNO,
                        ltStatusCD}, this.NppUpdateLtStatusOperationCompleted, userState);
        }
        
        private void OnNppUpdateLtStatusOperationCompleted(object arg) {
            if ((this.NppUpdateLtStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppUpdateLtStatusCompleted(this, new NppUpdateLtStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppGetMaterialNM", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppGetMaterialNM(string materialCD, out string materialNM) {
            object[] results = this.Invoke("NppGetMaterialNM", new object[] {
                        materialCD});
            materialNM = ((string)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppGetMaterialNMAsync(string materialCD) {
            this.NppGetMaterialNMAsync(materialCD, null);
        }
        
        /// <remarks/>
        public void NppGetMaterialNMAsync(string materialCD, object userState) {
            if ((this.NppGetMaterialNMOperationCompleted == null)) {
                this.NppGetMaterialNMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppGetMaterialNMOperationCompleted);
            }
            this.InvokeAsync("NppGetMaterialNM", new object[] {
                        materialCD}, this.NppGetMaterialNMOperationCompleted, userState);
        }
        
        private void OnNppGetMaterialNMOperationCompleted(object arg) {
            if ((this.NppGetMaterialNMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppGetMaterialNMCompleted(this, new NppGetMaterialNMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppGetSectionBinInfo", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppGetSectionBinInfo(string sectionCD, out NppBinInfo[] binInfo) {
            object[] results = this.Invoke("NppGetSectionBinInfo", new object[] {
                        sectionCD});
            binInfo = ((NppBinInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppGetSectionBinInfoAsync(string sectionCD) {
            this.NppGetSectionBinInfoAsync(sectionCD, null);
        }
        
        /// <remarks/>
        public void NppGetSectionBinInfoAsync(string sectionCD, object userState) {
            if ((this.NppGetSectionBinInfoOperationCompleted == null)) {
                this.NppGetSectionBinInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppGetSectionBinInfoOperationCompleted);
            }
            this.InvokeAsync("NppGetSectionBinInfo", new object[] {
                        sectionCD}, this.NppGetSectionBinInfoOperationCompleted, userState);
        }
        
        private void OnNppGetSectionBinInfoOperationCompleted(object arg) {
            if ((this.NppGetSectionBinInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppGetSectionBinInfoCompleted(this, new NppGetSectionBinInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppGetLotCharList", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppGetLotCharList(NppSchLotCharList schLCList, out NppLotCharInfo[] lotCharListInfos) {
            object[] results = this.Invoke("NppGetLotCharList", new object[] {
                        schLCList});
            lotCharListInfos = ((NppLotCharInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppGetLotCharListAsync(NppSchLotCharList schLCList) {
            this.NppGetLotCharListAsync(schLCList, null);
        }
        
        /// <remarks/>
        public void NppGetLotCharListAsync(NppSchLotCharList schLCList, object userState) {
            if ((this.NppGetLotCharListOperationCompleted == null)) {
                this.NppGetLotCharListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppGetLotCharListOperationCompleted);
            }
            this.InvokeAsync("NppGetLotCharList", new object[] {
                        schLCList}, this.NppGetLotCharListOperationCompleted, userState);
        }
        
        private void OnNppGetLotCharListOperationCompleted(object arg) {
            if ((this.NppGetLotCharListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppGetLotCharListCompleted(this, new NppGetLotCharListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchNFormSuffix", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchNFormSuffix(int fgroupCD, out NppNFormGroupInfo[] nFormGroupInfo) {
            object[] results = this.Invoke("NppSearchNFormSuffix", new object[] {
                        fgroupCD});
            nFormGroupInfo = ((NppNFormGroupInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchNFormSuffixAsync(int fgroupCD) {
            this.NppSearchNFormSuffixAsync(fgroupCD, null);
        }
        
        /// <remarks/>
        public void NppSearchNFormSuffixAsync(int fgroupCD, object userState) {
            if ((this.NppSearchNFormSuffixOperationCompleted == null)) {
                this.NppSearchNFormSuffixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchNFormSuffixOperationCompleted);
            }
            this.InvokeAsync("NppSearchNFormSuffix", new object[] {
                        fgroupCD}, this.NppSearchNFormSuffixOperationCompleted, userState);
        }
        
        private void OnNppSearchNFormSuffixOperationCompleted(object arg) {
            if ((this.NppSearchNFormSuffixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchNFormSuffixCompleted(this, new NppSearchNFormSuffixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchMstLotChar", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchMstLotChar(string lotCharCD, out NppLotCharInfo[] lotCharInfo) {
            object[] results = this.Invoke("NppSearchMstLotChar", new object[] {
                        lotCharCD});
            lotCharInfo = ((NppLotCharInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchMstLotCharAsync(string lotCharCD) {
            this.NppSearchMstLotCharAsync(lotCharCD, null);
        }
        
        /// <remarks/>
        public void NppSearchMstLotCharAsync(string lotCharCD, object userState) {
            if ((this.NppSearchMstLotCharOperationCompleted == null)) {
                this.NppSearchMstLotCharOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchMstLotCharOperationCompleted);
            }
            this.InvokeAsync("NppSearchMstLotChar", new object[] {
                        lotCharCD}, this.NppSearchMstLotCharOperationCompleted, userState);
        }
        
        private void OnNppSearchMstLotCharOperationCompleted(object arg) {
            if ((this.NppSearchMstLotCharCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchMstLotCharCompleted(this, new NppSearchMstLotCharCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchDefectPotReg", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchDefectPotReg(NppSchDefectPotReg searchCondition, out NppDefectPotRegInfo[] defectPotRegInfo) {
            object[] results = this.Invoke("NppSearchDefectPotReg", new object[] {
                        searchCondition});
            defectPotRegInfo = ((NppDefectPotRegInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchDefectPotRegAsync(NppSchDefectPotReg searchCondition) {
            this.NppSearchDefectPotRegAsync(searchCondition, null);
        }
        
        /// <remarks/>
        public void NppSearchDefectPotRegAsync(NppSchDefectPotReg searchCondition, object userState) {
            if ((this.NppSearchDefectPotRegOperationCompleted == null)) {
                this.NppSearchDefectPotRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchDefectPotRegOperationCompleted);
            }
            this.InvokeAsync("NppSearchDefectPotReg", new object[] {
                        searchCondition}, this.NppSearchDefectPotRegOperationCompleted, userState);
        }
        
        private void OnNppSearchDefectPotRegOperationCompleted(object arg) {
            if ((this.NppSearchDefectPotRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchDefectPotRegCompleted(this, new NppSearchDefectPotRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchPdaCondition", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchPdaCondition(NppSchPdaCondition spram, out NppPdaConditionInfo[] retInfo) {
            object[] results = this.Invoke("NppSearchPdaCondition", new object[] {
                        spram});
            retInfo = ((NppPdaConditionInfo[])(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchPdaConditionAsync(NppSchPdaCondition spram) {
            this.NppSearchPdaConditionAsync(spram, null);
        }
        
        /// <remarks/>
        public void NppSearchPdaConditionAsync(NppSchPdaCondition spram, object userState) {
            if ((this.NppSearchPdaConditionOperationCompleted == null)) {
                this.NppSearchPdaConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchPdaConditionOperationCompleted);
            }
            this.InvokeAsync("NppSearchPdaCondition", new object[] {
                        spram}, this.NppSearchPdaConditionOperationCompleted, userState);
        }
        
        private void OnNppSearchPdaConditionOperationCompleted(object arg) {
            if ((this.NppSearchPdaConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchPdaConditionCompleted(this, new NppSearchPdaConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditPdaCondition", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditPdaCondition(NppPdaConditionInfo editInfo) {
            object[] results = this.Invoke("NppEditPdaCondition", new object[] {
                        editInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditPdaConditionAsync(NppPdaConditionInfo editInfo) {
            this.NppEditPdaConditionAsync(editInfo, null);
        }
        
        /// <remarks/>
        public void NppEditPdaConditionAsync(NppPdaConditionInfo editInfo, object userState) {
            if ((this.NppEditPdaConditionOperationCompleted == null)) {
                this.NppEditPdaConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditPdaConditionOperationCompleted);
            }
            this.InvokeAsync("NppEditPdaCondition", new object[] {
                        editInfo}, this.NppEditPdaConditionOperationCompleted, userState);
        }
        
        private void OnNppEditPdaConditionOperationCompleted(object arg) {
            if ((this.NppEditPdaConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditPdaConditionCompleted(this, new NppEditPdaConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditWorkPlantClas", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditWorkPlantClas(NppWorkPlantClasInfo[] editInfo) {
            object[] results = this.Invoke("NppEditWorkPlantClas", new object[] {
                        editInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditWorkPlantClasAsync(NppWorkPlantClasInfo[] editInfo) {
            this.NppEditWorkPlantClasAsync(editInfo, null);
        }
        
        /// <remarks/>
        public void NppEditWorkPlantClasAsync(NppWorkPlantClasInfo[] editInfo, object userState) {
            if ((this.NppEditWorkPlantClasOperationCompleted == null)) {
                this.NppEditWorkPlantClasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditWorkPlantClasOperationCompleted);
            }
            this.InvokeAsync("NppEditWorkPlantClas", new object[] {
                        editInfo}, this.NppEditWorkPlantClasOperationCompleted, userState);
        }
        
        private void OnNppEditWorkPlantClasOperationCompleted(object arg) {
            if ((this.NppEditWorkPlantClasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditWorkPlantClasCompleted(this, new NppEditWorkPlantClasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditWorkSurveillanceInfo", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditWorkSurveillanceInfo(NppWorkSurveillanceInfo[] editInfo) {
            object[] results = this.Invoke("NppEditWorkSurveillanceInfo", new object[] {
                        editInfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditWorkSurveillanceInfoAsync(NppWorkSurveillanceInfo[] editInfo) {
            this.NppEditWorkSurveillanceInfoAsync(editInfo, null);
        }
        
        /// <remarks/>
        public void NppEditWorkSurveillanceInfoAsync(NppWorkSurveillanceInfo[] editInfo, object userState) {
            if ((this.NppEditWorkSurveillanceInfoOperationCompleted == null)) {
                this.NppEditWorkSurveillanceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditWorkSurveillanceInfoOperationCompleted);
            }
            this.InvokeAsync("NppEditWorkSurveillanceInfo", new object[] {
                        editInfo}, this.NppEditWorkSurveillanceInfoOperationCompleted, userState);
        }
        
        private void OnNppEditWorkSurveillanceInfoOperationCompleted(object arg) {
            if ((this.NppEditWorkSurveillanceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditWorkSurveillanceInfoCompleted(this, new NppEditWorkSurveillanceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditPatPrintHistory", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditPatPrintHistory(NppShiplabelPrintInfo printinfo) {
            object[] results = this.Invoke("NppEditPatPrintHistory", new object[] {
                        printinfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditPatPrintHistoryAsync(NppShiplabelPrintInfo printinfo) {
            this.NppEditPatPrintHistoryAsync(printinfo, null);
        }
        
        /// <remarks/>
        public void NppEditPatPrintHistoryAsync(NppShiplabelPrintInfo printinfo, object userState) {
            if ((this.NppEditPatPrintHistoryOperationCompleted == null)) {
                this.NppEditPatPrintHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditPatPrintHistoryOperationCompleted);
            }
            this.InvokeAsync("NppEditPatPrintHistory", new object[] {
                        printinfo}, this.NppEditPatPrintHistoryOperationCompleted, userState);
        }
        
        private void OnNppEditPatPrintHistoryOperationCompleted(object arg) {
            if ((this.NppEditPatPrintHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditPatPrintHistoryCompleted(this, new NppEditPatPrintHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditNascaShipSt", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditNascaShipSt(int dueId, int rankId, int nShipSt) {
            object[] results = this.Invoke("NppEditNascaShipSt", new object[] {
                        dueId,
                        rankId,
                        nShipSt});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditNascaShipStAsync(int dueId, int rankId, int nShipSt) {
            this.NppEditNascaShipStAsync(dueId, rankId, nShipSt, null);
        }
        
        /// <remarks/>
        public void NppEditNascaShipStAsync(int dueId, int rankId, int nShipSt, object userState) {
            if ((this.NppEditNascaShipStOperationCompleted == null)) {
                this.NppEditNascaShipStOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditNascaShipStOperationCompleted);
            }
            this.InvokeAsync("NppEditNascaShipSt", new object[] {
                        dueId,
                        rankId,
                        nShipSt}, this.NppEditNascaShipStOperationCompleted, userState);
        }
        
        private void OnNppEditNascaShipStOperationCompleted(object arg) {
            if ((this.NppEditNascaShipStCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditNascaShipStCompleted(this, new NppEditNascaShipStCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppEditNascaShipSt2", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppEditNascaShipSt2(string strLoginInfo, int dueId, int rankId, int nShipSt) {
            object[] results = this.Invoke("NppEditNascaShipSt2", new object[] {
                        strLoginInfo,
                        dueId,
                        rankId,
                        nShipSt});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppEditNascaShipSt2Async(string strLoginInfo, int dueId, int rankId, int nShipSt) {
            this.NppEditNascaShipSt2Async(strLoginInfo, dueId, rankId, nShipSt, null);
        }
        
        /// <remarks/>
        public void NppEditNascaShipSt2Async(string strLoginInfo, int dueId, int rankId, int nShipSt, object userState) {
            if ((this.NppEditNascaShipSt2OperationCompleted == null)) {
                this.NppEditNascaShipSt2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppEditNascaShipSt2OperationCompleted);
            }
            this.InvokeAsync("NppEditNascaShipSt2", new object[] {
                        strLoginInfo,
                        dueId,
                        rankId,
                        nShipSt}, this.NppEditNascaShipSt2OperationCompleted, userState);
        }
        
        private void OnNppEditNascaShipSt2OperationCompleted(object arg) {
            if ((this.NppEditNascaShipSt2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppEditNascaShipSt2Completed(this, new NppEditNascaShipSt2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppReleaseShipLot", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppReleaseShipLot(int dueId, int rankId) {
            object[] results = this.Invoke("NppReleaseShipLot", new object[] {
                        dueId,
                        rankId});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppReleaseShipLotAsync(int dueId, int rankId) {
            this.NppReleaseShipLotAsync(dueId, rankId, null);
        }
        
        /// <remarks/>
        public void NppReleaseShipLotAsync(int dueId, int rankId, object userState) {
            if ((this.NppReleaseShipLotOperationCompleted == null)) {
                this.NppReleaseShipLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppReleaseShipLotOperationCompleted);
            }
            this.InvokeAsync("NppReleaseShipLot", new object[] {
                        dueId,
                        rankId}, this.NppReleaseShipLotOperationCompleted, userState);
        }
        
        private void OnNppReleaseShipLotOperationCompleted(object arg) {
            if ((this.NppReleaseShipLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppReleaseShipLotCompleted(this, new NppReleaseShipLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppPopLogin", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NppPopLogin(ref NppLoginInfo nppLoginInfo) {
            object[] results = this.Invoke("NppPopLogin", new object[] {
                        nppLoginInfo});
            nppLoginInfo = ((NppLoginInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppPopLoginAsync(NppLoginInfo nppLoginInfo) {
            this.NppPopLoginAsync(nppLoginInfo, null);
        }
        
        /// <remarks/>
        public void NppPopLoginAsync(NppLoginInfo nppLoginInfo, object userState) {
            if ((this.NppPopLoginOperationCompleted == null)) {
                this.NppPopLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppPopLoginOperationCompleted);
            }
            this.InvokeAsync("NppPopLogin", new object[] {
                        nppLoginInfo}, this.NppPopLoginOperationCompleted, userState);
        }
        
        private void OnNppPopLoginOperationCompleted(object arg) {
            if ((this.NppPopLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppPopLoginCompleted(this, new NppPopLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppSearchInlineMagLot", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppSearchInlineMagLot(int inlineCD, string magazineNO, out NppInlineMagazineLotInfo inlineMagLotInfo) {
            object[] results = this.Invoke("NppSearchInlineMagLot", new object[] {
                        inlineCD,
                        magazineNO});
            inlineMagLotInfo = ((NppInlineMagazineLotInfo)(results[1]));
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppSearchInlineMagLotAsync(int inlineCD, string magazineNO) {
            this.NppSearchInlineMagLotAsync(inlineCD, magazineNO, null);
        }
        
        /// <remarks/>
        public void NppSearchInlineMagLotAsync(int inlineCD, string magazineNO, object userState) {
            if ((this.NppSearchInlineMagLotOperationCompleted == null)) {
                this.NppSearchInlineMagLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppSearchInlineMagLotOperationCompleted);
            }
            this.InvokeAsync("NppSearchInlineMagLot", new object[] {
                        inlineCD,
                        magazineNO}, this.NppSearchInlineMagLotOperationCompleted, userState);
        }
        
        private void OnNppSearchInlineMagLotOperationCompleted(object arg) {
            if ((this.NppSearchInlineMagLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppSearchInlineMagLotCompleted(this, new NppSearchInlineMagLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppNelInsertOrderMove", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppNelInsertOrderMove(NppNelOrderMoveParamInfo setinfo) {
            object[] results = this.Invoke("NppNelInsertOrderMove", new object[] {
                        setinfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppNelInsertOrderMoveAsync(NppNelOrderMoveParamInfo setinfo) {
            this.NppNelInsertOrderMoveAsync(setinfo, null);
        }
        
        /// <remarks/>
        public void NppNelInsertOrderMoveAsync(NppNelOrderMoveParamInfo setinfo, object userState) {
            if ((this.NppNelInsertOrderMoveOperationCompleted == null)) {
                this.NppNelInsertOrderMoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppNelInsertOrderMoveOperationCompleted);
            }
            this.InvokeAsync("NppNelInsertOrderMove", new object[] {
                        setinfo}, this.NppNelInsertOrderMoveOperationCompleted, userState);
        }
        
        private void OnNppNelInsertOrderMoveOperationCompleted(object arg) {
            if ((this.NppNelInsertOrderMoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppNelInsertOrderMoveCompleted(this, new NppNelInsertOrderMoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppNelInsertMnfctResult", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppNelInsertMnfctResult(NppNelMnfctParamInfo setinfo) {
            object[] results = this.Invoke("NppNelInsertMnfctResult", new object[] {
                        setinfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppNelInsertMnfctResultAsync(NppNelMnfctParamInfo setinfo) {
            this.NppNelInsertMnfctResultAsync(setinfo, null);
        }
        
        /// <remarks/>
        public void NppNelInsertMnfctResultAsync(NppNelMnfctParamInfo setinfo, object userState) {
            if ((this.NppNelInsertMnfctResultOperationCompleted == null)) {
                this.NppNelInsertMnfctResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppNelInsertMnfctResultOperationCompleted);
            }
            this.InvokeAsync("NppNelInsertMnfctResult", new object[] {
                        setinfo}, this.NppNelInsertMnfctResultOperationCompleted, userState);
        }
        
        private void OnNppNelInsertMnfctResultOperationCompleted(object arg) {
            if ((this.NppNelInsertMnfctResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppNelInsertMnfctResultCompleted(this, new NppNelInsertMnfctResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("JP.CO.Nichia.Nasca.PublicProduction/NppNelInsertCutBlendOrder", RequestNamespace="JP.CO.Nichia.Nasca.PublicProduction/", ResponseNamespace="JP.CO.Nichia.Nasca.PublicProduction/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NppReturnInfo NppNelInsertCutBlendOrder(NppNelCutBlendOrdParamInfo setinfo) {
            object[] results = this.Invoke("NppNelInsertCutBlendOrder", new object[] {
                        setinfo});
            return ((NppReturnInfo)(results[0]));
        }
        
        /// <remarks/>
        public void NppNelInsertCutBlendOrderAsync(NppNelCutBlendOrdParamInfo setinfo) {
            this.NppNelInsertCutBlendOrderAsync(setinfo, null);
        }
        
        /// <remarks/>
        public void NppNelInsertCutBlendOrderAsync(NppNelCutBlendOrdParamInfo setinfo, object userState) {
            if ((this.NppNelInsertCutBlendOrderOperationCompleted == null)) {
                this.NppNelInsertCutBlendOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNppNelInsertCutBlendOrderOperationCompleted);
            }
            this.InvokeAsync("NppNelInsertCutBlendOrder", new object[] {
                        setinfo}, this.NppNelInsertCutBlendOrderOperationCompleted, userState);
        }
        
        private void OnNppNelInsertCutBlendOrderOperationCompleted(object arg) {
            if ((this.NppNelInsertCutBlendOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NppNelInsertCutBlendOrderCompleted(this, new NppNelInsertCutBlendOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string applicationNameField;
        
        private string passWordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                this.applicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppNelCutBlendOrdParamInfo {
        
        private string binCDField;
        
        private string startDTField;
        
        private string plantCDField;
        
        private string cutLotNOField;
        
        private string blendLotContentsField;
        
        /// <remarks/>
        public string BinCD {
            get {
                return this.binCDField;
            }
            set {
                this.binCDField = value;
            }
        }
        
        /// <remarks/>
        public string StartDT {
            get {
                return this.startDTField;
            }
            set {
                this.startDTField = value;
            }
        }
        
        /// <remarks/>
        public string PlantCD {
            get {
                return this.plantCDField;
            }
            set {
                this.plantCDField = value;
            }
        }
        
        /// <remarks/>
        public string CutLotNO {
            get {
                return this.cutLotNOField;
            }
            set {
                this.cutLotNOField = value;
            }
        }
        
        /// <remarks/>
        public string BlendLotContents {
            get {
                return this.blendLotContentsField;
            }
            set {
                this.blendLotContentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppNelMnfctParamInfo {
        
        private string plantCDField;
        
        private string lotNOField;
        
        private string magazineNOField;
        
        private string workStartDTField;
        
        private string workEndDTField;
        
        private string partsContentsField;
        
        private string failContentsField;
        
        private string matContentsField;
        
        private string resinContentsField;
        
        private string startUserCDField;
        
        private string endUserCDField;
        
        private string commentField;
        
        private string inspectContentsField;
        
        /// <remarks/>
        public string PlantCD {
            get {
                return this.plantCDField;
            }
            set {
                this.plantCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotNO {
            get {
                return this.lotNOField;
            }
            set {
                this.lotNOField = value;
            }
        }
        
        /// <remarks/>
        public string MagazineNO {
            get {
                return this.magazineNOField;
            }
            set {
                this.magazineNOField = value;
            }
        }
        
        /// <remarks/>
        public string WorkStartDT {
            get {
                return this.workStartDTField;
            }
            set {
                this.workStartDTField = value;
            }
        }
        
        /// <remarks/>
        public string WorkEndDT {
            get {
                return this.workEndDTField;
            }
            set {
                this.workEndDTField = value;
            }
        }
        
        /// <remarks/>
        public string PartsContents {
            get {
                return this.partsContentsField;
            }
            set {
                this.partsContentsField = value;
            }
        }
        
        /// <remarks/>
        public string FailContents {
            get {
                return this.failContentsField;
            }
            set {
                this.failContentsField = value;
            }
        }
        
        /// <remarks/>
        public string MatContents {
            get {
                return this.matContentsField;
            }
            set {
                this.matContentsField = value;
            }
        }
        
        /// <remarks/>
        public string ResinContents {
            get {
                return this.resinContentsField;
            }
            set {
                this.resinContentsField = value;
            }
        }
        
        /// <remarks/>
        public string StartUserCD {
            get {
                return this.startUserCDField;
            }
            set {
                this.startUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string EndUserCD {
            get {
                return this.endUserCDField;
            }
            set {
                this.endUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string InspectContents {
            get {
                return this.inspectContentsField;
            }
            set {
                this.inspectContentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppNelOrderMoveParamInfo {
        
        private string orderLotNOField;
        
        private int orderMoveKbField;
        
        private int profileNOField;
        
        private string orderDtField;
        
        private decimal orderCtField;
        
        /// <remarks/>
        public string OrderLotNO {
            get {
                return this.orderLotNOField;
            }
            set {
                this.orderLotNOField = value;
            }
        }
        
        /// <remarks/>
        public int OrderMoveKb {
            get {
                return this.orderMoveKbField;
            }
            set {
                this.orderMoveKbField = value;
            }
        }
        
        /// <remarks/>
        public int ProfileNO {
            get {
                return this.profileNOField;
            }
            set {
                this.profileNOField = value;
            }
        }
        
        /// <remarks/>
        public string OrderDt {
            get {
                return this.orderDtField;
            }
            set {
                this.orderDtField = value;
            }
        }
        
        /// <remarks/>
        public decimal OrderCt {
            get {
                return this.orderCtField;
            }
            set {
                this.orderCtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInlineMagazineLotInfo {
        
        private int inlineCDField;
        
        private string magazineNOField;
        
        private int nascaLotIDField;
        
        private string nascaLotNOField;
        
        private int nowCompProcessField;
        
        private string nowCompProcessNMField;
        
        private int workOrderField;
        
        private int dbNOField;
        
        private int ctNOField;
        
        private bool newFGField;
        
        private string flowJudgeKBField;
        
        private string flowJudgeNMField;
        
        private bool delFGField;
        
        private string updUserCDField;
        
        private string updUserNMField;
        
        private string lastUpdDTField;
        
        private string material_CDField;
        
        private string material_NMField;
        
        private string rootsLot_NOField;
        
        private decimal indicate_CTField;
        
        private string work_CDField;
        
        private string work_NMField;
        
        private string start_DTField;
        
        private string plant_CDField;
        
        private string plant_NMField;
        
        private string mnfctPlan_NOField;
        
        private string resinGp_CDField;
        
        private string typeCDField;
        
        /// <remarks/>
        public int InlineCD {
            get {
                return this.inlineCDField;
            }
            set {
                this.inlineCDField = value;
            }
        }
        
        /// <remarks/>
        public string MagazineNO {
            get {
                return this.magazineNOField;
            }
            set {
                this.magazineNOField = value;
            }
        }
        
        /// <remarks/>
        public int NascaLotID {
            get {
                return this.nascaLotIDField;
            }
            set {
                this.nascaLotIDField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotNO {
            get {
                return this.nascaLotNOField;
            }
            set {
                this.nascaLotNOField = value;
            }
        }
        
        /// <remarks/>
        public int NowCompProcess {
            get {
                return this.nowCompProcessField;
            }
            set {
                this.nowCompProcessField = value;
            }
        }
        
        /// <remarks/>
        public string NowCompProcessNM {
            get {
                return this.nowCompProcessNMField;
            }
            set {
                this.nowCompProcessNMField = value;
            }
        }
        
        /// <remarks/>
        public int WorkOrder {
            get {
                return this.workOrderField;
            }
            set {
                this.workOrderField = value;
            }
        }
        
        /// <remarks/>
        public int DbNO {
            get {
                return this.dbNOField;
            }
            set {
                this.dbNOField = value;
            }
        }
        
        /// <remarks/>
        public int CtNO {
            get {
                return this.ctNOField;
            }
            set {
                this.ctNOField = value;
            }
        }
        
        /// <remarks/>
        public bool NewFG {
            get {
                return this.newFGField;
            }
            set {
                this.newFGField = value;
            }
        }
        
        /// <remarks/>
        public string FlowJudgeKB {
            get {
                return this.flowJudgeKBField;
            }
            set {
                this.flowJudgeKBField = value;
            }
        }
        
        /// <remarks/>
        public string FlowJudgeNM {
            get {
                return this.flowJudgeNMField;
            }
            set {
                this.flowJudgeNMField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNM {
            get {
                return this.updUserNMField;
            }
            set {
                this.updUserNMField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
        
        /// <remarks/>
        public string Material_CD {
            get {
                return this.material_CDField;
            }
            set {
                this.material_CDField = value;
            }
        }
        
        /// <remarks/>
        public string Material_NM {
            get {
                return this.material_NMField;
            }
            set {
                this.material_NMField = value;
            }
        }
        
        /// <remarks/>
        public string RootsLot_NO {
            get {
                return this.rootsLot_NOField;
            }
            set {
                this.rootsLot_NOField = value;
            }
        }
        
        /// <remarks/>
        public decimal Indicate_CT {
            get {
                return this.indicate_CTField;
            }
            set {
                this.indicate_CTField = value;
            }
        }
        
        /// <remarks/>
        public string Work_CD {
            get {
                return this.work_CDField;
            }
            set {
                this.work_CDField = value;
            }
        }
        
        /// <remarks/>
        public string Work_NM {
            get {
                return this.work_NMField;
            }
            set {
                this.work_NMField = value;
            }
        }
        
        /// <remarks/>
        public string Start_DT {
            get {
                return this.start_DTField;
            }
            set {
                this.start_DTField = value;
            }
        }
        
        /// <remarks/>
        public string Plant_CD {
            get {
                return this.plant_CDField;
            }
            set {
                this.plant_CDField = value;
            }
        }
        
        /// <remarks/>
        public string Plant_NM {
            get {
                return this.plant_NMField;
            }
            set {
                this.plant_NMField = value;
            }
        }
        
        /// <remarks/>
        public string MnfctPlan_NO {
            get {
                return this.mnfctPlan_NOField;
            }
            set {
                this.mnfctPlan_NOField = value;
            }
        }
        
        /// <remarks/>
        public string ResinGp_CD {
            get {
                return this.resinGp_CDField;
            }
            set {
                this.resinGp_CDField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppShiplabelPrintInfo {
        
        private string mcodeField;
        
        private int orderidField;
        
        private string countryField;
        
        private string patnoField;
        
        private string shipdtField;
        
        /// <remarks/>
        public string Mcode {
            get {
                return this.mcodeField;
            }
            set {
                this.mcodeField = value;
            }
        }
        
        /// <remarks/>
        public int Orderid {
            get {
                return this.orderidField;
            }
            set {
                this.orderidField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Patno {
            get {
                return this.patnoField;
            }
            set {
                this.patnoField = value;
            }
        }
        
        /// <remarks/>
        public string Shipdt {
            get {
                return this.shipdtField;
            }
            set {
                this.shipdtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppWorkSurveillanceInfo {
        
        private string chkMateCdField;
        
        private string chkMateNmField;
        
        private string chkWorkCdField;
        
        private string chkWorkNmField;
        
        private string chkWorkKbField;
        
        private string kjnMateCdField;
        
        private string kjnMateNmField;
        
        private string kjnWorkCdField;
        
        private string kjnWorkNmField;
        
        private string kjnWorkKbField;
        
        private string kjnDateField;
        
        private int remainDaysField;
        
        private int remainHoursField;
        
        private int remainMinutesField;
        
        private int remainTotalMinutesField;
        
        private int attentionDtField;
        
        private int warningDtField;
        
        private int effectDtField;
        
        private string lotNoField;
        
        private string magazineNoField;
        
        private bool warningFlgField;
        
        private bool attentionFlgField;
        
        private string effectLimitDateField;
        
        private int chkLinNOField;
        
        private bool delFGField;
        
        private string updUserCDField;
        
        private string lastUpdDTField;
        
        private string originalChkMateCdField;
        
        private string originalChkWorkCdField;
        
        private string originalChkWorkKbField;
        
        private int originalChkLineNoField;
        
        private string viewFGField;
        
        private int chkProcessCdField;
        
        private int targeProcessCdField;
        
        private string typeCdField;
        
        private string plantCdField;
        
        private string plantNmField;
        
        private string mateGpCdField;
        
        /// <remarks/>
        public string ChkMateCd {
            get {
                return this.chkMateCdField;
            }
            set {
                this.chkMateCdField = value;
            }
        }
        
        /// <remarks/>
        public string ChkMateNm {
            get {
                return this.chkMateNmField;
            }
            set {
                this.chkMateNmField = value;
            }
        }
        
        /// <remarks/>
        public string ChkWorkCd {
            get {
                return this.chkWorkCdField;
            }
            set {
                this.chkWorkCdField = value;
            }
        }
        
        /// <remarks/>
        public string ChkWorkNm {
            get {
                return this.chkWorkNmField;
            }
            set {
                this.chkWorkNmField = value;
            }
        }
        
        /// <remarks/>
        public string ChkWorkKb {
            get {
                return this.chkWorkKbField;
            }
            set {
                this.chkWorkKbField = value;
            }
        }
        
        /// <remarks/>
        public string KjnMateCd {
            get {
                return this.kjnMateCdField;
            }
            set {
                this.kjnMateCdField = value;
            }
        }
        
        /// <remarks/>
        public string KjnMateNm {
            get {
                return this.kjnMateNmField;
            }
            set {
                this.kjnMateNmField = value;
            }
        }
        
        /// <remarks/>
        public string KjnWorkCd {
            get {
                return this.kjnWorkCdField;
            }
            set {
                this.kjnWorkCdField = value;
            }
        }
        
        /// <remarks/>
        public string KjnWorkNm {
            get {
                return this.kjnWorkNmField;
            }
            set {
                this.kjnWorkNmField = value;
            }
        }
        
        /// <remarks/>
        public string KjnWorkKb {
            get {
                return this.kjnWorkKbField;
            }
            set {
                this.kjnWorkKbField = value;
            }
        }
        
        /// <remarks/>
        public string KjnDate {
            get {
                return this.kjnDateField;
            }
            set {
                this.kjnDateField = value;
            }
        }
        
        /// <remarks/>
        public int RemainDays {
            get {
                return this.remainDaysField;
            }
            set {
                this.remainDaysField = value;
            }
        }
        
        /// <remarks/>
        public int RemainHours {
            get {
                return this.remainHoursField;
            }
            set {
                this.remainHoursField = value;
            }
        }
        
        /// <remarks/>
        public int RemainMinutes {
            get {
                return this.remainMinutesField;
            }
            set {
                this.remainMinutesField = value;
            }
        }
        
        /// <remarks/>
        public int RemainTotalMinutes {
            get {
                return this.remainTotalMinutesField;
            }
            set {
                this.remainTotalMinutesField = value;
            }
        }
        
        /// <remarks/>
        public int AttentionDt {
            get {
                return this.attentionDtField;
            }
            set {
                this.attentionDtField = value;
            }
        }
        
        /// <remarks/>
        public int WarningDt {
            get {
                return this.warningDtField;
            }
            set {
                this.warningDtField = value;
            }
        }
        
        /// <remarks/>
        public int EffectDt {
            get {
                return this.effectDtField;
            }
            set {
                this.effectDtField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public string MagazineNo {
            get {
                return this.magazineNoField;
            }
            set {
                this.magazineNoField = value;
            }
        }
        
        /// <remarks/>
        public bool WarningFlg {
            get {
                return this.warningFlgField;
            }
            set {
                this.warningFlgField = value;
            }
        }
        
        /// <remarks/>
        public bool AttentionFlg {
            get {
                return this.attentionFlgField;
            }
            set {
                this.attentionFlgField = value;
            }
        }
        
        /// <remarks/>
        public string EffectLimitDate {
            get {
                return this.effectLimitDateField;
            }
            set {
                this.effectLimitDateField = value;
            }
        }
        
        /// <remarks/>
        public int ChkLinNO {
            get {
                return this.chkLinNOField;
            }
            set {
                this.chkLinNOField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalChkMateCd {
            get {
                return this.originalChkMateCdField;
            }
            set {
                this.originalChkMateCdField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalChkWorkCd {
            get {
                return this.originalChkWorkCdField;
            }
            set {
                this.originalChkWorkCdField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalChkWorkKb {
            get {
                return this.originalChkWorkKbField;
            }
            set {
                this.originalChkWorkKbField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalChkLineNo {
            get {
                return this.originalChkLineNoField;
            }
            set {
                this.originalChkLineNoField = value;
            }
        }
        
        /// <remarks/>
        public string ViewFG {
            get {
                return this.viewFGField;
            }
            set {
                this.viewFGField = value;
            }
        }
        
        /// <remarks/>
        public int ChkProcessCd {
            get {
                return this.chkProcessCdField;
            }
            set {
                this.chkProcessCdField = value;
            }
        }
        
        /// <remarks/>
        public int TargeProcessCd {
            get {
                return this.targeProcessCdField;
            }
            set {
                this.targeProcessCdField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
        
        /// <remarks/>
        public string PlantCd {
            get {
                return this.plantCdField;
            }
            set {
                this.plantCdField = value;
            }
        }
        
        /// <remarks/>
        public string PlantNm {
            get {
                return this.plantNmField;
            }
            set {
                this.plantNmField = value;
            }
        }
        
        /// <remarks/>
        public string MateGpCd {
            get {
                return this.mateGpCdField;
            }
            set {
                this.mateGpCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppWorkPlantClasInfo {
        
        private string plantClasCDField;
        
        private string plantClasNMField;
        
        private string materialCDField;
        
        private string workCDField;
        
        private string workKBField;
        
        private bool delFgField;
        
        private string updUserCDField;
        
        private string lastUpdDTField;
        
        private int referenceCDField;
        
        private string originalPlantClasCDField;
        
        private string originalMaterialCDField;
        
        private string originalWorkCDField;
        
        private string pdaCheckKBField;
        
        private string lotCharCDField;
        
        private string lotCharNMField;
        
        private string updUserNMField;
        
        private string materialNMField;
        
        private string workNMField;
        
        private bool moldChkFGField;
        
        /// <remarks/>
        public string PlantClasCD {
            get {
                return this.plantClasCDField;
            }
            set {
                this.plantClasCDField = value;
            }
        }
        
        /// <remarks/>
        public string PlantClasNM {
            get {
                return this.plantClasNMField;
            }
            set {
                this.plantClasNMField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCD {
            get {
                return this.workCDField;
            }
            set {
                this.workCDField = value;
            }
        }
        
        /// <remarks/>
        public string WorkKB {
            get {
                return this.workKBField;
            }
            set {
                this.workKBField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFg {
            get {
                return this.delFgField;
            }
            set {
                this.delFgField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
        
        /// <remarks/>
        public int ReferenceCD {
            get {
                return this.referenceCDField;
            }
            set {
                this.referenceCDField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalPlantClasCD {
            get {
                return this.originalPlantClasCDField;
            }
            set {
                this.originalPlantClasCDField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalMaterialCD {
            get {
                return this.originalMaterialCDField;
            }
            set {
                this.originalMaterialCDField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalWorkCD {
            get {
                return this.originalWorkCDField;
            }
            set {
                this.originalWorkCDField = value;
            }
        }
        
        /// <remarks/>
        public string PdaCheckKB {
            get {
                return this.pdaCheckKBField;
            }
            set {
                this.pdaCheckKBField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharCD {
            get {
                return this.lotCharCDField;
            }
            set {
                this.lotCharCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharNM {
            get {
                return this.lotCharNMField;
            }
            set {
                this.lotCharNMField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNM {
            get {
                return this.updUserNMField;
            }
            set {
                this.updUserNMField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialNM {
            get {
                return this.materialNMField;
            }
            set {
                this.materialNMField = value;
            }
        }
        
        /// <remarks/>
        public string WorkNM {
            get {
                return this.workNMField;
            }
            set {
                this.workNMField = value;
            }
        }
        
        /// <remarks/>
        public bool MoldChkFG {
            get {
                return this.moldChkFGField;
            }
            set {
                this.moldChkFGField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPdaConditionInfo {
        
        private int conditionKBField;
        
        private string conditionNMField;
        
        private int conditionLinNOField;
        
        private string materialCDField;
        
        private int processCDField;
        
        private string typeCDField;
        
        private string workCDField;
        
        private string plantCDField;
        
        private string lotCharCDField;
        
        private string generalVALField;
        
        private string general2VALField;
        
        private bool delFGField;
        
        private string updUserCDField;
        
        private string lastUpdDTField;
        
        private string material2CDField;
        
        private bool checkFGField;
        
        private int startEndKBField;
        
        private string materialNMField;
        
        private string material2NMField;
        
        private string processNMField;
        
        private string workNMField;
        
        private string plantNMField;
        
        private string lotCharNMField;
        
        private string updUserNMField;
        
        private string[] matLabelKBField;
        
        /// <remarks/>
        public int ConditionKB {
            get {
                return this.conditionKBField;
            }
            set {
                this.conditionKBField = value;
            }
        }
        
        /// <remarks/>
        public string ConditionNM {
            get {
                return this.conditionNMField;
            }
            set {
                this.conditionNMField = value;
            }
        }
        
        /// <remarks/>
        public int ConditionLinNO {
            get {
                return this.conditionLinNOField;
            }
            set {
                this.conditionLinNOField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessCD {
            get {
                return this.processCDField;
            }
            set {
                this.processCDField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCD {
            get {
                return this.workCDField;
            }
            set {
                this.workCDField = value;
            }
        }
        
        /// <remarks/>
        public string PlantCD {
            get {
                return this.plantCDField;
            }
            set {
                this.plantCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharCD {
            get {
                return this.lotCharCDField;
            }
            set {
                this.lotCharCDField = value;
            }
        }
        
        /// <remarks/>
        public string GeneralVAL {
            get {
                return this.generalVALField;
            }
            set {
                this.generalVALField = value;
            }
        }
        
        /// <remarks/>
        public string General2VAL {
            get {
                return this.general2VALField;
            }
            set {
                this.general2VALField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
        
        /// <remarks/>
        public string Material2CD {
            get {
                return this.material2CDField;
            }
            set {
                this.material2CDField = value;
            }
        }
        
        /// <remarks/>
        public bool CheckFG {
            get {
                return this.checkFGField;
            }
            set {
                this.checkFGField = value;
            }
        }
        
        /// <remarks/>
        public int StartEndKB {
            get {
                return this.startEndKBField;
            }
            set {
                this.startEndKBField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialNM {
            get {
                return this.materialNMField;
            }
            set {
                this.materialNMField = value;
            }
        }
        
        /// <remarks/>
        public string Material2NM {
            get {
                return this.material2NMField;
            }
            set {
                this.material2NMField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessNM {
            get {
                return this.processNMField;
            }
            set {
                this.processNMField = value;
            }
        }
        
        /// <remarks/>
        public string WorkNM {
            get {
                return this.workNMField;
            }
            set {
                this.workNMField = value;
            }
        }
        
        /// <remarks/>
        public string PlantNM {
            get {
                return this.plantNMField;
            }
            set {
                this.plantNMField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharNM {
            get {
                return this.lotCharNMField;
            }
            set {
                this.lotCharNMField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNM {
            get {
                return this.updUserNMField;
            }
            set {
                this.updUserNMField = value;
            }
        }
        
        /// <remarks/>
        public string[] MatLabelKB {
            get {
                return this.matLabelKBField;
            }
            set {
                this.matLabelKBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppSchPdaCondition {
        
        private string conditionKBField;
        
        private string materialCDField;
        
        private string materialCD2Field;
        
        private string processCDField;
        
        private string typeCDField;
        
        private string workCDField;
        
        private string plantCDField;
        
        private string lotCharCDField;
        
        private string generalVALField;
        
        private string general2VALField;
        
        private string delFGField;
        
        /// <remarks/>
        public string ConditionKB {
            get {
                return this.conditionKBField;
            }
            set {
                this.conditionKBField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCD2 {
            get {
                return this.materialCD2Field;
            }
            set {
                this.materialCD2Field = value;
            }
        }
        
        /// <remarks/>
        public string ProcessCD {
            get {
                return this.processCDField;
            }
            set {
                this.processCDField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCD {
            get {
                return this.workCDField;
            }
            set {
                this.workCDField = value;
            }
        }
        
        /// <remarks/>
        public string PlantCD {
            get {
                return this.plantCDField;
            }
            set {
                this.plantCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharCD {
            get {
                return this.lotCharCDField;
            }
            set {
                this.lotCharCDField = value;
            }
        }
        
        /// <remarks/>
        public string GeneralVAL {
            get {
                return this.generalVALField;
            }
            set {
                this.generalVALField = value;
            }
        }
        
        /// <remarks/>
        public string General2VAL {
            get {
                return this.general2VALField;
            }
            set {
                this.general2VALField = value;
            }
        }
        
        /// <remarks/>
        public string DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppDefectPotRegInfo {
        
        private string typeCdField;
        
        private int selectionIdField;
        
        private string selectionNmField;
        
        private int potNoField;
        
        private int potLinNoField;
        
        private decimal defRateField;
        
        private bool delFgField;
        
        private string updUserCdField;
        
        private string updUserNmField;
        
        private string lastUpdDtField;
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
        
        /// <remarks/>
        public int SelectionId {
            get {
                return this.selectionIdField;
            }
            set {
                this.selectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string SelectionNm {
            get {
                return this.selectionNmField;
            }
            set {
                this.selectionNmField = value;
            }
        }
        
        /// <remarks/>
        public int PotNo {
            get {
                return this.potNoField;
            }
            set {
                this.potNoField = value;
            }
        }
        
        /// <remarks/>
        public int PotLinNo {
            get {
                return this.potLinNoField;
            }
            set {
                this.potLinNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal DefRate {
            get {
                return this.defRateField;
            }
            set {
                this.defRateField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFg {
            get {
                return this.delFgField;
            }
            set {
                this.delFgField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCd {
            get {
                return this.updUserCdField;
            }
            set {
                this.updUserCdField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNm {
            get {
                return this.updUserNmField;
            }
            set {
                this.updUserNmField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDt {
            get {
                return this.lastUpdDtField;
            }
            set {
                this.lastUpdDtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppSchDefectPotReg {
        
        private string typeCDField;
        
        private int selectionIDField;
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
        
        /// <remarks/>
        public int SelectionID {
            get {
                return this.selectionIDField;
            }
            set {
                this.selectionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppNFormGroupInfo {
        
        private int fGroupCdField;
        
        private string fGroupNmField;
        
        private int formCdField;
        
        private string formNmField;
        
        private int fGroupClassCdField;
        
        private string fGroupClassNmField;
        
        private string fGroupJaField;
        
        private string fGroupEnField;
        
        private string fGroupChField;
        
        private string validStartDtField;
        
        private string validEndDtField;
        
        private string delFgField;
        
        private string updUserCdField;
        
        private string lastUpdDtField;
        
        private string materialCdSuffixField;
        
        private string sectionCdField;
        
        private string sectionNmField;
        
        private string partClassCdField;
        
        private int processCdField;
        
        private string processNmField;
        
        private string binCdField;
        
        private string binNmField;
        
        /// <remarks/>
        public int FGroupCd {
            get {
                return this.fGroupCdField;
            }
            set {
                this.fGroupCdField = value;
            }
        }
        
        /// <remarks/>
        public string FGroupNm {
            get {
                return this.fGroupNmField;
            }
            set {
                this.fGroupNmField = value;
            }
        }
        
        /// <remarks/>
        public int FormCd {
            get {
                return this.formCdField;
            }
            set {
                this.formCdField = value;
            }
        }
        
        /// <remarks/>
        public string FormNm {
            get {
                return this.formNmField;
            }
            set {
                this.formNmField = value;
            }
        }
        
        /// <remarks/>
        public int FGroupClassCd {
            get {
                return this.fGroupClassCdField;
            }
            set {
                this.fGroupClassCdField = value;
            }
        }
        
        /// <remarks/>
        public string FGroupClassNm {
            get {
                return this.fGroupClassNmField;
            }
            set {
                this.fGroupClassNmField = value;
            }
        }
        
        /// <remarks/>
        public string FGroupJa {
            get {
                return this.fGroupJaField;
            }
            set {
                this.fGroupJaField = value;
            }
        }
        
        /// <remarks/>
        public string FGroupEn {
            get {
                return this.fGroupEnField;
            }
            set {
                this.fGroupEnField = value;
            }
        }
        
        /// <remarks/>
        public string FGroupCh {
            get {
                return this.fGroupChField;
            }
            set {
                this.fGroupChField = value;
            }
        }
        
        /// <remarks/>
        public string ValidStartDt {
            get {
                return this.validStartDtField;
            }
            set {
                this.validStartDtField = value;
            }
        }
        
        /// <remarks/>
        public string ValidEndDt {
            get {
                return this.validEndDtField;
            }
            set {
                this.validEndDtField = value;
            }
        }
        
        /// <remarks/>
        public string DelFg {
            get {
                return this.delFgField;
            }
            set {
                this.delFgField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCd {
            get {
                return this.updUserCdField;
            }
            set {
                this.updUserCdField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDt {
            get {
                return this.lastUpdDtField;
            }
            set {
                this.lastUpdDtField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCdSuffix {
            get {
                return this.materialCdSuffixField;
            }
            set {
                this.materialCdSuffixField = value;
            }
        }
        
        /// <remarks/>
        public string SectionCd {
            get {
                return this.sectionCdField;
            }
            set {
                this.sectionCdField = value;
            }
        }
        
        /// <remarks/>
        public string SectionNm {
            get {
                return this.sectionNmField;
            }
            set {
                this.sectionNmField = value;
            }
        }
        
        /// <remarks/>
        public string PartClassCd {
            get {
                return this.partClassCdField;
            }
            set {
                this.partClassCdField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessCd {
            get {
                return this.processCdField;
            }
            set {
                this.processCdField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessNm {
            get {
                return this.processNmField;
            }
            set {
                this.processNmField = value;
            }
        }
        
        /// <remarks/>
        public string BinCd {
            get {
                return this.binCdField;
            }
            set {
                this.binCdField = value;
            }
        }
        
        /// <remarks/>
        public string BinNm {
            get {
                return this.binNmField;
            }
            set {
                this.binNmField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppSchLotCharList {
        
        private string lotCharCDField;
        
        private string charValCDField;
        
        /// <remarks/>
        public string LotCharCD {
            get {
                return this.lotCharCDField;
            }
            set {
                this.lotCharCDField = value;
            }
        }
        
        /// <remarks/>
        public string CharValCD {
            get {
                return this.charValCDField;
            }
            set {
                this.charValCDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppBinInfo {
        
        private string binCDField;
        
        private string binNMField;
        
        private string sectionCDField;
        
        private int binKBField;
        
        private string validstaDTField;
        
        private string validentDTField;
        
        private bool delFgField;
        
        private string updUserCDField;
        
        private string lastUpdDTField;
        
        /// <remarks/>
        public string BinCD {
            get {
                return this.binCDField;
            }
            set {
                this.binCDField = value;
            }
        }
        
        /// <remarks/>
        public string BinNM {
            get {
                return this.binNMField;
            }
            set {
                this.binNMField = value;
            }
        }
        
        /// <remarks/>
        public string SectionCD {
            get {
                return this.sectionCDField;
            }
            set {
                this.sectionCDField = value;
            }
        }
        
        /// <remarks/>
        public int BinKB {
            get {
                return this.binKBField;
            }
            set {
                this.binKBField = value;
            }
        }
        
        /// <remarks/>
        public string ValidstaDT {
            get {
                return this.validstaDTField;
            }
            set {
                this.validstaDTField = value;
            }
        }
        
        /// <remarks/>
        public string ValidentDT {
            get {
                return this.validentDTField;
            }
            set {
                this.validentDTField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFg {
            get {
                return this.delFgField;
            }
            set {
                this.delFgField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppNascaLotInfo {
        
        private int nascaLotIdField;
        
        private string typeCdField;
        
        private string nascaLotNoField;
        
        private string nascaLotCommentField;
        
        private int asmLotCTField;
        
        private string selectSumSTField;
        
        private bool charBackFgField;
        
        /// <remarks/>
        public int NascaLotId {
            get {
                return this.nascaLotIdField;
            }
            set {
                this.nascaLotIdField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotNo {
            get {
                return this.nascaLotNoField;
            }
            set {
                this.nascaLotNoField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotComment {
            get {
                return this.nascaLotCommentField;
            }
            set {
                this.nascaLotCommentField = value;
            }
        }
        
        /// <remarks/>
        public int AsmLotCT {
            get {
                return this.asmLotCTField;
            }
            set {
                this.asmLotCTField = value;
            }
        }
        
        /// <remarks/>
        public string SelectSumST {
            get {
                return this.selectSumSTField;
            }
            set {
                this.selectSumSTField = value;
            }
        }
        
        /// <remarks/>
        public bool CharBackFg {
            get {
                return this.charBackFgField;
            }
            set {
                this.charBackFgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppUpdRootsLotInfo {
        
        private string materialCdField;
        
        private string rootslotNoField;
        
        private string qultymnteDtField;
        
        /// <remarks/>
        public string MaterialCd {
            get {
                return this.materialCdField;
            }
            set {
                this.materialCdField = value;
            }
        }
        
        /// <remarks/>
        public string RootslotNo {
            get {
                return this.rootslotNoField;
            }
            set {
                this.rootslotNoField = value;
            }
        }
        
        /// <remarks/>
        public string QultymnteDt {
            get {
                return this.qultymnteDtField;
            }
            set {
                this.qultymnteDtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppUpdNascaLotInfo {
        
        private string typeCDField;
        
        private string nascaLotNOField;
        
        private string selectSumSTField;
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotNO {
            get {
                return this.nascaLotNOField;
            }
            set {
                this.nascaLotNOField = value;
            }
        }
        
        /// <remarks/>
        public string SelectSumST {
            get {
                return this.selectSumSTField;
            }
            set {
                this.selectSumSTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppLotInfo3 {
        
        private string materialCdField;
        
        private string binCdField;
        
        private string rootsLotNoField;
        
        private string nascaLotNoField;
        
        private int nascaLotIdField;
        
        private int lotStField;
        
        private int mnfctKbField;
        
        private int accontSumKbField;
        
        private string fstInMtrDtField;
        
        private string qultyMnteDtField;
        
        private string rootsLotCommentField;
        
        private int rankIdField;
        
        private int potNoField;
        
        private bool goodFgField;
        
        private bool exLotFgField;
        
        private string typeCdField;
        
        private decimal stockCtField;
        
        private decimal asinStockCtField;
        
        private decimal moveStockCtField;
        
        private string sectionCdField;
        
        private int binKbField;
        
        private string nascaLotCommnetField;
        
        private string materialNmField;
        
        private string binNmField;
        
        private string rankNmField;
        
        private int asmlotCtField;
        
        /// <remarks/>
        public string MaterialCd {
            get {
                return this.materialCdField;
            }
            set {
                this.materialCdField = value;
            }
        }
        
        /// <remarks/>
        public string BinCd {
            get {
                return this.binCdField;
            }
            set {
                this.binCdField = value;
            }
        }
        
        /// <remarks/>
        public string RootsLotNo {
            get {
                return this.rootsLotNoField;
            }
            set {
                this.rootsLotNoField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotNo {
            get {
                return this.nascaLotNoField;
            }
            set {
                this.nascaLotNoField = value;
            }
        }
        
        /// <remarks/>
        public int NascaLotId {
            get {
                return this.nascaLotIdField;
            }
            set {
                this.nascaLotIdField = value;
            }
        }
        
        /// <remarks/>
        public int LotSt {
            get {
                return this.lotStField;
            }
            set {
                this.lotStField = value;
            }
        }
        
        /// <remarks/>
        public int MnfctKb {
            get {
                return this.mnfctKbField;
            }
            set {
                this.mnfctKbField = value;
            }
        }
        
        /// <remarks/>
        public int AccontSumKb {
            get {
                return this.accontSumKbField;
            }
            set {
                this.accontSumKbField = value;
            }
        }
        
        /// <remarks/>
        public string FstInMtrDt {
            get {
                return this.fstInMtrDtField;
            }
            set {
                this.fstInMtrDtField = value;
            }
        }
        
        /// <remarks/>
        public string QultyMnteDt {
            get {
                return this.qultyMnteDtField;
            }
            set {
                this.qultyMnteDtField = value;
            }
        }
        
        /// <remarks/>
        public string RootsLotComment {
            get {
                return this.rootsLotCommentField;
            }
            set {
                this.rootsLotCommentField = value;
            }
        }
        
        /// <remarks/>
        public int RankId {
            get {
                return this.rankIdField;
            }
            set {
                this.rankIdField = value;
            }
        }
        
        /// <remarks/>
        public int PotNo {
            get {
                return this.potNoField;
            }
            set {
                this.potNoField = value;
            }
        }
        
        /// <remarks/>
        public bool GoodFg {
            get {
                return this.goodFgField;
            }
            set {
                this.goodFgField = value;
            }
        }
        
        /// <remarks/>
        public bool ExLotFg {
            get {
                return this.exLotFgField;
            }
            set {
                this.exLotFgField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
        
        /// <remarks/>
        public decimal StockCt {
            get {
                return this.stockCtField;
            }
            set {
                this.stockCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal AsinStockCt {
            get {
                return this.asinStockCtField;
            }
            set {
                this.asinStockCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal MoveStockCt {
            get {
                return this.moveStockCtField;
            }
            set {
                this.moveStockCtField = value;
            }
        }
        
        /// <remarks/>
        public string SectionCd {
            get {
                return this.sectionCdField;
            }
            set {
                this.sectionCdField = value;
            }
        }
        
        /// <remarks/>
        public int BinKb {
            get {
                return this.binKbField;
            }
            set {
                this.binKbField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotCommnet {
            get {
                return this.nascaLotCommnetField;
            }
            set {
                this.nascaLotCommnetField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialNm {
            get {
                return this.materialNmField;
            }
            set {
                this.materialNmField = value;
            }
        }
        
        /// <remarks/>
        public string BinNm {
            get {
                return this.binNmField;
            }
            set {
                this.binNmField = value;
            }
        }
        
        /// <remarks/>
        public string RankNm {
            get {
                return this.rankNmField;
            }
            set {
                this.rankNmField = value;
            }
        }
        
        /// <remarks/>
        public int AsmlotCt {
            get {
                return this.asmlotCtField;
            }
            set {
                this.asmlotCtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppSchInventory {
        
        private string typeCDField;
        
        private string materialCDField;
        
        private string lotNOField;
        
        private string binCDField;
        
        private string nascalotNOField;
        
        private string stockCtFgField;
        
        private string rankNMField;
        
        private string zeroFgField;
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotNO {
            get {
                return this.lotNOField;
            }
            set {
                this.lotNOField = value;
            }
        }
        
        /// <remarks/>
        public string BinCD {
            get {
                return this.binCDField;
            }
            set {
                this.binCDField = value;
            }
        }
        
        /// <remarks/>
        public string NascalotNO {
            get {
                return this.nascalotNOField;
            }
            set {
                this.nascalotNOField = value;
            }
        }
        
        /// <remarks/>
        public string StockCtFg {
            get {
                return this.stockCtFgField;
            }
            set {
                this.stockCtFgField = value;
            }
        }
        
        /// <remarks/>
        public string RankNM {
            get {
                return this.rankNMField;
            }
            set {
                this.rankNMField = value;
            }
        }
        
        /// <remarks/>
        public string ZeroFg {
            get {
                return this.zeroFgField;
            }
            set {
                this.zeroFgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPubBinMove {
        
        private string materialCDField;
        
        private string lotNOField;
        
        private decimal moveCTField;
        
        private string newBinCDField;
        
        private string oldBinCDField;
        
        private string tradeDTField;
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotNO {
            get {
                return this.lotNOField;
            }
            set {
                this.lotNOField = value;
            }
        }
        
        /// <remarks/>
        public decimal MoveCT {
            get {
                return this.moveCTField;
            }
            set {
                this.moveCTField = value;
            }
        }
        
        /// <remarks/>
        public string NewBinCD {
            get {
                return this.newBinCDField;
            }
            set {
                this.newBinCDField = value;
            }
        }
        
        /// <remarks/>
        public string OldBinCD {
            get {
                return this.oldBinCDField;
            }
            set {
                this.oldBinCDField = value;
            }
        }
        
        /// <remarks/>
        public string TradeDT {
            get {
                return this.tradeDTField;
            }
            set {
                this.tradeDTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoMoveOutMatFromSLA {
        
        private string materialCDField;
        
        private string lotNOField;
        
        private decimal moveCTField;
        
        private string newBinCDField;
        
        private string oldBinCDField;
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotNO {
            get {
                return this.lotNOField;
            }
            set {
                this.lotNOField = value;
            }
        }
        
        /// <remarks/>
        public decimal MoveCT {
            get {
                return this.moveCTField;
            }
            set {
                this.moveCTField = value;
            }
        }
        
        /// <remarks/>
        public string NewBinCD {
            get {
                return this.newBinCDField;
            }
            set {
                this.newBinCDField = value;
            }
        }
        
        /// <remarks/>
        public string OldBinCD {
            get {
                return this.oldBinCDField;
            }
            set {
                this.oldBinCDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoOutRawMat {
        
        private string materialCDField;
        
        private string lotNOField;
        
        private decimal moveCTField;
        
        private string binCDField;
        
        private string tradeDTField;
        
        private int tradeKBField;
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotNO {
            get {
                return this.lotNOField;
            }
            set {
                this.lotNOField = value;
            }
        }
        
        /// <remarks/>
        public decimal MoveCT {
            get {
                return this.moveCTField;
            }
            set {
                this.moveCTField = value;
            }
        }
        
        /// <remarks/>
        public string BinCD {
            get {
                return this.binCDField;
            }
            set {
                this.binCDField = value;
            }
        }
        
        /// <remarks/>
        public string TradeDT {
            get {
                return this.tradeDTField;
            }
            set {
                this.tradeDTField = value;
            }
        }
        
        /// <remarks/>
        public int TradeKB {
            get {
                return this.tradeKBField;
            }
            set {
                this.tradeKBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppSchLotCharProcessSchedule {
        
        private int statusCodeField;
        
        private string entryUserCodeField;
        
        private string fileNameField;
        
        private bool isPrefixSearchFileNameField;
        
        private string entryDateFromField;
        
        private string entryDateToField;
        
        private string endDateFromField;
        
        private string endDateToField;
        
        /// <remarks/>
        public int StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EntryUserCode {
            get {
                return this.entryUserCodeField;
            }
            set {
                this.entryUserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrefixSearchFileName {
            get {
                return this.isPrefixSearchFileNameField;
            }
            set {
                this.isPrefixSearchFileNameField = value;
            }
        }
        
        /// <remarks/>
        public string EntryDateFrom {
            get {
                return this.entryDateFromField;
            }
            set {
                this.entryDateFromField = value;
            }
        }
        
        /// <remarks/>
        public string EntryDateTo {
            get {
                return this.entryDateToField;
            }
            set {
                this.entryDateToField = value;
            }
        }
        
        /// <remarks/>
        public string EndDateFrom {
            get {
                return this.endDateFromField;
            }
            set {
                this.endDateFromField = value;
            }
        }
        
        /// <remarks/>
        public string EndDateTo {
            get {
                return this.endDateToField;
            }
            set {
                this.endDateToField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppLotCharProcessScheduleInfo {
        
        private int idField;
        
        private int environmentCDField;
        
        private string environmentNMField;
        
        private string fileNMField;
        
        private int modeCDField;
        
        private string modeNMField;
        
        private bool isCheckExistanceNascaLotField;
        
        private string entryDTField;
        
        private string endDTField;
        
        private bool isErrorField;
        
        private string errorDescriptionField;
        
        private string entryUserCDField;
        
        private string entryUserNMField;
        
        private string loginUserCDField;
        
        private string loginUserPasswordField;
        
        private int scheduleCDField;
        
        private string scheduleNMField;
        
        private byte[] csvUtf8BytesField;
        
        private int statusCDField;
        
        private string statusNMField;
        
        private string updUserCDField;
        
        private string updUserNMField;
        
        private string lastUpdDTField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int EnvironmentCD {
            get {
                return this.environmentCDField;
            }
            set {
                this.environmentCDField = value;
            }
        }
        
        /// <remarks/>
        public string EnvironmentNM {
            get {
                return this.environmentNMField;
            }
            set {
                this.environmentNMField = value;
            }
        }
        
        /// <remarks/>
        public string FileNM {
            get {
                return this.fileNMField;
            }
            set {
                this.fileNMField = value;
            }
        }
        
        /// <remarks/>
        public int ModeCD {
            get {
                return this.modeCDField;
            }
            set {
                this.modeCDField = value;
            }
        }
        
        /// <remarks/>
        public string ModeNM {
            get {
                return this.modeNMField;
            }
            set {
                this.modeNMField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCheckExistanceNascaLot {
            get {
                return this.isCheckExistanceNascaLotField;
            }
            set {
                this.isCheckExistanceNascaLotField = value;
            }
        }
        
        /// <remarks/>
        public string EntryDT {
            get {
                return this.entryDTField;
            }
            set {
                this.entryDTField = value;
            }
        }
        
        /// <remarks/>
        public string EndDT {
            get {
                return this.endDTField;
            }
            set {
                this.endDTField = value;
            }
        }
        
        /// <remarks/>
        public bool IsError {
            get {
                return this.isErrorField;
            }
            set {
                this.isErrorField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string EntryUserCD {
            get {
                return this.entryUserCDField;
            }
            set {
                this.entryUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string EntryUserNM {
            get {
                return this.entryUserNMField;
            }
            set {
                this.entryUserNMField = value;
            }
        }
        
        /// <remarks/>
        public string LoginUserCD {
            get {
                return this.loginUserCDField;
            }
            set {
                this.loginUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string LoginUserPassword {
            get {
                return this.loginUserPasswordField;
            }
            set {
                this.loginUserPasswordField = value;
            }
        }
        
        /// <remarks/>
        public int ScheduleCD {
            get {
                return this.scheduleCDField;
            }
            set {
                this.scheduleCDField = value;
            }
        }
        
        /// <remarks/>
        public string ScheduleNM {
            get {
                return this.scheduleNMField;
            }
            set {
                this.scheduleNMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CsvUtf8Bytes {
            get {
                return this.csvUtf8BytesField;
            }
            set {
                this.csvUtf8BytesField = value;
            }
        }
        
        /// <remarks/>
        public int StatusCD {
            get {
                return this.statusCDField;
            }
            set {
                this.statusCDField = value;
            }
        }
        
        /// <remarks/>
        public string StatusNM {
            get {
                return this.statusNMField;
            }
            set {
                this.statusNMField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNM {
            get {
                return this.updUserNMField;
            }
            set {
                this.updUserNMField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppLotCharInfo {
        
        private int nascaLotIDField;
        
        private string lotNoField;
        
        private string rootsLotNoField;
        
        private string typeCdField;
        
        private string materialCDForSearchField;
        
        private int lineNOField;
        
        private string cdField;
        
        private string lotCharValueField;
        
        private string materialCDForLotCharField;
        
        private string materialNMField;
        
        private string charValCDField;
        
        private decimal maxValueField;
        
        private decimal minValueField;
        
        private string lotCharNameField;
        
        private string groupNameField;
        
        private bool isMustInputField;
        
        private int processCDField;
        
        private bool isSucceedField;
        
        private bool bomKBField;
        
        private string dataTypeCDField;
        
        private string rootsLotCharCDField;
        
        private string assemblyCDField;
        
        private bool isDeleteField;
        
        private bool isNotFlagField;
        
        private int digitCTField;
        
        private int decDigitCTField;
        
        private string mateGroupCDField;
        
        private int viewNoField;
        
        private string updUserCdField;
        
        private string updUserNmField;
        
        private string lastUpdDtField;
        
        private string materialColorCDField;
        
        private string materialColorNMField;
        
        private NppSchOperator schOperatorField;
        
        private int referenceCodeField;
        
        private bool isOnlyFlagField;
        
        private int searchNOField;
        
        private string referenceNmField;
        
        private int charGroupKbField;
        
        private string bomKbCharField;
        
        private string oldCDField;
        
        private string lotCharJAField;
        
        private string lotCharENField;
        
        private string lotCharCHField;
        
        private bool isRepeatCheckField;
        
        private int relaySeqField;
        
        private int relayLineNoField;
        
        private string relayCompDtField;
        
        private bool isUpdOkFgField;
        
        private int pItemLinNoField;
        
        /// <remarks/>
        public int NascaLotID {
            get {
                return this.nascaLotIDField;
            }
            set {
                this.nascaLotIDField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public string RootsLotNo {
            get {
                return this.rootsLotNoField;
            }
            set {
                this.rootsLotNoField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCDForSearch {
            get {
                return this.materialCDForSearchField;
            }
            set {
                this.materialCDForSearchField = value;
            }
        }
        
        /// <remarks/>
        public int LineNO {
            get {
                return this.lineNOField;
            }
            set {
                this.lineNOField = value;
            }
        }
        
        /// <remarks/>
        public string CD {
            get {
                return this.cdField;
            }
            set {
                this.cdField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharValue {
            get {
                return this.lotCharValueField;
            }
            set {
                this.lotCharValueField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCDForLotChar {
            get {
                return this.materialCDForLotCharField;
            }
            set {
                this.materialCDForLotCharField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialNM {
            get {
                return this.materialNMField;
            }
            set {
                this.materialNMField = value;
            }
        }
        
        /// <remarks/>
        public string CharValCD {
            get {
                return this.charValCDField;
            }
            set {
                this.charValCDField = value;
            }
        }
        
        /// <remarks/>
        public decimal MaxValue {
            get {
                return this.maxValueField;
            }
            set {
                this.maxValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal MinValue {
            get {
                return this.minValueField;
            }
            set {
                this.minValueField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharName {
            get {
                return this.lotCharNameField;
            }
            set {
                this.lotCharNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMustInput {
            get {
                return this.isMustInputField;
            }
            set {
                this.isMustInputField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessCD {
            get {
                return this.processCDField;
            }
            set {
                this.processCDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSucceed {
            get {
                return this.isSucceedField;
            }
            set {
                this.isSucceedField = value;
            }
        }
        
        /// <remarks/>
        public bool BomKB {
            get {
                return this.bomKBField;
            }
            set {
                this.bomKBField = value;
            }
        }
        
        /// <remarks/>
        public string DataTypeCD {
            get {
                return this.dataTypeCDField;
            }
            set {
                this.dataTypeCDField = value;
            }
        }
        
        /// <remarks/>
        public string RootsLotCharCD {
            get {
                return this.rootsLotCharCDField;
            }
            set {
                this.rootsLotCharCDField = value;
            }
        }
        
        /// <remarks/>
        public string AssemblyCD {
            get {
                return this.assemblyCDField;
            }
            set {
                this.assemblyCDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDelete {
            get {
                return this.isDeleteField;
            }
            set {
                this.isDeleteField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNotFlag {
            get {
                return this.isNotFlagField;
            }
            set {
                this.isNotFlagField = value;
            }
        }
        
        /// <remarks/>
        public int DigitCT {
            get {
                return this.digitCTField;
            }
            set {
                this.digitCTField = value;
            }
        }
        
        /// <remarks/>
        public int DecDigitCT {
            get {
                return this.decDigitCTField;
            }
            set {
                this.decDigitCTField = value;
            }
        }
        
        /// <remarks/>
        public string MateGroupCD {
            get {
                return this.mateGroupCDField;
            }
            set {
                this.mateGroupCDField = value;
            }
        }
        
        /// <remarks/>
        public int ViewNo {
            get {
                return this.viewNoField;
            }
            set {
                this.viewNoField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCd {
            get {
                return this.updUserCdField;
            }
            set {
                this.updUserCdField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNm {
            get {
                return this.updUserNmField;
            }
            set {
                this.updUserNmField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDt {
            get {
                return this.lastUpdDtField;
            }
            set {
                this.lastUpdDtField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialColorCD {
            get {
                return this.materialColorCDField;
            }
            set {
                this.materialColorCDField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialColorNM {
            get {
                return this.materialColorNMField;
            }
            set {
                this.materialColorNMField = value;
            }
        }
        
        /// <remarks/>
        public NppSchOperator SchOperator {
            get {
                return this.schOperatorField;
            }
            set {
                this.schOperatorField = value;
            }
        }
        
        /// <remarks/>
        public int ReferenceCode {
            get {
                return this.referenceCodeField;
            }
            set {
                this.referenceCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOnlyFlag {
            get {
                return this.isOnlyFlagField;
            }
            set {
                this.isOnlyFlagField = value;
            }
        }
        
        /// <remarks/>
        public int SearchNO {
            get {
                return this.searchNOField;
            }
            set {
                this.searchNOField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceNm {
            get {
                return this.referenceNmField;
            }
            set {
                this.referenceNmField = value;
            }
        }
        
        /// <remarks/>
        public int CharGroupKb {
            get {
                return this.charGroupKbField;
            }
            set {
                this.charGroupKbField = value;
            }
        }
        
        /// <remarks/>
        public string BomKbChar {
            get {
                return this.bomKbCharField;
            }
            set {
                this.bomKbCharField = value;
            }
        }
        
        /// <remarks/>
        public string OldCD {
            get {
                return this.oldCDField;
            }
            set {
                this.oldCDField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharJA {
            get {
                return this.lotCharJAField;
            }
            set {
                this.lotCharJAField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharEN {
            get {
                return this.lotCharENField;
            }
            set {
                this.lotCharENField = value;
            }
        }
        
        /// <remarks/>
        public string LotCharCH {
            get {
                return this.lotCharCHField;
            }
            set {
                this.lotCharCHField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRepeatCheck {
            get {
                return this.isRepeatCheckField;
            }
            set {
                this.isRepeatCheckField = value;
            }
        }
        
        /// <remarks/>
        public int RelaySeq {
            get {
                return this.relaySeqField;
            }
            set {
                this.relaySeqField = value;
            }
        }
        
        /// <remarks/>
        public int RelayLineNo {
            get {
                return this.relayLineNoField;
            }
            set {
                this.relayLineNoField = value;
            }
        }
        
        /// <remarks/>
        public string RelayCompDt {
            get {
                return this.relayCompDtField;
            }
            set {
                this.relayCompDtField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUpdOkFg {
            get {
                return this.isUpdOkFgField;
            }
            set {
                this.isUpdOkFgField = value;
            }
        }
        
        /// <remarks/>
        public int PItemLinNo {
            get {
                return this.pItemLinNoField;
            }
            set {
                this.pItemLinNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public enum NppSchOperator {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        Like,
        
        /// <remarks/>
        MoreThan,
        
        /// <remarks/>
        NotLessThan,
        
        /// <remarks/>
        LessThan,
        
        /// <remarks/>
        NotMoreThan,
        
        /// <remarks/>
        Is,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPubResultsFacilityInfo {
        
        private string plantCdField;
        
        private string lotNoField;
        
        private decimal throwCtField;
        
        private decimal compltCtField;
        
        private decimal defectCtField;
        
        private string startDtField;
        
        private string compltDtField;
        
        private string startUsrCdField;
        
        private string compltUsrCdField;
        
        private bool compltFgField;
        
        /// <remarks/>
        public string PlantCd {
            get {
                return this.plantCdField;
            }
            set {
                this.plantCdField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal ThrowCt {
            get {
                return this.throwCtField;
            }
            set {
                this.throwCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal CompltCt {
            get {
                return this.compltCtField;
            }
            set {
                this.compltCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal DefectCt {
            get {
                return this.defectCtField;
            }
            set {
                this.defectCtField = value;
            }
        }
        
        /// <remarks/>
        public string StartDt {
            get {
                return this.startDtField;
            }
            set {
                this.startDtField = value;
            }
        }
        
        /// <remarks/>
        public string CompltDt {
            get {
                return this.compltDtField;
            }
            set {
                this.compltDtField = value;
            }
        }
        
        /// <remarks/>
        public string StartUsrCd {
            get {
                return this.startUsrCdField;
            }
            set {
                this.startUsrCdField = value;
            }
        }
        
        /// <remarks/>
        public string CompltUsrCd {
            get {
                return this.compltUsrCdField;
            }
            set {
                this.compltUsrCdField = value;
            }
        }
        
        /// <remarks/>
        public bool CompltFg {
            get {
                return this.compltFgField;
            }
            set {
                this.compltFgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPubResultsCompltInfo {
        
        private string lotNoField;
        
        private string binCdField;
        
        private decimal compltrslCtField;
        
        private string nascalotNoField;
        
        private bool goodFgField;
        
        private int rankIdField;
        
        private int potNoField;
        
        private string commentNmField;
        
        private int lotStField;
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public string BinCd {
            get {
                return this.binCdField;
            }
            set {
                this.binCdField = value;
            }
        }
        
        /// <remarks/>
        public decimal CompltrslCt {
            get {
                return this.compltrslCtField;
            }
            set {
                this.compltrslCtField = value;
            }
        }
        
        /// <remarks/>
        public string NascalotNo {
            get {
                return this.nascalotNoField;
            }
            set {
                this.nascalotNoField = value;
            }
        }
        
        /// <remarks/>
        public bool GoodFg {
            get {
                return this.goodFgField;
            }
            set {
                this.goodFgField = value;
            }
        }
        
        /// <remarks/>
        public int RankId {
            get {
                return this.rankIdField;
            }
            set {
                this.rankIdField = value;
            }
        }
        
        /// <remarks/>
        public int PotNo {
            get {
                return this.potNoField;
            }
            set {
                this.potNoField = value;
            }
        }
        
        /// <remarks/>
        public string CommentNm {
            get {
                return this.commentNmField;
            }
            set {
                this.commentNmField = value;
            }
        }
        
        /// <remarks/>
        public int LotSt {
            get {
                return this.lotStField;
            }
            set {
                this.lotStField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPubResultsFailureInfo {
        
        private string defCauseCdField;
        
        private string defClassCdField;
        
        private string defItemCdField;
        
        private decimal defectCtField;
        
        private bool selfFgField;
        
        /// <remarks/>
        public string DefCauseCd {
            get {
                return this.defCauseCdField;
            }
            set {
                this.defCauseCdField = value;
            }
        }
        
        /// <remarks/>
        public string DefClassCd {
            get {
                return this.defClassCdField;
            }
            set {
                this.defClassCdField = value;
            }
        }
        
        /// <remarks/>
        public string DefItemCd {
            get {
                return this.defItemCdField;
            }
            set {
                this.defItemCdField = value;
            }
        }
        
        /// <remarks/>
        public decimal DefectCt {
            get {
                return this.defectCtField;
            }
            set {
                this.defectCtField = value;
            }
        }
        
        /// <remarks/>
        public bool SelfFg {
            get {
                return this.selfFgField;
            }
            set {
                this.selfFgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPubManufactResultsInfo {
        
        private string mnfctrslNoField;
        
        private decimal compltCtField;
        
        private decimal defectCtField;
        
        private string startDtField;
        
        private string compltDtField;
        
        private int compltFgField;
        
        /// <remarks/>
        public string MnfctrslNo {
            get {
                return this.mnfctrslNoField;
            }
            set {
                this.mnfctrslNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal CompltCt {
            get {
                return this.compltCtField;
            }
            set {
                this.compltCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal DefectCt {
            get {
                return this.defectCtField;
            }
            set {
                this.defectCtField = value;
            }
        }
        
        /// <remarks/>
        public string StartDt {
            get {
                return this.startDtField;
            }
            set {
                this.startDtField = value;
            }
        }
        
        /// <remarks/>
        public string CompltDt {
            get {
                return this.compltDtField;
            }
            set {
                this.compltDtField = value;
            }
        }
        
        /// <remarks/>
        public int CompltFg {
            get {
                return this.compltFgField;
            }
            set {
                this.compltFgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPubManufactWorkInfo {
        
        private int worklinNoField;
        
        private string workCdField;
        
        private int endworkFgField;
        
        /// <remarks/>
        public int WorklinNo {
            get {
                return this.worklinNoField;
            }
            set {
                this.worklinNoField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCd {
            get {
                return this.workCdField;
            }
            set {
                this.workCdField = value;
            }
        }
        
        /// <remarks/>
        public int EndworkFg {
            get {
                return this.endworkFgField;
            }
            set {
                this.endworkFgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPubManufactMaterialInfo {
        
        private string mtralitemCdField;
        
        private decimal inputCtField;
        
        private string inputschDtField;
        
        private string lotNoField;
        
        private string nascalotNoField;
        
        private string binCdField;
        
        private string inputUserCdField;
        
        /// <remarks/>
        public string MtralitemCd {
            get {
                return this.mtralitemCdField;
            }
            set {
                this.mtralitemCdField = value;
            }
        }
        
        /// <remarks/>
        public decimal InputCt {
            get {
                return this.inputCtField;
            }
            set {
                this.inputCtField = value;
            }
        }
        
        /// <remarks/>
        public string InputschDt {
            get {
                return this.inputschDtField;
            }
            set {
                this.inputschDtField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public string NascalotNo {
            get {
                return this.nascalotNoField;
            }
            set {
                this.nascalotNoField = value;
            }
        }
        
        /// <remarks/>
        public string BinCd {
            get {
                return this.binCdField;
            }
            set {
                this.binCdField = value;
            }
        }
        
        /// <remarks/>
        public string InputUserCd {
            get {
                return this.inputUserCdField;
            }
            set {
                this.inputUserCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppPubMaterialOrderInfo {
        
        private string materialCdField;
        
        private decimal indicateCtField;
        
        private string startschDtField;
        
        private string compltschDtField;
        
        private int instructStField;
        
        private int mnfctKbField;
        
        private int selectionIdField;
        
        private string commentNmField;
        
        private string issueDtField;
        
        private string mnfctinstNoField;
        
        private int ngCtField;
        
        private string lotNoField;
        
        private string typeCdField;
        
        private string nascaLotMmField;
        
        private int transKbField;
        
        private string recptpayDtField;
        
        private NppPubManufactMaterialInfo[] manufactMaterialInfoField;
        
        private NppPubManufactWorkInfo manufactWorkInfoField;
        
        private NppPubManufactResultsInfo manufactResultsInfoField;
        
        private NppPubResultsFailureInfo[] resultsFailureInfoField;
        
        private NppPubResultsCompltInfo[] resultsCompltInfoField;
        
        private NppPubResultsFacilityInfo resultsFacilityInfoField;
        
        /// <remarks/>
        public string MaterialCd {
            get {
                return this.materialCdField;
            }
            set {
                this.materialCdField = value;
            }
        }
        
        /// <remarks/>
        public decimal IndicateCt {
            get {
                return this.indicateCtField;
            }
            set {
                this.indicateCtField = value;
            }
        }
        
        /// <remarks/>
        public string StartschDt {
            get {
                return this.startschDtField;
            }
            set {
                this.startschDtField = value;
            }
        }
        
        /// <remarks/>
        public string CompltschDt {
            get {
                return this.compltschDtField;
            }
            set {
                this.compltschDtField = value;
            }
        }
        
        /// <remarks/>
        public int InstructSt {
            get {
                return this.instructStField;
            }
            set {
                this.instructStField = value;
            }
        }
        
        /// <remarks/>
        public int MnfctKb {
            get {
                return this.mnfctKbField;
            }
            set {
                this.mnfctKbField = value;
            }
        }
        
        /// <remarks/>
        public int SelectionId {
            get {
                return this.selectionIdField;
            }
            set {
                this.selectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string CommentNm {
            get {
                return this.commentNmField;
            }
            set {
                this.commentNmField = value;
            }
        }
        
        /// <remarks/>
        public string IssueDt {
            get {
                return this.issueDtField;
            }
            set {
                this.issueDtField = value;
            }
        }
        
        /// <remarks/>
        public string MnfctinstNo {
            get {
                return this.mnfctinstNoField;
            }
            set {
                this.mnfctinstNoField = value;
            }
        }
        
        /// <remarks/>
        public int NgCt {
            get {
                return this.ngCtField;
            }
            set {
                this.ngCtField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotMm {
            get {
                return this.nascaLotMmField;
            }
            set {
                this.nascaLotMmField = value;
            }
        }
        
        /// <remarks/>
        public int TransKb {
            get {
                return this.transKbField;
            }
            set {
                this.transKbField = value;
            }
        }
        
        /// <remarks/>
        public string RecptpayDt {
            get {
                return this.recptpayDtField;
            }
            set {
                this.recptpayDtField = value;
            }
        }
        
        /// <remarks/>
        public NppPubManufactMaterialInfo[] ManufactMaterialInfo {
            get {
                return this.manufactMaterialInfoField;
            }
            set {
                this.manufactMaterialInfoField = value;
            }
        }
        
        /// <remarks/>
        public NppPubManufactWorkInfo ManufactWorkInfo {
            get {
                return this.manufactWorkInfoField;
            }
            set {
                this.manufactWorkInfoField = value;
            }
        }
        
        /// <remarks/>
        public NppPubManufactResultsInfo ManufactResultsInfo {
            get {
                return this.manufactResultsInfoField;
            }
            set {
                this.manufactResultsInfoField = value;
            }
        }
        
        /// <remarks/>
        public NppPubResultsFailureInfo[] ResultsFailureInfo {
            get {
                return this.resultsFailureInfoField;
            }
            set {
                this.resultsFailureInfoField = value;
            }
        }
        
        /// <remarks/>
        public NppPubResultsCompltInfo[] ResultsCompltInfo {
            get {
                return this.resultsCompltInfoField;
            }
            set {
                this.resultsCompltInfoField = value;
            }
        }
        
        /// <remarks/>
        public NppPubResultsFacilityInfo ResultsFacilityInfo {
            get {
                return this.resultsFacilityInfoField;
            }
            set {
                this.resultsFacilityInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppFrameAssignInfo {
        
        private string asmLotNoField;
        
        private string frmLotNoField;
        
        private string frmMatCdField;
        
        private string frmMatNmField;
        
        private string plantCdField;
        
        private string plantNmField;
        
        private decimal assignCtField;
        
        private bool printCompltFgField;
        
        private bool regCompltFgField;
        
        private bool delFgField;
        
        private string updUserCdField;
        
        private string updUserNmField;
        
        private string lastUpdDtField;
        
        /// <remarks/>
        public string AsmLotNo {
            get {
                return this.asmLotNoField;
            }
            set {
                this.asmLotNoField = value;
            }
        }
        
        /// <remarks/>
        public string FrmLotNo {
            get {
                return this.frmLotNoField;
            }
            set {
                this.frmLotNoField = value;
            }
        }
        
        /// <remarks/>
        public string FrmMatCd {
            get {
                return this.frmMatCdField;
            }
            set {
                this.frmMatCdField = value;
            }
        }
        
        /// <remarks/>
        public string FrmMatNm {
            get {
                return this.frmMatNmField;
            }
            set {
                this.frmMatNmField = value;
            }
        }
        
        /// <remarks/>
        public string PlantCd {
            get {
                return this.plantCdField;
            }
            set {
                this.plantCdField = value;
            }
        }
        
        /// <remarks/>
        public string PlantNm {
            get {
                return this.plantNmField;
            }
            set {
                this.plantNmField = value;
            }
        }
        
        /// <remarks/>
        public decimal AssignCt {
            get {
                return this.assignCtField;
            }
            set {
                this.assignCtField = value;
            }
        }
        
        /// <remarks/>
        public bool PrintCompltFg {
            get {
                return this.printCompltFgField;
            }
            set {
                this.printCompltFgField = value;
            }
        }
        
        /// <remarks/>
        public bool RegCompltFg {
            get {
                return this.regCompltFgField;
            }
            set {
                this.regCompltFgField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFg {
            get {
                return this.delFgField;
            }
            set {
                this.delFgField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCd {
            get {
                return this.updUserCdField;
            }
            set {
                this.updUserCdField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNm {
            get {
                return this.updUserNmField;
            }
            set {
                this.updUserNmField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDt {
            get {
                return this.lastUpdDtField;
            }
            set {
                this.lastUpdDtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppCarrierLotInfo {
        
        private int nascaLotIDField;
        
        private string typeCDField;
        
        private string nascaLotNOField;
        
        private string magazineNOField;
        
        private string carrierNOField;
        
        private bool operateFGField;
        
        private string operateNMField;
        
        private bool delFGField;
        
        private string updUserCDField;
        
        private string updUserNMField;
        
        private string lastUpdDTField;
        
        private string premagazineNOField;
        
        private string precarrierNOField;
        
        private string materialCDField;
        
        private string materialNMField;
        
        private string startDTField;
        
        /// <remarks/>
        public int NascaLotID {
            get {
                return this.nascaLotIDField;
            }
            set {
                this.nascaLotIDField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotNO {
            get {
                return this.nascaLotNOField;
            }
            set {
                this.nascaLotNOField = value;
            }
        }
        
        /// <remarks/>
        public string MagazineNO {
            get {
                return this.magazineNOField;
            }
            set {
                this.magazineNOField = value;
            }
        }
        
        /// <remarks/>
        public string CarrierNO {
            get {
                return this.carrierNOField;
            }
            set {
                this.carrierNOField = value;
            }
        }
        
        /// <remarks/>
        public bool OperateFG {
            get {
                return this.operateFGField;
            }
            set {
                this.operateFGField = value;
            }
        }
        
        /// <remarks/>
        public string OperateNM {
            get {
                return this.operateNMField;
            }
            set {
                this.operateNMField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNM {
            get {
                return this.updUserNMField;
            }
            set {
                this.updUserNMField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
        
        /// <remarks/>
        public string PremagazineNO {
            get {
                return this.premagazineNOField;
            }
            set {
                this.premagazineNOField = value;
            }
        }
        
        /// <remarks/>
        public string PrecarrierNO {
            get {
                return this.precarrierNOField;
            }
            set {
                this.precarrierNOField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialNM {
            get {
                return this.materialNMField;
            }
            set {
                this.materialNMField = value;
            }
        }
        
        /// <remarks/>
        public string StartDT {
            get {
                return this.startDTField;
            }
            set {
                this.startDTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppResultsPartsInfo {
        
        private string mnfctrslNoField;
        
        private int plantlinNoField;
        
        private string partsCdField;
        
        private string partsNmField;
        
        private string partsClasCdField;
        
        private string partsClasNmField;
        
        /// <remarks/>
        public string MnfctrslNo {
            get {
                return this.mnfctrslNoField;
            }
            set {
                this.mnfctrslNoField = value;
            }
        }
        
        /// <remarks/>
        public int PlantlinNo {
            get {
                return this.plantlinNoField;
            }
            set {
                this.plantlinNoField = value;
            }
        }
        
        /// <remarks/>
        public string PartsCd {
            get {
                return this.partsCdField;
            }
            set {
                this.partsCdField = value;
            }
        }
        
        /// <remarks/>
        public string PartsNm {
            get {
                return this.partsNmField;
            }
            set {
                this.partsNmField = value;
            }
        }
        
        /// <remarks/>
        public string PartsClasCd {
            get {
                return this.partsClasCdField;
            }
            set {
                this.partsClasCdField = value;
            }
        }
        
        /// <remarks/>
        public string PartsClasNm {
            get {
                return this.partsClasNmField;
            }
            set {
                this.partsClasNmField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppResultsFacilityInfo {
        
        private string mnfctrslNoField;
        
        private int plantlinNoField;
        
        private string plantCdField;
        
        private string plantNmField;
        
        private string plantClasCdField;
        
        private string plantClasNmField;
        
        private string lotNoField;
        
        private string magazineNoField;
        
        private decimal throwCtField;
        
        private decimal compltCtField;
        
        private decimal defectCtField;
        
        private string startDtField;
        
        private string compltDtField;
        
        private string startUsrCdField;
        
        private string startUsrNmField;
        
        private string compltUsrCdField;
        
        private string compltUsrNmField;
        
        private bool compltFgField;
        
        private bool errorFgField;
        
        private string errorFgReasonField;
        
        private string workCdField;
        
        private NppResultsPartsInfo[] resultsPartsTblField;
        
        private int processCdField;
        
        private string processNmField;
        
        private string workNmField;
        
        private int workLinNoField;
        
        private string materialCdField;
        
        private int mnfctTmpLinNoField;
        
        private string typeCdField;
        
        /// <remarks/>
        public string MnfctrslNo {
            get {
                return this.mnfctrslNoField;
            }
            set {
                this.mnfctrslNoField = value;
            }
        }
        
        /// <remarks/>
        public int PlantlinNo {
            get {
                return this.plantlinNoField;
            }
            set {
                this.plantlinNoField = value;
            }
        }
        
        /// <remarks/>
        public string PlantCd {
            get {
                return this.plantCdField;
            }
            set {
                this.plantCdField = value;
            }
        }
        
        /// <remarks/>
        public string PlantNm {
            get {
                return this.plantNmField;
            }
            set {
                this.plantNmField = value;
            }
        }
        
        /// <remarks/>
        public string PlantClasCd {
            get {
                return this.plantClasCdField;
            }
            set {
                this.plantClasCdField = value;
            }
        }
        
        /// <remarks/>
        public string PlantClasNm {
            get {
                return this.plantClasNmField;
            }
            set {
                this.plantClasNmField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public string MagazineNo {
            get {
                return this.magazineNoField;
            }
            set {
                this.magazineNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal ThrowCt {
            get {
                return this.throwCtField;
            }
            set {
                this.throwCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal CompltCt {
            get {
                return this.compltCtField;
            }
            set {
                this.compltCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal DefectCt {
            get {
                return this.defectCtField;
            }
            set {
                this.defectCtField = value;
            }
        }
        
        /// <remarks/>
        public string StartDt {
            get {
                return this.startDtField;
            }
            set {
                this.startDtField = value;
            }
        }
        
        /// <remarks/>
        public string CompltDt {
            get {
                return this.compltDtField;
            }
            set {
                this.compltDtField = value;
            }
        }
        
        /// <remarks/>
        public string StartUsrCd {
            get {
                return this.startUsrCdField;
            }
            set {
                this.startUsrCdField = value;
            }
        }
        
        /// <remarks/>
        public string StartUsrNm {
            get {
                return this.startUsrNmField;
            }
            set {
                this.startUsrNmField = value;
            }
        }
        
        /// <remarks/>
        public string CompltUsrCd {
            get {
                return this.compltUsrCdField;
            }
            set {
                this.compltUsrCdField = value;
            }
        }
        
        /// <remarks/>
        public string CompltUsrNm {
            get {
                return this.compltUsrNmField;
            }
            set {
                this.compltUsrNmField = value;
            }
        }
        
        /// <remarks/>
        public bool CompltFg {
            get {
                return this.compltFgField;
            }
            set {
                this.compltFgField = value;
            }
        }
        
        /// <remarks/>
        public bool ErrorFg {
            get {
                return this.errorFgField;
            }
            set {
                this.errorFgField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorFgReason {
            get {
                return this.errorFgReasonField;
            }
            set {
                this.errorFgReasonField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCd {
            get {
                return this.workCdField;
            }
            set {
                this.workCdField = value;
            }
        }
        
        /// <remarks/>
        public NppResultsPartsInfo[] ResultsPartsTbl {
            get {
                return this.resultsPartsTblField;
            }
            set {
                this.resultsPartsTblField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessCd {
            get {
                return this.processCdField;
            }
            set {
                this.processCdField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessNm {
            get {
                return this.processNmField;
            }
            set {
                this.processNmField = value;
            }
        }
        
        /// <remarks/>
        public string WorkNm {
            get {
                return this.workNmField;
            }
            set {
                this.workNmField = value;
            }
        }
        
        /// <remarks/>
        public int WorkLinNo {
            get {
                return this.workLinNoField;
            }
            set {
                this.workLinNoField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCd {
            get {
                return this.materialCdField;
            }
            set {
                this.materialCdField = value;
            }
        }
        
        /// <remarks/>
        public int MnfctTmpLinNo {
            get {
                return this.mnfctTmpLinNoField;
            }
            set {
                this.mnfctTmpLinNoField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppSchTargetLotManufactResultFacility {
        
        private string lotNOField;
        
        private string plantClasCDField;
        
        /// <remarks/>
        public string LotNO {
            get {
                return this.lotNOField;
            }
            set {
                this.lotNOField = value;
            }
        }
        
        /// <remarks/>
        public string PlantClasCD {
            get {
                return this.plantClasCDField;
            }
            set {
                this.plantClasCDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppEditManufactOrderInfo {
        
        private int inlineNoField;
        
        private string nascaLotNoField;
        
        private string magazineNoField;
        
        private string plantCdField;
        
        private string workCdField;
        
        private string strUsrCdField;
        
        private string strDateField;
        
        private string endUsrCdField;
        
        private string endDateField;
        
        private bool isCompleteField;
        
        private string generalValField;
        
        /// <remarks/>
        public int InlineNo {
            get {
                return this.inlineNoField;
            }
            set {
                this.inlineNoField = value;
            }
        }
        
        /// <remarks/>
        public string NascaLotNo {
            get {
                return this.nascaLotNoField;
            }
            set {
                this.nascaLotNoField = value;
            }
        }
        
        /// <remarks/>
        public string MagazineNo {
            get {
                return this.magazineNoField;
            }
            set {
                this.magazineNoField = value;
            }
        }
        
        /// <remarks/>
        public string PlantCd {
            get {
                return this.plantCdField;
            }
            set {
                this.plantCdField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCd {
            get {
                return this.workCdField;
            }
            set {
                this.workCdField = value;
            }
        }
        
        /// <remarks/>
        public string StrUsrCd {
            get {
                return this.strUsrCdField;
            }
            set {
                this.strUsrCdField = value;
            }
        }
        
        /// <remarks/>
        public string StrDate {
            get {
                return this.strDateField;
            }
            set {
                this.strDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndUsrCd {
            get {
                return this.endUsrCdField;
            }
            set {
                this.endUsrCdField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsComplete {
            get {
                return this.isCompleteField;
            }
            set {
                this.isCompleteField = value;
            }
        }
        
        /// <remarks/>
        public string GeneralVal {
            get {
                return this.generalValField;
            }
            set {
                this.generalValField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppMeasureRstInfo {
        
        private string typeCDField;
        
        private string materialCDField;
        
        private string materialNMField;
        
        private string rootslotNOField;
        
        private int measureItemCDField;
        
        private string measureItemNMField;
        
        private int measureRsltKBField;
        
        private string measureRsltNMField;
        
        private string commentNMField;
        
        private bool delFGField;
        
        private string updUserCDField;
        
        private string updUserNMField;
        
        private string lastUpdDTField;
        
        private string plantCDField;
        
        private string plantNMField;
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialNM {
            get {
                return this.materialNMField;
            }
            set {
                this.materialNMField = value;
            }
        }
        
        /// <remarks/>
        public string RootslotNO {
            get {
                return this.rootslotNOField;
            }
            set {
                this.rootslotNOField = value;
            }
        }
        
        /// <remarks/>
        public int MeasureItemCD {
            get {
                return this.measureItemCDField;
            }
            set {
                this.measureItemCDField = value;
            }
        }
        
        /// <remarks/>
        public string MeasureItemNM {
            get {
                return this.measureItemNMField;
            }
            set {
                this.measureItemNMField = value;
            }
        }
        
        /// <remarks/>
        public int MeasureRsltKB {
            get {
                return this.measureRsltKBField;
            }
            set {
                this.measureRsltKBField = value;
            }
        }
        
        /// <remarks/>
        public string MeasureRsltNM {
            get {
                return this.measureRsltNMField;
            }
            set {
                this.measureRsltNMField = value;
            }
        }
        
        /// <remarks/>
        public string CommentNM {
            get {
                return this.commentNMField;
            }
            set {
                this.commentNMField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNM {
            get {
                return this.updUserNMField;
            }
            set {
                this.updUserNMField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
        
        /// <remarks/>
        public string PlantCD {
            get {
                return this.plantCDField;
            }
            set {
                this.plantCDField = value;
            }
        }
        
        /// <remarks/>
        public string PlantNM {
            get {
                return this.plantNMField;
            }
            set {
                this.plantNMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppSchMeasureRst {
        
        private string typeCdField;
        
        private string materialCdField;
        
        private string rootslotNoField;
        
        private int cdField;
        
        private bool delFgField;
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCd {
            get {
                return this.materialCdField;
            }
            set {
                this.materialCdField = value;
            }
        }
        
        /// <remarks/>
        public string RootslotNo {
            get {
                return this.rootslotNoField;
            }
            set {
                this.rootslotNoField = value;
            }
        }
        
        /// <remarks/>
        public int CD {
            get {
                return this.cdField;
            }
            set {
                this.cdField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFg {
            get {
                return this.delFgField;
            }
            set {
                this.delFgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppBlendResinRelationInfo {
        
        private int parResultIDField;
        
        private int chiResultIDField;
        
        private bool delFGField;
        
        private string updUserCDField;
        
        private string lastUpdDTField;
        
        /// <remarks/>
        public int ParResultID {
            get {
                return this.parResultIDField;
            }
            set {
                this.parResultIDField = value;
            }
        }
        
        /// <remarks/>
        public int ChiResultID {
            get {
                return this.chiResultIDField;
            }
            set {
                this.chiResultIDField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppBlendResinLotInfo {
        
        private int resultIDField;
        
        private int mateLinNOField;
        
        private string materialCDField;
        
        private string materialNMField;
        
        private string lotNOField;
        
        private bool delFGField;
        
        private string updUserCDField;
        
        private string updUserNMField;
        
        private string lastUpdDTField;
        
        /// <remarks/>
        public int ResultID {
            get {
                return this.resultIDField;
            }
            set {
                this.resultIDField = value;
            }
        }
        
        /// <remarks/>
        public int MateLinNO {
            get {
                return this.mateLinNOField;
            }
            set {
                this.mateLinNOField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCD {
            get {
                return this.materialCDField;
            }
            set {
                this.materialCDField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialNM {
            get {
                return this.materialNMField;
            }
            set {
                this.materialNMField = value;
            }
        }
        
        /// <remarks/>
        public string LotNO {
            get {
                return this.lotNOField;
            }
            set {
                this.lotNOField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserNM {
            get {
                return this.updUserNMField;
            }
            set {
                this.updUserNMField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppBlendResinResultInfo {
        
        private int resultIDField;
        
        private int rationIDField;
        
        private string mixRateNMField;
        
        private string useLimitDTField;
        
        private string typeCDField;
        
        private int rationGpCDField;
        
        private string mixTypeCDField;
        
        private bool delFGField;
        
        private string updUserCDField;
        
        private string upduserNMField;
        
        private string lastUpdDTField;
        
        private string asmThrowFGField;
        
        private NppBlendResinLotInfo[] blendResinLotInfoField;
        
        /// <remarks/>
        public int ResultID {
            get {
                return this.resultIDField;
            }
            set {
                this.resultIDField = value;
            }
        }
        
        /// <remarks/>
        public int RationID {
            get {
                return this.rationIDField;
            }
            set {
                this.rationIDField = value;
            }
        }
        
        /// <remarks/>
        public string MixRateNM {
            get {
                return this.mixRateNMField;
            }
            set {
                this.mixRateNMField = value;
            }
        }
        
        /// <remarks/>
        public string UseLimitDT {
            get {
                return this.useLimitDTField;
            }
            set {
                this.useLimitDTField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCD {
            get {
                return this.typeCDField;
            }
            set {
                this.typeCDField = value;
            }
        }
        
        /// <remarks/>
        public int RationGpCD {
            get {
                return this.rationGpCDField;
            }
            set {
                this.rationGpCDField = value;
            }
        }
        
        /// <remarks/>
        public string MixTypeCD {
            get {
                return this.mixTypeCDField;
            }
            set {
                this.mixTypeCDField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFG {
            get {
                return this.delFGField;
            }
            set {
                this.delFGField = value;
            }
        }
        
        /// <remarks/>
        public string UpdUserCD {
            get {
                return this.updUserCDField;
            }
            set {
                this.updUserCDField = value;
            }
        }
        
        /// <remarks/>
        public string UpduserNM {
            get {
                return this.upduserNMField;
            }
            set {
                this.upduserNMField = value;
            }
        }
        
        /// <remarks/>
        public string LastUpdDT {
            get {
                return this.lastUpdDTField;
            }
            set {
                this.lastUpdDTField = value;
            }
        }
        
        /// <remarks/>
        public string AsmThrowFG {
            get {
                return this.asmThrowFGField;
            }
            set {
                this.asmThrowFGField = value;
            }
        }
        
        /// <remarks/>
        public NppBlendResinLotInfo[] BlendResinLotInfo {
            get {
                return this.blendResinLotInfoField;
            }
            set {
                this.blendResinLotInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoMaterialComplete {
        
        private string lotNoField;
        
        private decimal compltrslCtField;
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal CompltrslCt {
            get {
                return this.compltrslCtField;
            }
            set {
                this.compltrslCtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoResultsMaterial {
        
        private string mtralitemCdField;
        
        private string lotNoField;
        
        private decimal inputrslCtField;
        
        /// <remarks/>
        public string MtralitemCd {
            get {
                return this.mtralitemCdField;
            }
            set {
                this.mtralitemCdField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal InputrslCt {
            get {
                return this.inputrslCtField;
            }
            set {
                this.inputrslCtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoMaterialResults {
        
        private string mnfctrslNoField;
        
        private string mnfctinstNOField;
        
        private int worklinNoField;
        
        private decimal compltCtField;
        
        private decimal defectCtField;
        
        private string startDtField;
        
        private string compltDtField;
        
        private int compltFgField;
        
        private string workCdField;
        
        private string workNmField;
        
        private string materialCdField;
        
        private string mnfctCommentNmField;
        
        private NppInfoResultsMaterial[] mateInfoField;
        
        private NppInfoMaterialComplete[] completeInfoField;
        
        /// <remarks/>
        public string MnfctrslNo {
            get {
                return this.mnfctrslNoField;
            }
            set {
                this.mnfctrslNoField = value;
            }
        }
        
        /// <remarks/>
        public string MnfctinstNO {
            get {
                return this.mnfctinstNOField;
            }
            set {
                this.mnfctinstNOField = value;
            }
        }
        
        /// <remarks/>
        public int WorklinNo {
            get {
                return this.worklinNoField;
            }
            set {
                this.worklinNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal CompltCt {
            get {
                return this.compltCtField;
            }
            set {
                this.compltCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal DefectCt {
            get {
                return this.defectCtField;
            }
            set {
                this.defectCtField = value;
            }
        }
        
        /// <remarks/>
        public string StartDt {
            get {
                return this.startDtField;
            }
            set {
                this.startDtField = value;
            }
        }
        
        /// <remarks/>
        public string CompltDt {
            get {
                return this.compltDtField;
            }
            set {
                this.compltDtField = value;
            }
        }
        
        /// <remarks/>
        public int CompltFg {
            get {
                return this.compltFgField;
            }
            set {
                this.compltFgField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCd {
            get {
                return this.workCdField;
            }
            set {
                this.workCdField = value;
            }
        }
        
        /// <remarks/>
        public string WorkNm {
            get {
                return this.workNmField;
            }
            set {
                this.workNmField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCd {
            get {
                return this.materialCdField;
            }
            set {
                this.materialCdField = value;
            }
        }
        
        /// <remarks/>
        public string MnfctCommentNm {
            get {
                return this.mnfctCommentNmField;
            }
            set {
                this.mnfctCommentNmField = value;
            }
        }
        
        /// <remarks/>
        public NppInfoResultsMaterial[] MateInfo {
            get {
                return this.mateInfoField;
            }
            set {
                this.mateInfoField = value;
            }
        }
        
        /// <remarks/>
        public NppInfoMaterialComplete[] CompleteInfo {
            get {
                return this.completeInfoField;
            }
            set {
                this.completeInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoOrderPegging {
        
        private int cCodeField;
        
        private string cNameField;
        
        private string userCdField;
        
        private string userNmField;
        
        private int dueIdField;
        
        private int orderIdField;
        
        private int rankIdField;
        
        private string rankNmField;
        
        private string specNoField;
        
        private decimal salesOrdCtField;
        
        private decimal deliveryCtField;
        
        private decimal directCtField;
        
        private string shipschDtField;
        
        private bool delFlagField;
        
        /// <remarks/>
        public int CCode {
            get {
                return this.cCodeField;
            }
            set {
                this.cCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CName {
            get {
                return this.cNameField;
            }
            set {
                this.cNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserCd {
            get {
                return this.userCdField;
            }
            set {
                this.userCdField = value;
            }
        }
        
        /// <remarks/>
        public string UserNm {
            get {
                return this.userNmField;
            }
            set {
                this.userNmField = value;
            }
        }
        
        /// <remarks/>
        public int DueId {
            get {
                return this.dueIdField;
            }
            set {
                this.dueIdField = value;
            }
        }
        
        /// <remarks/>
        public int OrderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        public int RankId {
            get {
                return this.rankIdField;
            }
            set {
                this.rankIdField = value;
            }
        }
        
        /// <remarks/>
        public string RankNm {
            get {
                return this.rankNmField;
            }
            set {
                this.rankNmField = value;
            }
        }
        
        /// <remarks/>
        public string SpecNo {
            get {
                return this.specNoField;
            }
            set {
                this.specNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal SalesOrdCt {
            get {
                return this.salesOrdCtField;
            }
            set {
                this.salesOrdCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal DeliveryCt {
            get {
                return this.deliveryCtField;
            }
            set {
                this.deliveryCtField = value;
            }
        }
        
        /// <remarks/>
        public decimal DirectCt {
            get {
                return this.directCtField;
            }
            set {
                this.directCtField = value;
            }
        }
        
        /// <remarks/>
        public string ShipschDt {
            get {
                return this.shipschDtField;
            }
            set {
                this.shipschDtField = value;
            }
        }
        
        /// <remarks/>
        public bool DelFlag {
            get {
                return this.delFlagField;
            }
            set {
                this.delFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoManufactWork {
        
        private string workCdField;
        
        private string workNmField;
        
        private string startschDtField;
        
        private string compltschDtField;
        
        private int mnfctworkStField;
        
        private string mnfctworkNmField;
        
        /// <remarks/>
        public string WorkCd {
            get {
                return this.workCdField;
            }
            set {
                this.workCdField = value;
            }
        }
        
        /// <remarks/>
        public string WorkNm {
            get {
                return this.workNmField;
            }
            set {
                this.workNmField = value;
            }
        }
        
        /// <remarks/>
        public string StartschDt {
            get {
                return this.startschDtField;
            }
            set {
                this.startschDtField = value;
            }
        }
        
        /// <remarks/>
        public string CompltschDt {
            get {
                return this.compltschDtField;
            }
            set {
                this.compltschDtField = value;
            }
        }
        
        /// <remarks/>
        public int MnfctworkSt {
            get {
                return this.mnfctworkStField;
            }
            set {
                this.mnfctworkStField = value;
            }
        }
        
        /// <remarks/>
        public string MnfctworkNm {
            get {
                return this.mnfctworkNmField;
            }
            set {
                this.mnfctworkNmField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoManufactMaterial {
        
        private string mtralitemCdField;
        
        private string mtralitemNmField;
        
        private string workCdField;
        
        private string workNmField;
        
        private string binCdField;
        
        private string binNmField;
        
        private decimal inputCtField;
        
        private string lotNoField;
        
        private string nascalotNoField;
        
        private int rankIdField;
        
        private string rankNmField;
        
        private string typeCdField;
        
        /// <remarks/>
        public string MtralitemCd {
            get {
                return this.mtralitemCdField;
            }
            set {
                this.mtralitemCdField = value;
            }
        }
        
        /// <remarks/>
        public string MtralitemNm {
            get {
                return this.mtralitemNmField;
            }
            set {
                this.mtralitemNmField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCd {
            get {
                return this.workCdField;
            }
            set {
                this.workCdField = value;
            }
        }
        
        /// <remarks/>
        public string WorkNm {
            get {
                return this.workNmField;
            }
            set {
                this.workNmField = value;
            }
        }
        
        /// <remarks/>
        public string BinCd {
            get {
                return this.binCdField;
            }
            set {
                this.binCdField = value;
            }
        }
        
        /// <remarks/>
        public string BinNm {
            get {
                return this.binNmField;
            }
            set {
                this.binNmField = value;
            }
        }
        
        /// <remarks/>
        public decimal InputCt {
            get {
                return this.inputCtField;
            }
            set {
                this.inputCtField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public string NascalotNo {
            get {
                return this.nascalotNoField;
            }
            set {
                this.nascalotNoField = value;
            }
        }
        
        /// <remarks/>
        public int RankId {
            get {
                return this.rankIdField;
            }
            set {
                this.rankIdField = value;
            }
        }
        
        /// <remarks/>
        public string RankNm {
            get {
                return this.rankNmField;
            }
            set {
                this.rankNmField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppInfoMaterialOrder {
        
        private string mnfctinstNoField;
        
        private int instructStField;
        
        private string instructNmField;
        
        private int mnfctKbField;
        
        private string mnfctKbNmField;
        
        private string typeCdField;
        
        private string materialCdField;
        
        private string materialNmField;
        
        private decimal indicateCtField;
        
        private string lotNoField;
        
        private int processCdField;
        
        private string startschDtField;
        
        private int rankIdField;
        
        private string rankNmField;
        
        private NppInfoManufactMaterial[] manufactMaterialTblField;
        
        private NppInfoManufactWork[] manufactWorkTblField;
        
        private NppInfoOrderPegging[] orderPeggingTblField;
        
        /// <remarks/>
        public string MnfctinstNo {
            get {
                return this.mnfctinstNoField;
            }
            set {
                this.mnfctinstNoField = value;
            }
        }
        
        /// <remarks/>
        public int InstructSt {
            get {
                return this.instructStField;
            }
            set {
                this.instructStField = value;
            }
        }
        
        /// <remarks/>
        public string InstructNm {
            get {
                return this.instructNmField;
            }
            set {
                this.instructNmField = value;
            }
        }
        
        /// <remarks/>
        public int MnfctKb {
            get {
                return this.mnfctKbField;
            }
            set {
                this.mnfctKbField = value;
            }
        }
        
        /// <remarks/>
        public string MnfctKbNm {
            get {
                return this.mnfctKbNmField;
            }
            set {
                this.mnfctKbNmField = value;
            }
        }
        
        /// <remarks/>
        public string TypeCd {
            get {
                return this.typeCdField;
            }
            set {
                this.typeCdField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialCd {
            get {
                return this.materialCdField;
            }
            set {
                this.materialCdField = value;
            }
        }
        
        /// <remarks/>
        public string MaterialNm {
            get {
                return this.materialNmField;
            }
            set {
                this.materialNmField = value;
            }
        }
        
        /// <remarks/>
        public decimal IndicateCt {
            get {
                return this.indicateCtField;
            }
            set {
                this.indicateCtField = value;
            }
        }
        
        /// <remarks/>
        public string LotNo {
            get {
                return this.lotNoField;
            }
            set {
                this.lotNoField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessCd {
            get {
                return this.processCdField;
            }
            set {
                this.processCdField = value;
            }
        }
        
        /// <remarks/>
        public string StartschDt {
            get {
                return this.startschDtField;
            }
            set {
                this.startschDtField = value;
            }
        }
        
        /// <remarks/>
        public int RankId {
            get {
                return this.rankIdField;
            }
            set {
                this.rankIdField = value;
            }
        }
        
        /// <remarks/>
        public string RankNm {
            get {
                return this.rankNmField;
            }
            set {
                this.rankNmField = value;
            }
        }
        
        /// <remarks/>
        public NppInfoManufactMaterial[] ManufactMaterialTbl {
            get {
                return this.manufactMaterialTblField;
            }
            set {
                this.manufactMaterialTblField = value;
            }
        }
        
        /// <remarks/>
        public NppInfoManufactWork[] ManufactWorkTbl {
            get {
                return this.manufactWorkTblField;
            }
            set {
                this.manufactWorkTblField = value;
            }
        }
        
        /// <remarks/>
        public NppInfoOrderPegging[] OrderPeggingTbl {
            get {
                return this.orderPeggingTblField;
            }
            set {
                this.orderPeggingTblField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppExceptionInformation {
        
        private string occurrenceDTField;
        
        private NppLoginInfo loginInfoField;
        
        private string exceptionTypeNMField;
        
        private string exceptionMessageField;
        
        private string exceptionStackTraceField;
        
        private string exceptionSourceField;
        
        private string addtionalInformationField;
        
        /// <remarks/>
        public string OccurrenceDT {
            get {
                return this.occurrenceDTField;
            }
            set {
                this.occurrenceDTField = value;
            }
        }
        
        /// <remarks/>
        public NppLoginInfo LoginInfo {
            get {
                return this.loginInfoField;
            }
            set {
                this.loginInfoField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionTypeNM {
            get {
                return this.exceptionTypeNMField;
            }
            set {
                this.exceptionTypeNMField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionMessage {
            get {
                return this.exceptionMessageField;
            }
            set {
                this.exceptionMessageField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionStackTrace {
            get {
                return this.exceptionStackTraceField;
            }
            set {
                this.exceptionStackTraceField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionSource {
            get {
                return this.exceptionSourceField;
            }
            set {
                this.exceptionSourceField = value;
            }
        }
        
        /// <remarks/>
        public string AddtionalInformation {
            get {
                return this.addtionalInformationField;
            }
            set {
                this.addtionalInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppLoginInfo {
        
        private string employeeCDField;
        
        private string employeeNMField;
        
        private string passwordField;
        
        private string sectionCDField;
        
        private string sectionNMField;
        
        private string nascaClientVersionField;
        
        private string popClientVersionField;
        
        private string popServerVersionField;
        
        private string rootsVersionField;
        
        private string rootsDBServerNMField;
        
        private Language langKBField;
        
        private int maxCTField;
        
        private string loginSectionCDField;
        
        private string loginSectionNMField;
        
        private string loginSectionDSPField;
        
        private string serverKeyCDField;
        
        private string dababaseServerNMField;
        
        private string databaseNMField;
        
        private string vendorCDField;
        
        private string currentUrlField;
        
        private bool sisakuFGField;
        
        private bool nexusFGField;
        
        private string reporterVersionField;
        
        private string publicVersionField;
        
        private string batchVersionField;
        
        private string macAddressField;
        
        private bool expressModeField;
        
        /// <remarks/>
        public string EmployeeCD {
            get {
                return this.employeeCDField;
            }
            set {
                this.employeeCDField = value;
            }
        }
        
        /// <remarks/>
        public string EmployeeNM {
            get {
                return this.employeeNMField;
            }
            set {
                this.employeeNMField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string SectionCD {
            get {
                return this.sectionCDField;
            }
            set {
                this.sectionCDField = value;
            }
        }
        
        /// <remarks/>
        public string SectionNM {
            get {
                return this.sectionNMField;
            }
            set {
                this.sectionNMField = value;
            }
        }
        
        /// <remarks/>
        public string NascaClientVersion {
            get {
                return this.nascaClientVersionField;
            }
            set {
                this.nascaClientVersionField = value;
            }
        }
        
        /// <remarks/>
        public string PopClientVersion {
            get {
                return this.popClientVersionField;
            }
            set {
                this.popClientVersionField = value;
            }
        }
        
        /// <remarks/>
        public string PopServerVersion {
            get {
                return this.popServerVersionField;
            }
            set {
                this.popServerVersionField = value;
            }
        }
        
        /// <remarks/>
        public string RootsVersion {
            get {
                return this.rootsVersionField;
            }
            set {
                this.rootsVersionField = value;
            }
        }
        
        /// <remarks/>
        public string RootsDBServerNM {
            get {
                return this.rootsDBServerNMField;
            }
            set {
                this.rootsDBServerNMField = value;
            }
        }
        
        /// <remarks/>
        public Language LangKB {
            get {
                return this.langKBField;
            }
            set {
                this.langKBField = value;
            }
        }
        
        /// <remarks/>
        public int MaxCT {
            get {
                return this.maxCTField;
            }
            set {
                this.maxCTField = value;
            }
        }
        
        /// <remarks/>
        public string LoginSectionCD {
            get {
                return this.loginSectionCDField;
            }
            set {
                this.loginSectionCDField = value;
            }
        }
        
        /// <remarks/>
        public string LoginSectionNM {
            get {
                return this.loginSectionNMField;
            }
            set {
                this.loginSectionNMField = value;
            }
        }
        
        /// <remarks/>
        public string LoginSectionDSP {
            get {
                return this.loginSectionDSPField;
            }
            set {
                this.loginSectionDSPField = value;
            }
        }
        
        /// <remarks/>
        public string ServerKeyCD {
            get {
                return this.serverKeyCDField;
            }
            set {
                this.serverKeyCDField = value;
            }
        }
        
        /// <remarks/>
        public string DababaseServerNM {
            get {
                return this.dababaseServerNMField;
            }
            set {
                this.dababaseServerNMField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseNM {
            get {
                return this.databaseNMField;
            }
            set {
                this.databaseNMField = value;
            }
        }
        
        /// <remarks/>
        public string VendorCD {
            get {
                return this.vendorCDField;
            }
            set {
                this.vendorCDField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentUrl {
            get {
                return this.currentUrlField;
            }
            set {
                this.currentUrlField = value;
            }
        }
        
        /// <remarks/>
        public bool SisakuFG {
            get {
                return this.sisakuFGField;
            }
            set {
                this.sisakuFGField = value;
            }
        }
        
        /// <remarks/>
        public bool NexusFG {
            get {
                return this.nexusFGField;
            }
            set {
                this.nexusFGField = value;
            }
        }
        
        /// <remarks/>
        public string ReporterVersion {
            get {
                return this.reporterVersionField;
            }
            set {
                this.reporterVersionField = value;
            }
        }
        
        /// <remarks/>
        public string PublicVersion {
            get {
                return this.publicVersionField;
            }
            set {
                this.publicVersionField = value;
            }
        }
        
        /// <remarks/>
        public string BatchVersion {
            get {
                return this.batchVersionField;
            }
            set {
                this.batchVersionField = value;
            }
        }
        
        /// <remarks/>
        public string MacAddress {
            get {
                return this.macAddressField;
            }
            set {
                this.macAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool ExpressMode {
            get {
                return this.expressModeField;
            }
            set {
                this.expressModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public enum Language {
        
        /// <remarks/>
        ja,
        
        /// <remarks/>
        en,
        
        /// <remarks/>
        ch,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public partial class NppReturnInfo {
        
        private MessageCd msgCdField;
        
        private string messageField;
        
        private bool isErrorFlagField;
        
        private string exceptionTypeField;
        
        private string errorPointField;
        
        private string commentField;
        
        private int effectCountField;
        
        private int errorLineField;
        
        private NppExceptionInformation exceptionInfoField;
        
        /// <remarks/>
        public MessageCd MsgCd {
            get {
                return this.msgCdField;
            }
            set {
                this.msgCdField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool IsErrorFlag {
            get {
                return this.isErrorFlagField;
            }
            set {
                this.isErrorFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionType {
            get {
                return this.exceptionTypeField;
            }
            set {
                this.exceptionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorPoint {
            get {
                return this.errorPointField;
            }
            set {
                this.errorPointField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public int EffectCount {
            get {
                return this.effectCountField;
            }
            set {
                this.effectCountField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorLine {
            get {
                return this.errorLineField;
            }
            set {
                this.errorLineField = value;
            }
        }
        
        /// <remarks/>
        public NppExceptionInformation ExceptionInfo {
            get {
                return this.exceptionInfoField;
            }
            set {
                this.exceptionInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="JP.CO.Nichia.Nasca.PublicProduction/")]
    public enum MessageCd {
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        RI0000,
        
        /// <remarks/>
        RW0002,
        
        /// <remarks/>
        RW0003,
        
        /// <remarks/>
        RW0004,
        
        /// <remarks/>
        RW0005,
        
        /// <remarks/>
        RW0006,
        
        /// <remarks/>
        RW0007,
        
        /// <remarks/>
        RW0008,
        
        /// <remarks/>
        RW0009,
        
        /// <remarks/>
        RW0010,
        
        /// <remarks/>
        RW0011,
        
        /// <remarks/>
        RW0012,
        
        /// <remarks/>
        RW0013,
        
        /// <remarks/>
        RW0014,
        
        /// <remarks/>
        RW0015,
        
        /// <remarks/>
        RW0016,
        
        /// <remarks/>
        RW0017,
        
        /// <remarks/>
        RW0018,
        
        /// <remarks/>
        RW0019,
        
        /// <remarks/>
        RW0020,
        
        /// <remarks/>
        RW0021,
        
        /// <remarks/>
        RW0022,
        
        /// <remarks/>
        RW0023,
        
        /// <remarks/>
        RW0024,
        
        /// <remarks/>
        RW0026,
        
        /// <remarks/>
        RW0027,
        
        /// <remarks/>
        RW0028,
        
        /// <remarks/>
        RW0029,
        
        /// <remarks/>
        RW0030,
        
        /// <remarks/>
        RW0031,
        
        /// <remarks/>
        RW0032,
        
        /// <remarks/>
        RW0033,
        
        /// <remarks/>
        RW0034,
        
        /// <remarks/>
        RW0035,
        
        /// <remarks/>
        RW0036,
        
        /// <remarks/>
        RW0037,
        
        /// <remarks/>
        RW0038,
        
        /// <remarks/>
        RW0039,
        
        /// <remarks/>
        RW0040,
        
        /// <remarks/>
        RW0041,
        
        /// <remarks/>
        RW0042,
        
        /// <remarks/>
        RW0043,
        
        /// <remarks/>
        RW0044,
        
        /// <remarks/>
        RW0045,
        
        /// <remarks/>
        RW0046,
        
        /// <remarks/>
        RW0047,
        
        /// <remarks/>
        RW0048,
        
        /// <remarks/>
        RW0049,
        
        /// <remarks/>
        RW0050,
        
        /// <remarks/>
        RW0051,
        
        /// <remarks/>
        RW0052,
        
        /// <remarks/>
        RW0053,
        
        /// <remarks/>
        RW0054,
        
        /// <remarks/>
        RW0055,
        
        /// <remarks/>
        RW0056,
        
        /// <remarks/>
        RW0057,
        
        /// <remarks/>
        RW0058,
        
        /// <remarks/>
        RW0059,
        
        /// <remarks/>
        RW0060,
        
        /// <remarks/>
        RW0061,
        
        /// <remarks/>
        RW0099,
        
        /// <remarks/>
        RW0100,
        
        /// <remarks/>
        RW0601,
        
        /// <remarks/>
        RW0602,
        
        /// <remarks/>
        RW0603,
        
        /// <remarks/>
        RW0604,
        
        /// <remarks/>
        RW0605,
        
        /// <remarks/>
        RW0606,
        
        /// <remarks/>
        RW0607,
        
        /// <remarks/>
        RW0608,
        
        /// <remarks/>
        RW0651,
        
        /// <remarks/>
        RW0652,
        
        /// <remarks/>
        RW0653,
        
        /// <remarks/>
        RW0654,
        
        /// <remarks/>
        RW0655,
        
        /// <remarks/>
        RW0656,
        
        /// <remarks/>
        RW0701,
        
        /// <remarks/>
        RW0702,
        
        /// <remarks/>
        RW0703,
        
        /// <remarks/>
        RW0704,
        
        /// <remarks/>
        RW0705,
        
        /// <remarks/>
        RW0706,
        
        /// <remarks/>
        RW0707,
        
        /// <remarks/>
        RW0708,
        
        /// <remarks/>
        RW0709,
        
        /// <remarks/>
        RW0710,
        
        /// <remarks/>
        RW0711,
        
        /// <remarks/>
        RW0712,
        
        /// <remarks/>
        RW0713,
        
        /// <remarks/>
        RW0714,
        
        /// <remarks/>
        RW0715,
        
        /// <remarks/>
        RW0716,
        
        /// <remarks/>
        RW0717,
        
        /// <remarks/>
        RW0718,
        
        /// <remarks/>
        RW0719,
        
        /// <remarks/>
        RW0720,
        
        /// <remarks/>
        RW0721,
        
        /// <remarks/>
        RW0722,
        
        /// <remarks/>
        RW0723,
        
        /// <remarks/>
        RW0724,
        
        /// <remarks/>
        RW0725,
        
        /// <remarks/>
        RW0726,
        
        /// <remarks/>
        RW0727,
        
        /// <remarks/>
        RW0728,
        
        /// <remarks/>
        RW0729,
        
        /// <remarks/>
        RW0730,
        
        /// <remarks/>
        RW0731,
        
        /// <remarks/>
        RW0732,
        
        /// <remarks/>
        RW0733,
        
        /// <remarks/>
        RW0734,
        
        /// <remarks/>
        RW0735,
        
        /// <remarks/>
        RW0736,
        
        /// <remarks/>
        RW0737,
        
        /// <remarks/>
        RW0738,
        
        /// <remarks/>
        RW0739,
        
        /// <remarks/>
        RW0740,
        
        /// <remarks/>
        RW0741,
        
        /// <remarks/>
        RW0742,
        
        /// <remarks/>
        RW0743,
        
        /// <remarks/>
        RW0744,
        
        /// <remarks/>
        RW0745,
        
        /// <remarks/>
        RW0746,
        
        /// <remarks/>
        RW0747,
        
        /// <remarks/>
        RW0748,
        
        /// <remarks/>
        RW0749,
        
        /// <remarks/>
        RW0750,
        
        /// <remarks/>
        RW0751,
        
        /// <remarks/>
        RW0752,
        
        /// <remarks/>
        RW0753,
        
        /// <remarks/>
        RW0754,
        
        /// <remarks/>
        RW0755,
        
        /// <remarks/>
        RW0756,
        
        /// <remarks/>
        RW0757,
        
        /// <remarks/>
        RW0758,
        
        /// <remarks/>
        RW0759,
        
        /// <remarks/>
        RW0760,
        
        /// <remarks/>
        RW0761,
        
        /// <remarks/>
        RW0762,
        
        /// <remarks/>
        RW0763,
        
        /// <remarks/>
        RW0764,
        
        /// <remarks/>
        RW0765,
        
        /// <remarks/>
        RW0766,
        
        /// <remarks/>
        RW0767,
        
        /// <remarks/>
        RW0768,
        
        /// <remarks/>
        RW0769,
        
        /// <remarks/>
        RW0770,
        
        /// <remarks/>
        RW0771,
        
        /// <remarks/>
        RW0772,
        
        /// <remarks/>
        RW0773,
        
        /// <remarks/>
        RW0774,
        
        /// <remarks/>
        RW0775,
        
        /// <remarks/>
        RW0776,
        
        /// <remarks/>
        RW0777,
        
        /// <remarks/>
        RW0778,
        
        /// <remarks/>
        RW0779,
        
        /// <remarks/>
        RW0780,
        
        /// <remarks/>
        RW0781,
        
        /// <remarks/>
        RW0782,
        
        /// <remarks/>
        RW0783,
        
        /// <remarks/>
        RW0784,
        
        /// <remarks/>
        RW0785,
        
        /// <remarks/>
        RW0786,
        
        /// <remarks/>
        RW0787,
        
        /// <remarks/>
        RW0788,
        
        /// <remarks/>
        RW0789,
        
        /// <remarks/>
        RW0790,
        
        /// <remarks/>
        RW0791,
        
        /// <remarks/>
        RW0792,
        
        /// <remarks/>
        RW0793,
        
        /// <remarks/>
        RW0794,
        
        /// <remarks/>
        RW0795,
        
        /// <remarks/>
        RW0796,
        
        /// <remarks/>
        RW0797,
        
        /// <remarks/>
        RW0798,
        
        /// <remarks/>
        RW0799,
        
        /// <remarks/>
        RW0800,
        
        /// <remarks/>
        RW0801,
        
        /// <remarks/>
        RW0802,
        
        /// <remarks/>
        RW0803,
        
        /// <remarks/>
        RW0804,
        
        /// <remarks/>
        RW0805,
        
        /// <remarks/>
        RW2000,
        
        /// <remarks/>
        RW2001,
        
        /// <remarks/>
        RW2002,
        
        /// <remarks/>
        RW2003,
        
        /// <remarks/>
        RW2004,
        
        /// <remarks/>
        RW2005,
        
        /// <remarks/>
        RW2006,
        
        /// <remarks/>
        RW2007,
        
        /// <remarks/>
        RW2008,
        
        /// <remarks/>
        RW2009,
        
        /// <remarks/>
        RW3000,
        
        /// <remarks/>
        RW3001,
        
        /// <remarks/>
        RW3002,
        
        /// <remarks/>
        RW3003,
        
        /// <remarks/>
        RW3004,
        
        /// <remarks/>
        RW3005,
        
        /// <remarks/>
        RW3006,
        
        /// <remarks/>
        RW3007,
        
        /// <remarks/>
        RW4000,
        
        /// <remarks/>
        RW4001,
        
        /// <remarks/>
        RW4002,
        
        /// <remarks/>
        RW4003,
        
        /// <remarks/>
        RW4004,
        
        /// <remarks/>
        RW4005,
        
        /// <remarks/>
        RW4006,
        
        /// <remarks/>
        RW4007,
        
        /// <remarks/>
        RW4008,
        
        /// <remarks/>
        RW4009,
        
        /// <remarks/>
        RW4010,
        
        /// <remarks/>
        RW4011,
        
        /// <remarks/>
        RW4012,
        
        /// <remarks/>
        RW4013,
        
        /// <remarks/>
        RW4014,
        
        /// <remarks/>
        RW4015,
        
        /// <remarks/>
        RW4016,
        
        /// <remarks/>
        RW4017,
        
        /// <remarks/>
        RW4018,
        
        /// <remarks/>
        RW4019,
        
        /// <remarks/>
        RW4020,
        
        /// <remarks/>
        RW4021,
        
        /// <remarks/>
        RW4022,
        
        /// <remarks/>
        RW4023,
        
        /// <remarks/>
        RW4024,
        
        /// <remarks/>
        RW4025,
        
        /// <remarks/>
        RW4026,
        
        /// <remarks/>
        RW4027,
        
        /// <remarks/>
        RW4028,
        
        /// <remarks/>
        RW4029,
        
        /// <remarks/>
        RW4030,
        
        /// <remarks/>
        RW4031,
        
        /// <remarks/>
        RW4032,
        
        /// <remarks/>
        RW4033,
        
        /// <remarks/>
        RW4034,
        
        /// <remarks/>
        RW4035,
        
        /// <remarks/>
        RW4036,
        
        /// <remarks/>
        RW4037,
        
        /// <remarks/>
        RW4038,
        
        /// <remarks/>
        RW4039,
        
        /// <remarks/>
        RW4040,
        
        /// <remarks/>
        RW4041,
        
        /// <remarks/>
        RW4042,
        
        /// <remarks/>
        RW4043,
        
        /// <remarks/>
        RW4044,
        
        /// <remarks/>
        RW4045,
        
        /// <remarks/>
        RW4046,
        
        /// <remarks/>
        RW4047,
        
        /// <remarks/>
        RW4048,
        
        /// <remarks/>
        RW4049,
        
        /// <remarks/>
        RW4050,
        
        /// <remarks/>
        RW4051,
        
        /// <remarks/>
        RW4052,
        
        /// <remarks/>
        RW4053,
        
        /// <remarks/>
        RW4054,
        
        /// <remarks/>
        RW4055,
        
        /// <remarks/>
        RW4056,
        
        /// <remarks/>
        RW4057,
        
        /// <remarks/>
        RW4058,
        
        /// <remarks/>
        RW4059,
        
        /// <remarks/>
        RW4060,
        
        /// <remarks/>
        RW4061,
        
        /// <remarks/>
        RW4062,
        
        /// <remarks/>
        RW4063,
        
        /// <remarks/>
        RW4064,
        
        /// <remarks/>
        RW4065,
        
        /// <remarks/>
        RW4066,
        
        /// <remarks/>
        RW4067,
        
        /// <remarks/>
        RW4068,
        
        /// <remarks/>
        RW4069,
        
        /// <remarks/>
        RW4070,
        
        /// <remarks/>
        RW4071,
        
        /// <remarks/>
        RW4072,
        
        /// <remarks/>
        RW4073,
        
        /// <remarks/>
        RW4074,
        
        /// <remarks/>
        RW4075,
        
        /// <remarks/>
        RW4076,
        
        /// <remarks/>
        RW4077,
        
        /// <remarks/>
        RW4078,
        
        /// <remarks/>
        RW4079,
        
        /// <remarks/>
        RW4080,
        
        /// <remarks/>
        RW4081,
        
        /// <remarks/>
        RW4082,
        
        /// <remarks/>
        RW4083,
        
        /// <remarks/>
        RW4084,
        
        /// <remarks/>
        RW4085,
        
        /// <remarks/>
        RW4086,
        
        /// <remarks/>
        RW4087,
        
        /// <remarks/>
        RW4088,
        
        /// <remarks/>
        RW4089,
        
        /// <remarks/>
        RW4090,
        
        /// <remarks/>
        RW4091,
        
        /// <remarks/>
        RW4092,
        
        /// <remarks/>
        RW4093,
        
        /// <remarks/>
        RW4094,
        
        /// <remarks/>
        RW4095,
        
        /// <remarks/>
        RW4096,
        
        /// <remarks/>
        RW4097,
        
        /// <remarks/>
        RW4098,
        
        /// <remarks/>
        RW4099,
        
        /// <remarks/>
        RW4100,
        
        /// <remarks/>
        RW4101,
        
        /// <remarks/>
        RW4102,
        
        /// <remarks/>
        RW4103,
        
        /// <remarks/>
        RW4104,
        
        /// <remarks/>
        RW4105,
        
        /// <remarks/>
        RW4106,
        
        /// <remarks/>
        RW4107,
        
        /// <remarks/>
        RW4108,
        
        /// <remarks/>
        RW4109,
        
        /// <remarks/>
        RW4110,
        
        /// <remarks/>
        RW4111,
        
        /// <remarks/>
        RW4112,
        
        /// <remarks/>
        RW4113,
        
        /// <remarks/>
        RW4114,
        
        /// <remarks/>
        RW4115,
        
        /// <remarks/>
        RW4116,
        
        /// <remarks/>
        RW4117,
        
        /// <remarks/>
        RW4118,
        
        /// <remarks/>
        RW4119,
        
        /// <remarks/>
        RW4120,
        
        /// <remarks/>
        RW4121,
        
        /// <remarks/>
        RW4122,
        
        /// <remarks/>
        RW4123,
        
        /// <remarks/>
        RW4124,
        
        /// <remarks/>
        RW4125,
        
        /// <remarks/>
        RW4126,
        
        /// <remarks/>
        RW4127,
        
        /// <remarks/>
        RW4128,
        
        /// <remarks/>
        RW4129,
        
        /// <remarks/>
        RW4130,
        
        /// <remarks/>
        RW4131,
        
        /// <remarks/>
        RW4132,
        
        /// <remarks/>
        RW4133,
        
        /// <remarks/>
        RW4134,
        
        /// <remarks/>
        RW4135,
        
        /// <remarks/>
        RW4136,
        
        /// <remarks/>
        RW4137,
        
        /// <remarks/>
        RW4138,
        
        /// <remarks/>
        RW4139,
        
        /// <remarks/>
        RW4140,
        
        /// <remarks/>
        RW4149,
        
        /// <remarks/>
        RW4150,
        
        /// <remarks/>
        RW4151,
        
        /// <remarks/>
        RW4152,
        
        /// <remarks/>
        RW4153,
        
        /// <remarks/>
        RW4154,
        
        /// <remarks/>
        RW4155,
        
        /// <remarks/>
        RW4156,
        
        /// <remarks/>
        RW4157,
        
        /// <remarks/>
        RW4158,
        
        /// <remarks/>
        RW4159,
        
        /// <remarks/>
        RW4160,
        
        /// <remarks/>
        RW4161,
        
        /// <remarks/>
        RW4162,
        
        /// <remarks/>
        RW4163,
        
        /// <remarks/>
        RW4164,
        
        /// <remarks/>
        RW4165,
        
        /// <remarks/>
        RW4166,
        
        /// <remarks/>
        RW4167,
        
        /// <remarks/>
        RW6000,
        
        /// <remarks/>
        RW6001,
        
        /// <remarks/>
        RW6002,
        
        /// <remarks/>
        RW6003,
        
        /// <remarks/>
        RW6004,
        
        /// <remarks/>
        RW6005,
        
        /// <remarks/>
        RW6006,
        
        /// <remarks/>
        RW6007,
        
        /// <remarks/>
        RW6008,
        
        /// <remarks/>
        RW7000,
        
        /// <remarks/>
        RW7001,
        
        /// <remarks/>
        RW7002,
        
        /// <remarks/>
        RW4174,
        
        /// <remarks/>
        RW7003,
        
        /// <remarks/>
        RW13295,
        
        /// <remarks/>
        RW13296,
        
        /// <remarks/>
        RW13297,
        
        /// <remarks/>
        RW13298,
        
        /// <remarks/>
        RW13299,
        
        /// <remarks/>
        RW13300,
        
        /// <remarks/>
        RW13301,
        
        /// <remarks/>
        RW13302,
        
        /// <remarks/>
        RW13303,
        
        /// <remarks/>
        RW13304,
        
        /// <remarks/>
        RW13305,
        
        /// <remarks/>
        RW13306,
        
        /// <remarks/>
        RW13307,
        
        /// <remarks/>
        NI0001,
        
        /// <remarks/>
        NI0002,
        
        /// <remarks/>
        NI0003,
        
        /// <remarks/>
        NI0004,
        
        /// <remarks/>
        NI0005,
        
        /// <remarks/>
        NI0006,
        
        /// <remarks/>
        NI0007,
        
        /// <remarks/>
        NI0008,
        
        /// <remarks/>
        NI0009,
        
        /// <remarks/>
        NI0010,
        
        /// <remarks/>
        NI0011,
        
        /// <remarks/>
        NI0012,
        
        /// <remarks/>
        NI0013,
        
        /// <remarks/>
        NI0014,
        
        /// <remarks/>
        NI0015,
        
        /// <remarks/>
        NI0016,
        
        /// <remarks/>
        NI0017,
        
        /// <remarks/>
        NI0018,
        
        /// <remarks/>
        NI0019,
        
        /// <remarks/>
        NI0020,
        
        /// <remarks/>
        NI0021,
        
        /// <remarks/>
        NI0022,
        
        /// <remarks/>
        NI0023,
        
        /// <remarks/>
        NI0024,
        
        /// <remarks/>
        NI0025,
        
        /// <remarks/>
        NI0026,
        
        /// <remarks/>
        NI0027,
        
        /// <remarks/>
        NI0028,
        
        /// <remarks/>
        NI0029,
        
        /// <remarks/>
        NI0030,
        
        /// <remarks/>
        NI0031,
        
        /// <remarks/>
        NI0032,
        
        /// <remarks/>
        NI0033,
        
        /// <remarks/>
        NI0034,
        
        /// <remarks/>
        NI0035,
        
        /// <remarks/>
        NI0036,
        
        /// <remarks/>
        NI0037,
        
        /// <remarks/>
        NI0038,
        
        /// <remarks/>
        NI0039,
        
        /// <remarks/>
        NI0040,
        
        /// <remarks/>
        NI0041,
        
        /// <remarks/>
        NI0042,
        
        /// <remarks/>
        NI0043,
        
        /// <remarks/>
        NI0044,
        
        /// <remarks/>
        NI0045,
        
        /// <remarks/>
        NI0046,
        
        /// <remarks/>
        NI0047,
        
        /// <remarks/>
        NI0048,
        
        /// <remarks/>
        NI0049,
        
        /// <remarks/>
        NI0050,
        
        /// <remarks/>
        NI0051,
        
        /// <remarks/>
        NI0052,
        
        /// <remarks/>
        NI0053,
        
        /// <remarks/>
        NI0054,
        
        /// <remarks/>
        NI0055,
        
        /// <remarks/>
        NI0056,
        
        /// <remarks/>
        NI0057,
        
        /// <remarks/>
        NI0058,
        
        /// <remarks/>
        NI0059,
        
        /// <remarks/>
        NI0060,
        
        /// <remarks/>
        NI0061,
        
        /// <remarks/>
        NI0062,
        
        /// <remarks/>
        NI0063,
        
        /// <remarks/>
        NI0064,
        
        /// <remarks/>
        NI0065,
        
        /// <remarks/>
        NI0066,
        
        /// <remarks/>
        NI0067,
        
        /// <remarks/>
        NI0068,
        
        /// <remarks/>
        NI0069,
        
        /// <remarks/>
        NI0070,
        
        /// <remarks/>
        NI0071,
        
        /// <remarks/>
        NI0072,
        
        /// <remarks/>
        NI0073,
        
        /// <remarks/>
        NI0074,
        
        /// <remarks/>
        NI0075,
        
        /// <remarks/>
        NI0076,
        
        /// <remarks/>
        NI0077,
        
        /// <remarks/>
        NI0078,
        
        /// <remarks/>
        NI0079,
        
        /// <remarks/>
        NI0080,
        
        /// <remarks/>
        NI0081,
        
        /// <remarks/>
        NI0082,
        
        /// <remarks/>
        NI0083,
        
        /// <remarks/>
        NI0084,
        
        /// <remarks/>
        NI0085,
        
        /// <remarks/>
        NI0086,
        
        /// <remarks/>
        NI0087,
        
        /// <remarks/>
        NI0088,
        
        /// <remarks/>
        NI0089,
        
        /// <remarks/>
        NI0090,
        
        /// <remarks/>
        NI0091,
        
        /// <remarks/>
        NI0092,
        
        /// <remarks/>
        NI0093,
        
        /// <remarks/>
        NI0094,
        
        /// <remarks/>
        NI0095,
        
        /// <remarks/>
        NI0096,
        
        /// <remarks/>
        NI0097,
        
        /// <remarks/>
        NI0098,
        
        /// <remarks/>
        NI0099,
        
        /// <remarks/>
        NI0100,
        
        /// <remarks/>
        NI0101,
        
        /// <remarks/>
        NI0102,
        
        /// <remarks/>
        NI0103,
        
        /// <remarks/>
        NI0104,
        
        /// <remarks/>
        NI0105,
        
        /// <remarks/>
        NI0106,
        
        /// <remarks/>
        NI0107,
        
        /// <remarks/>
        NI0108,
        
        /// <remarks/>
        NI0109,
        
        /// <remarks/>
        NI0110,
        
        /// <remarks/>
        NI0111,
        
        /// <remarks/>
        NI0112,
        
        /// <remarks/>
        NI0113,
        
        /// <remarks/>
        NI0114,
        
        /// <remarks/>
        NI0115,
        
        /// <remarks/>
        NI0116,
        
        /// <remarks/>
        NI0117,
        
        /// <remarks/>
        NI0118,
        
        /// <remarks/>
        NI0119,
        
        /// <remarks/>
        NI0120,
        
        /// <remarks/>
        NI0121,
        
        /// <remarks/>
        NI0122,
        
        /// <remarks/>
        NI0123,
        
        /// <remarks/>
        NI0124,
        
        /// <remarks/>
        NI0125,
        
        /// <remarks/>
        NI0126,
        
        /// <remarks/>
        NI0127,
        
        /// <remarks/>
        NI0128,
        
        /// <remarks/>
        NI0129,
        
        /// <remarks/>
        NI0130,
        
        /// <remarks/>
        NI0131,
        
        /// <remarks/>
        NI0132,
        
        /// <remarks/>
        NI0133,
        
        /// <remarks/>
        NI0134,
        
        /// <remarks/>
        NI0135,
        
        /// <remarks/>
        NI0136,
        
        /// <remarks/>
        NI0137,
        
        /// <remarks/>
        NI0138,
        
        /// <remarks/>
        NI0139,
        
        /// <remarks/>
        NI0140,
        
        /// <remarks/>
        NI0141,
        
        /// <remarks/>
        NI0142,
        
        /// <remarks/>
        NI0143,
        
        /// <remarks/>
        NI0144,
        
        /// <remarks/>
        NI0145,
        
        /// <remarks/>
        NI0146,
        
        /// <remarks/>
        NI0147,
        
        /// <remarks/>
        NI0148,
        
        /// <remarks/>
        NI0149,
        
        /// <remarks/>
        NI0150,
        
        /// <remarks/>
        NI0151,
        
        /// <remarks/>
        NI0152,
        
        /// <remarks/>
        NI0153,
        
        /// <remarks/>
        NI0154,
        
        /// <remarks/>
        NI0155,
        
        /// <remarks/>
        NI0156,
        
        /// <remarks/>
        NI0157,
        
        /// <remarks/>
        NI0158,
        
        /// <remarks/>
        NI0159,
        
        /// <remarks/>
        NI0160,
        
        /// <remarks/>
        NI0161,
        
        /// <remarks/>
        NI0162,
        
        /// <remarks/>
        NI0163,
        
        /// <remarks/>
        NI0164,
        
        /// <remarks/>
        NI0165,
        
        /// <remarks/>
        NI0166,
        
        /// <remarks/>
        NI0167,
        
        /// <remarks/>
        NI0168,
        
        /// <remarks/>
        NI0169,
        
        /// <remarks/>
        NI0170,
        
        /// <remarks/>
        NI0171,
        
        /// <remarks/>
        NI0172,
        
        /// <remarks/>
        NI0173,
        
        /// <remarks/>
        NI0174,
        
        /// <remarks/>
        NI0175,
        
        /// <remarks/>
        NI0176,
        
        /// <remarks/>
        NI0177,
        
        /// <remarks/>
        NI0178,
        
        /// <remarks/>
        NI0179,
        
        /// <remarks/>
        NI0180,
        
        /// <remarks/>
        NI0181,
        
        /// <remarks/>
        NI0182,
        
        /// <remarks/>
        NI0183,
        
        /// <remarks/>
        NI0184,
        
        /// <remarks/>
        NI0185,
        
        /// <remarks/>
        NI0186,
        
        /// <remarks/>
        NI0187,
        
        /// <remarks/>
        NI0188,
        
        /// <remarks/>
        NI0189,
        
        /// <remarks/>
        NI0190,
        
        /// <remarks/>
        NI0191,
        
        /// <remarks/>
        NI0192,
        
        /// <remarks/>
        NI0193,
        
        /// <remarks/>
        NI0194,
        
        /// <remarks/>
        NI0195,
        
        /// <remarks/>
        NI0196,
        
        /// <remarks/>
        NI0197,
        
        /// <remarks/>
        NI0198,
        
        /// <remarks/>
        NI0199,
        
        /// <remarks/>
        NQ0001,
        
        /// <remarks/>
        NQ0002,
        
        /// <remarks/>
        NQ0003,
        
        /// <remarks/>
        NQ0004,
        
        /// <remarks/>
        NQ0005,
        
        /// <remarks/>
        NQ0006,
        
        /// <remarks/>
        NQ0007,
        
        /// <remarks/>
        NQ0008,
        
        /// <remarks/>
        NQ0009,
        
        /// <remarks/>
        NQ0010,
        
        /// <remarks/>
        NQ0011,
        
        /// <remarks/>
        NQ0012,
        
        /// <remarks/>
        NQ0013,
        
        /// <remarks/>
        NQ0014,
        
        /// <remarks/>
        NQ0015,
        
        /// <remarks/>
        NQ0016,
        
        /// <remarks/>
        NQ0017,
        
        /// <remarks/>
        NQ0018,
        
        /// <remarks/>
        NQ0019,
        
        /// <remarks/>
        NQ0020,
        
        /// <remarks/>
        NQ0021,
        
        /// <remarks/>
        NQ0022,
        
        /// <remarks/>
        NQ0023,
        
        /// <remarks/>
        NQ0024,
        
        /// <remarks/>
        NQ0025,
        
        /// <remarks/>
        NQ0026,
        
        /// <remarks/>
        NQ0027,
        
        /// <remarks/>
        NQ0028,
        
        /// <remarks/>
        NQ0029,
        
        /// <remarks/>
        NQ0030,
        
        /// <remarks/>
        NQ0031,
        
        /// <remarks/>
        NQ0032,
        
        /// <remarks/>
        NQ0033,
        
        /// <remarks/>
        NQ0034,
        
        /// <remarks/>
        NQ0035,
        
        /// <remarks/>
        NQ0036,
        
        /// <remarks/>
        NQ0037,
        
        /// <remarks/>
        NQ0038,
        
        /// <remarks/>
        NQ0039,
        
        /// <remarks/>
        NQ0040,
        
        /// <remarks/>
        NQ0041,
        
        /// <remarks/>
        NQ0042,
        
        /// <remarks/>
        NQ0043,
        
        /// <remarks/>
        NQ0044,
        
        /// <remarks/>
        NQ0045,
        
        /// <remarks/>
        NQ0046,
        
        /// <remarks/>
        NQ0047,
        
        /// <remarks/>
        NQ0048,
        
        /// <remarks/>
        NQ0049,
        
        /// <remarks/>
        NQ0050,
        
        /// <remarks/>
        NQ0051,
        
        /// <remarks/>
        NQ0052,
        
        /// <remarks/>
        NQ0053,
        
        /// <remarks/>
        NQ0054,
        
        /// <remarks/>
        NQ0055,
        
        /// <remarks/>
        NQ0056,
        
        /// <remarks/>
        NQ0057,
        
        /// <remarks/>
        NQ0058,
        
        /// <remarks/>
        NQ0059,
        
        /// <remarks/>
        NQ0060,
        
        /// <remarks/>
        NQ0061,
        
        /// <remarks/>
        NQ0062,
        
        /// <remarks/>
        NQ0063,
        
        /// <remarks/>
        NQ0064,
        
        /// <remarks/>
        NQ0065,
        
        /// <remarks/>
        NQ0066,
        
        /// <remarks/>
        NQ0067,
        
        /// <remarks/>
        NQ0068,
        
        /// <remarks/>
        NQ0069,
        
        /// <remarks/>
        NQ0070,
        
        /// <remarks/>
        NQ0071,
        
        /// <remarks/>
        NQ0072,
        
        /// <remarks/>
        NQ0073,
        
        /// <remarks/>
        NQ0074,
        
        /// <remarks/>
        NQ0075,
        
        /// <remarks/>
        NQ0076,
        
        /// <remarks/>
        NQ0077,
        
        /// <remarks/>
        NQ0078,
        
        /// <remarks/>
        NQ0079,
        
        /// <remarks/>
        NQ0080,
        
        /// <remarks/>
        NQ0081,
        
        /// <remarks/>
        NQ0082,
        
        /// <remarks/>
        NQ0083,
        
        /// <remarks/>
        NQ0084,
        
        /// <remarks/>
        NQ0085,
        
        /// <remarks/>
        NQ0086,
        
        /// <remarks/>
        NQ0087,
        
        /// <remarks/>
        NQ0088,
        
        /// <remarks/>
        NQ0089,
        
        /// <remarks/>
        NQ0090,
        
        /// <remarks/>
        NQ0091,
        
        /// <remarks/>
        NQ0092,
        
        /// <remarks/>
        NQ0093,
        
        /// <remarks/>
        NQ0094,
        
        /// <remarks/>
        NQ0095,
        
        /// <remarks/>
        NQ0096,
        
        /// <remarks/>
        NQ0097,
        
        /// <remarks/>
        NQ0098,
        
        /// <remarks/>
        NQ0099,
        
        /// <remarks/>
        NQ0100,
        
        /// <remarks/>
        NQ0101,
        
        /// <remarks/>
        NQ0102,
        
        /// <remarks/>
        NQ0103,
        
        /// <remarks/>
        NQ0104,
        
        /// <remarks/>
        NQ0105,
        
        /// <remarks/>
        NQ0106,
        
        /// <remarks/>
        NQ0107,
        
        /// <remarks/>
        NQ0108,
        
        /// <remarks/>
        NQ0109,
        
        /// <remarks/>
        NQ0110,
        
        /// <remarks/>
        NQ0111,
        
        /// <remarks/>
        NQ0112,
        
        /// <remarks/>
        NQ0113,
        
        /// <remarks/>
        NQ0114,
        
        /// <remarks/>
        NQ0115,
        
        /// <remarks/>
        NQ0116,
        
        /// <remarks/>
        NQ0117,
        
        /// <remarks/>
        NQ0118,
        
        /// <remarks/>
        NQ0119,
        
        /// <remarks/>
        NQ0120,
        
        /// <remarks/>
        NQ0121,
        
        /// <remarks/>
        NQ0122,
        
        /// <remarks/>
        NQ0123,
        
        /// <remarks/>
        NQ0124,
        
        /// <remarks/>
        NQ0125,
        
        /// <remarks/>
        NQ0126,
        
        /// <remarks/>
        NQ0127,
        
        /// <remarks/>
        NQ0128,
        
        /// <remarks/>
        NQ0129,
        
        /// <remarks/>
        NQ0130,
        
        /// <remarks/>
        NQ0131,
        
        /// <remarks/>
        NQ0132,
        
        /// <remarks/>
        NQ0133,
        
        /// <remarks/>
        NQ0134,
        
        /// <remarks/>
        NQ0135,
        
        /// <remarks/>
        NQ0136,
        
        /// <remarks/>
        NQ0137,
        
        /// <remarks/>
        NQ0138,
        
        /// <remarks/>
        NQ0139,
        
        /// <remarks/>
        NQ0140,
        
        /// <remarks/>
        NQ0141,
        
        /// <remarks/>
        NQ0142,
        
        /// <remarks/>
        NQ0143,
        
        /// <remarks/>
        NQ0144,
        
        /// <remarks/>
        NQ0145,
        
        /// <remarks/>
        NQ0146,
        
        /// <remarks/>
        NQ0147,
        
        /// <remarks/>
        NQ0148,
        
        /// <remarks/>
        NQ0149,
        
        /// <remarks/>
        NQ0150,
        
        /// <remarks/>
        NQ0151,
        
        /// <remarks/>
        NQ0152,
        
        /// <remarks/>
        NQ0153,
        
        /// <remarks/>
        NQ0154,
        
        /// <remarks/>
        NQ0155,
        
        /// <remarks/>
        NQ0156,
        
        /// <remarks/>
        NQ0157,
        
        /// <remarks/>
        NQ0158,
        
        /// <remarks/>
        NQ0159,
        
        /// <remarks/>
        NQ0160,
        
        /// <remarks/>
        NQ0161,
        
        /// <remarks/>
        NQ0162,
        
        /// <remarks/>
        NQ0163,
        
        /// <remarks/>
        NQ0164,
        
        /// <remarks/>
        NQ0165,
        
        /// <remarks/>
        NQ0166,
        
        /// <remarks/>
        NQ0167,
        
        /// <remarks/>
        NQ0168,
        
        /// <remarks/>
        NQ0169,
        
        /// <remarks/>
        NQ0170,
        
        /// <remarks/>
        NQ0171,
        
        /// <remarks/>
        NQ0172,
        
        /// <remarks/>
        NQ0173,
        
        /// <remarks/>
        NQ0174,
        
        /// <remarks/>
        NQ0175,
        
        /// <remarks/>
        NQ0176,
        
        /// <remarks/>
        NQ0177,
        
        /// <remarks/>
        NQ0178,
        
        /// <remarks/>
        NQ0179,
        
        /// <remarks/>
        NQ0180,
        
        /// <remarks/>
        NQ0181,
        
        /// <remarks/>
        NQ0182,
        
        /// <remarks/>
        NQ0183,
        
        /// <remarks/>
        NQ0184,
        
        /// <remarks/>
        NQ0185,
        
        /// <remarks/>
        NQ0186,
        
        /// <remarks/>
        NQ0187,
        
        /// <remarks/>
        NQ0188,
        
        /// <remarks/>
        NQ0189,
        
        /// <remarks/>
        NQ0190,
        
        /// <remarks/>
        NQ0191,
        
        /// <remarks/>
        NQ0192,
        
        /// <remarks/>
        NQ0193,
        
        /// <remarks/>
        NQ0194,
        
        /// <remarks/>
        NQ0195,
        
        /// <remarks/>
        NQ0196,
        
        /// <remarks/>
        NQ0197,
        
        /// <remarks/>
        NQ0198,
        
        /// <remarks/>
        NQ0199,
        
        /// <remarks/>
        NQ0200,
        
        /// <remarks/>
        NQ0201,
        
        /// <remarks/>
        NQ0202,
        
        /// <remarks/>
        NQ0203,
        
        /// <remarks/>
        NQ0204,
        
        /// <remarks/>
        NQ0205,
        
        /// <remarks/>
        NQ0206,
        
        /// <remarks/>
        NQ0207,
        
        /// <remarks/>
        NW1000,
        
        /// <remarks/>
        NW0001,
        
        /// <remarks/>
        NW0002,
        
        /// <remarks/>
        NW0003,
        
        /// <remarks/>
        NW0004,
        
        /// <remarks/>
        NW0005,
        
        /// <remarks/>
        NW0006,
        
        /// <remarks/>
        NW0007,
        
        /// <remarks/>
        NW0008,
        
        /// <remarks/>
        NW0009,
        
        /// <remarks/>
        NW0010,
        
        /// <remarks/>
        NW0011,
        
        /// <remarks/>
        NW0012,
        
        /// <remarks/>
        NW0013,
        
        /// <remarks/>
        NW0014,
        
        /// <remarks/>
        NW0015,
        
        /// <remarks/>
        NW0016,
        
        /// <remarks/>
        NW0017,
        
        /// <remarks/>
        NW0018,
        
        /// <remarks/>
        NW0019,
        
        /// <remarks/>
        NW0020,
        
        /// <remarks/>
        NW0021,
        
        /// <remarks/>
        NW0022,
        
        /// <remarks/>
        NW0023,
        
        /// <remarks/>
        NW0024,
        
        /// <remarks/>
        NW0025,
        
        /// <remarks/>
        NW0026,
        
        /// <remarks/>
        NW0027,
        
        /// <remarks/>
        NW0028,
        
        /// <remarks/>
        NW0029,
        
        /// <remarks/>
        NW0030,
        
        /// <remarks/>
        NW0031,
        
        /// <remarks/>
        NW0032,
        
        /// <remarks/>
        NW0033,
        
        /// <remarks/>
        NW0034,
        
        /// <remarks/>
        NW0035,
        
        /// <remarks/>
        NW0036,
        
        /// <remarks/>
        NW0037,
        
        /// <remarks/>
        NW0038,
        
        /// <remarks/>
        NW0039,
        
        /// <remarks/>
        NW0040,
        
        /// <remarks/>
        NW0041,
        
        /// <remarks/>
        NW0042,
        
        /// <remarks/>
        NW0043,
        
        /// <remarks/>
        NW0044,
        
        /// <remarks/>
        NW0045,
        
        /// <remarks/>
        NW0046,
        
        /// <remarks/>
        NW0047,
        
        /// <remarks/>
        NW0048,
        
        /// <remarks/>
        NW0049,
        
        /// <remarks/>
        NW0050,
        
        /// <remarks/>
        NW0051,
        
        /// <remarks/>
        NW0052,
        
        /// <remarks/>
        NW0053,
        
        /// <remarks/>
        NW0054,
        
        /// <remarks/>
        NW0055,
        
        /// <remarks/>
        NW0056,
        
        /// <remarks/>
        NW0057,
        
        /// <remarks/>
        NW0058,
        
        /// <remarks/>
        NW0059,
        
        /// <remarks/>
        NW0060,
        
        /// <remarks/>
        NW0061,
        
        /// <remarks/>
        NW0062,
        
        /// <remarks/>
        NW0063,
        
        /// <remarks/>
        NW0064,
        
        /// <remarks/>
        NW0065,
        
        /// <remarks/>
        NW0066,
        
        /// <remarks/>
        NW0067,
        
        /// <remarks/>
        NW0068,
        
        /// <remarks/>
        NW0069,
        
        /// <remarks/>
        NW0070,
        
        /// <remarks/>
        NW0071,
        
        /// <remarks/>
        NW0072,
        
        /// <remarks/>
        NW0073,
        
        /// <remarks/>
        NW0074,
        
        /// <remarks/>
        NW0075,
        
        /// <remarks/>
        NW0076,
        
        /// <remarks/>
        NW0077,
        
        /// <remarks/>
        NW0078,
        
        /// <remarks/>
        NW0079,
        
        /// <remarks/>
        NW0080,
        
        /// <remarks/>
        NW0081,
        
        /// <remarks/>
        NW0082,
        
        /// <remarks/>
        NW0083,
        
        /// <remarks/>
        NW0084,
        
        /// <remarks/>
        NW0085,
        
        /// <remarks/>
        NW0086,
        
        /// <remarks/>
        NW0087,
        
        /// <remarks/>
        NW0088,
        
        /// <remarks/>
        NW0089,
        
        /// <remarks/>
        NW0090,
        
        /// <remarks/>
        NW0091,
        
        /// <remarks/>
        NW0092,
        
        /// <remarks/>
        NW0093,
        
        /// <remarks/>
        NW0094,
        
        /// <remarks/>
        NW0095,
        
        /// <remarks/>
        NW0096,
        
        /// <remarks/>
        NW0097,
        
        /// <remarks/>
        NW0098,
        
        /// <remarks/>
        NW0099,
        
        /// <remarks/>
        NW0100,
        
        /// <remarks/>
        NW0101,
        
        /// <remarks/>
        NW0102,
        
        /// <remarks/>
        NW0103,
        
        /// <remarks/>
        NW0104,
        
        /// <remarks/>
        NW0105,
        
        /// <remarks/>
        NW0106,
        
        /// <remarks/>
        NW0107,
        
        /// <remarks/>
        NW0108,
        
        /// <remarks/>
        NW0109,
        
        /// <remarks/>
        NW0110,
        
        /// <remarks/>
        NW0111,
        
        /// <remarks/>
        NW0112,
        
        /// <remarks/>
        NW0113,
        
        /// <remarks/>
        NW0114,
        
        /// <remarks/>
        NW0115,
        
        /// <remarks/>
        NW0116,
        
        /// <remarks/>
        NW0117,
        
        /// <remarks/>
        NW0118,
        
        /// <remarks/>
        NW0119,
        
        /// <remarks/>
        NW0120,
        
        /// <remarks/>
        NW0121,
        
        /// <remarks/>
        NW0122,
        
        /// <remarks/>
        NW0123,
        
        /// <remarks/>
        NW0124,
        
        /// <remarks/>
        NW0125,
        
        /// <remarks/>
        NW0126,
        
        /// <remarks/>
        NW0127,
        
        /// <remarks/>
        NW0128,
        
        /// <remarks/>
        NW0129,
        
        /// <remarks/>
        NW0130,
        
        /// <remarks/>
        NW0131,
        
        /// <remarks/>
        NW0132,
        
        /// <remarks/>
        NW0133,
        
        /// <remarks/>
        NW0134,
        
        /// <remarks/>
        NW0135,
        
        /// <remarks/>
        NW0136,
        
        /// <remarks/>
        NW0137,
        
        /// <remarks/>
        NW0138,
        
        /// <remarks/>
        NW0139,
        
        /// <remarks/>
        NW0140,
        
        /// <remarks/>
        NW0141,
        
        /// <remarks/>
        NW0142,
        
        /// <remarks/>
        NW0143,
        
        /// <remarks/>
        NW0144,
        
        /// <remarks/>
        NW0145,
        
        /// <remarks/>
        NW0146,
        
        /// <remarks/>
        NW0147,
        
        /// <remarks/>
        NW0148,
        
        /// <remarks/>
        NW0149,
        
        /// <remarks/>
        NW0150,
        
        /// <remarks/>
        NW0151,
        
        /// <remarks/>
        NW0152,
        
        /// <remarks/>
        NW0153,
        
        /// <remarks/>
        NW0154,
        
        /// <remarks/>
        NW0155,
        
        /// <remarks/>
        NW0156,
        
        /// <remarks/>
        NW0157,
        
        /// <remarks/>
        NW0158,
        
        /// <remarks/>
        NW0159,
        
        /// <remarks/>
        NW0160,
        
        /// <remarks/>
        NW0161,
        
        /// <remarks/>
        NW0162,
        
        /// <remarks/>
        NW0163,
        
        /// <remarks/>
        NW0164,
        
        /// <remarks/>
        NW0165,
        
        /// <remarks/>
        NW0166,
        
        /// <remarks/>
        NW0167,
        
        /// <remarks/>
        NW0168,
        
        /// <remarks/>
        NW0169,
        
        /// <remarks/>
        NW0170,
        
        /// <remarks/>
        NW0171,
        
        /// <remarks/>
        NW0172,
        
        /// <remarks/>
        NW0173,
        
        /// <remarks/>
        NW0174,
        
        /// <remarks/>
        NW0175,
        
        /// <remarks/>
        NW0176,
        
        /// <remarks/>
        NW0177,
        
        /// <remarks/>
        NW0178,
        
        /// <remarks/>
        NW0179,
        
        /// <remarks/>
        NW0180,
        
        /// <remarks/>
        NW0181,
        
        /// <remarks/>
        NW0182,
        
        /// <remarks/>
        NW0183,
        
        /// <remarks/>
        NW0184,
        
        /// <remarks/>
        NW0185,
        
        /// <remarks/>
        NW0186,
        
        /// <remarks/>
        NW0187,
        
        /// <remarks/>
        NW0188,
        
        /// <remarks/>
        NW0189,
        
        /// <remarks/>
        NW0190,
        
        /// <remarks/>
        NW0191,
        
        /// <remarks/>
        NW0192,
        
        /// <remarks/>
        NW0193,
        
        /// <remarks/>
        NW0194,
        
        /// <remarks/>
        NW0195,
        
        /// <remarks/>
        NW0196,
        
        /// <remarks/>
        NW0197,
        
        /// <remarks/>
        NW0198,
        
        /// <remarks/>
        NW0199,
        
        /// <remarks/>
        NW0200,
        
        /// <remarks/>
        NW0201,
        
        /// <remarks/>
        NW0202,
        
        /// <remarks/>
        NW0203,
        
        /// <remarks/>
        NW0204,
        
        /// <remarks/>
        NW0205,
        
        /// <remarks/>
        NW0206,
        
        /// <remarks/>
        NW0207,
        
        /// <remarks/>
        NW0208,
        
        /// <remarks/>
        NW0209,
        
        /// <remarks/>
        NW0210,
        
        /// <remarks/>
        NW0211,
        
        /// <remarks/>
        NW0212,
        
        /// <remarks/>
        NW0213,
        
        /// <remarks/>
        NW0214,
        
        /// <remarks/>
        NW0215,
        
        /// <remarks/>
        NW0216,
        
        /// <remarks/>
        NW0217,
        
        /// <remarks/>
        NW0218,
        
        /// <remarks/>
        NW0219,
        
        /// <remarks/>
        NW0220,
        
        /// <remarks/>
        NW0221,
        
        /// <remarks/>
        NW0222,
        
        /// <remarks/>
        NW0223,
        
        /// <remarks/>
        NW0224,
        
        /// <remarks/>
        NW0225,
        
        /// <remarks/>
        NW0226,
        
        /// <remarks/>
        NW0227,
        
        /// <remarks/>
        NW0228,
        
        /// <remarks/>
        NW0229,
        
        /// <remarks/>
        NW0230,
        
        /// <remarks/>
        NW0231,
        
        /// <remarks/>
        NW0232,
        
        /// <remarks/>
        NW0233,
        
        /// <remarks/>
        NW0234,
        
        /// <remarks/>
        NW0235,
        
        /// <remarks/>
        NW0236,
        
        /// <remarks/>
        NW0237,
        
        /// <remarks/>
        NW0238,
        
        /// <remarks/>
        NW0239,
        
        /// <remarks/>
        NW0240,
        
        /// <remarks/>
        NW0241,
        
        /// <remarks/>
        NW0242,
        
        /// <remarks/>
        NW0243,
        
        /// <remarks/>
        NW0244,
        
        /// <remarks/>
        NW0245,
        
        /// <remarks/>
        NW0246,
        
        /// <remarks/>
        NW0247,
        
        /// <remarks/>
        NW0248,
        
        /// <remarks/>
        NW0249,
        
        /// <remarks/>
        NW0250,
        
        /// <remarks/>
        NW0251,
        
        /// <remarks/>
        NW0252,
        
        /// <remarks/>
        NW0253,
        
        /// <remarks/>
        NW0254,
        
        /// <remarks/>
        NW0255,
        
        /// <remarks/>
        NW0256,
        
        /// <remarks/>
        NW0257,
        
        /// <remarks/>
        NW0258,
        
        /// <remarks/>
        NW0259,
        
        /// <remarks/>
        NW0260,
        
        /// <remarks/>
        NW0261,
        
        /// <remarks/>
        NW0262,
        
        /// <remarks/>
        NW0263,
        
        /// <remarks/>
        NW0264,
        
        /// <remarks/>
        NW0265,
        
        /// <remarks/>
        NW0266,
        
        /// <remarks/>
        NW0267,
        
        /// <remarks/>
        NW0268,
        
        /// <remarks/>
        NW0269,
        
        /// <remarks/>
        NW0270,
        
        /// <remarks/>
        NW0271,
        
        /// <remarks/>
        NW0272,
        
        /// <remarks/>
        NW0273,
        
        /// <remarks/>
        NW0274,
        
        /// <remarks/>
        NW0275,
        
        /// <remarks/>
        NW0276,
        
        /// <remarks/>
        NW0277,
        
        /// <remarks/>
        NW0278,
        
        /// <remarks/>
        NW0279,
        
        /// <remarks/>
        NW0280,
        
        /// <remarks/>
        NW0281,
        
        /// <remarks/>
        NW0282,
        
        /// <remarks/>
        NW0283,
        
        /// <remarks/>
        NW0284,
        
        /// <remarks/>
        NW0285,
        
        /// <remarks/>
        NW0286,
        
        /// <remarks/>
        NW0287,
        
        /// <remarks/>
        NW0288,
        
        /// <remarks/>
        NW0289,
        
        /// <remarks/>
        NW0290,
        
        /// <remarks/>
        NW0291,
        
        /// <remarks/>
        NW0292,
        
        /// <remarks/>
        NW0293,
        
        /// <remarks/>
        NW0294,
        
        /// <remarks/>
        NW0295,
        
        /// <remarks/>
        NW0296,
        
        /// <remarks/>
        NW0297,
        
        /// <remarks/>
        NW0298,
        
        /// <remarks/>
        NW0299,
        
        /// <remarks/>
        NW0300,
        
        /// <remarks/>
        NW0301,
        
        /// <remarks/>
        NW0302,
        
        /// <remarks/>
        NW0303,
        
        /// <remarks/>
        NW0304,
        
        /// <remarks/>
        NW0305,
        
        /// <remarks/>
        NW0306,
        
        /// <remarks/>
        NW0307,
        
        /// <remarks/>
        NW0308,
        
        /// <remarks/>
        NW0309,
        
        /// <remarks/>
        NW0310,
        
        /// <remarks/>
        NW0311,
        
        /// <remarks/>
        NW0312,
        
        /// <remarks/>
        NW0313,
        
        /// <remarks/>
        NW0314,
        
        /// <remarks/>
        NW0315,
        
        /// <remarks/>
        NW0316,
        
        /// <remarks/>
        NW0317,
        
        /// <remarks/>
        NW0318,
        
        /// <remarks/>
        NW0319,
        
        /// <remarks/>
        NW0320,
        
        /// <remarks/>
        NW0321,
        
        /// <remarks/>
        NW0322,
        
        /// <remarks/>
        NW0323,
        
        /// <remarks/>
        NW0324,
        
        /// <remarks/>
        NW0325,
        
        /// <remarks/>
        NW0326,
        
        /// <remarks/>
        NW0327,
        
        /// <remarks/>
        NW0328,
        
        /// <remarks/>
        NW0329,
        
        /// <remarks/>
        NW0330,
        
        /// <remarks/>
        NW0331,
        
        /// <remarks/>
        NW0332,
        
        /// <remarks/>
        NW0333,
        
        /// <remarks/>
        NW0334,
        
        /// <remarks/>
        NW0335,
        
        /// <remarks/>
        NW0336,
        
        /// <remarks/>
        NW0337,
        
        /// <remarks/>
        NW0338,
        
        /// <remarks/>
        NW0339,
        
        /// <remarks/>
        NW0340,
        
        /// <remarks/>
        NW0341,
        
        /// <remarks/>
        NW0342,
        
        /// <remarks/>
        NW0343,
        
        /// <remarks/>
        NW0344,
        
        /// <remarks/>
        NW0345,
        
        /// <remarks/>
        NW0346,
        
        /// <remarks/>
        NW0347,
        
        /// <remarks/>
        NW0348,
        
        /// <remarks/>
        NW0349,
        
        /// <remarks/>
        NW0350,
        
        /// <remarks/>
        NW0351,
        
        /// <remarks/>
        NW0352,
        
        /// <remarks/>
        NW0353,
        
        /// <remarks/>
        NW0354,
        
        /// <remarks/>
        NW0355,
        
        /// <remarks/>
        NW0356,
        
        /// <remarks/>
        NW0357,
        
        /// <remarks/>
        NW0358,
        
        /// <remarks/>
        NW0359,
        
        /// <remarks/>
        NW0360,
        
        /// <remarks/>
        NW0361,
        
        /// <remarks/>
        NW0362,
        
        /// <remarks/>
        NW0363,
        
        /// <remarks/>
        NW0364,
        
        /// <remarks/>
        NW0365,
        
        /// <remarks/>
        NW0366,
        
        /// <remarks/>
        NW0367,
        
        /// <remarks/>
        NW0368,
        
        /// <remarks/>
        NW0369,
        
        /// <remarks/>
        NW0370,
        
        /// <remarks/>
        NW0371,
        
        /// <remarks/>
        NW0372,
        
        /// <remarks/>
        NW0373,
        
        /// <remarks/>
        NW0374,
        
        /// <remarks/>
        NW0375,
        
        /// <remarks/>
        NW0376,
        
        /// <remarks/>
        NW0377,
        
        /// <remarks/>
        NW0378,
        
        /// <remarks/>
        NW0379,
        
        /// <remarks/>
        NW0380,
        
        /// <remarks/>
        NW0381,
        
        /// <remarks/>
        NW0382,
        
        /// <remarks/>
        NW0383,
        
        /// <remarks/>
        NW0384,
        
        /// <remarks/>
        NW0385,
        
        /// <remarks/>
        NW0386,
        
        /// <remarks/>
        NW0387,
        
        /// <remarks/>
        NW0388,
        
        /// <remarks/>
        NW0389,
        
        /// <remarks/>
        NW0390,
        
        /// <remarks/>
        NW0391,
        
        /// <remarks/>
        NW0392,
        
        /// <remarks/>
        NW0393,
        
        /// <remarks/>
        NW0394,
        
        /// <remarks/>
        NW0395,
        
        /// <remarks/>
        NW0396,
        
        /// <remarks/>
        NW0397,
        
        /// <remarks/>
        NW0398,
        
        /// <remarks/>
        NW0399,
        
        /// <remarks/>
        NW0400,
        
        /// <remarks/>
        NW0401,
        
        /// <remarks/>
        NW0402,
        
        /// <remarks/>
        NW0403,
        
        /// <remarks/>
        NW0404,
        
        /// <remarks/>
        NW0405,
        
        /// <remarks/>
        NW0406,
        
        /// <remarks/>
        NW0407,
        
        /// <remarks/>
        NW0408,
        
        /// <remarks/>
        NW0409,
        
        /// <remarks/>
        NW0410,
        
        /// <remarks/>
        NW0411,
        
        /// <remarks/>
        NW0412,
        
        /// <remarks/>
        NW0413,
        
        /// <remarks/>
        NW0414,
        
        /// <remarks/>
        NW0415,
        
        /// <remarks/>
        NW0416,
        
        /// <remarks/>
        NW0417,
        
        /// <remarks/>
        NW0418,
        
        /// <remarks/>
        NW0419,
        
        /// <remarks/>
        NW0420,
        
        /// <remarks/>
        NW0421,
        
        /// <remarks/>
        NW0422,
        
        /// <remarks/>
        NW0423,
        
        /// <remarks/>
        NW0424,
        
        /// <remarks/>
        NW0425,
        
        /// <remarks/>
        NW0426,
        
        /// <remarks/>
        NW0427,
        
        /// <remarks/>
        NW0428,
        
        /// <remarks/>
        NW0429,
        
        /// <remarks/>
        NW0430,
        
        /// <remarks/>
        NW0431,
        
        /// <remarks/>
        NW0432,
        
        /// <remarks/>
        NW0433,
        
        /// <remarks/>
        NW0434,
        
        /// <remarks/>
        NW0435,
        
        /// <remarks/>
        NW0436,
        
        /// <remarks/>
        NW0437,
        
        /// <remarks/>
        NW0438,
        
        /// <remarks/>
        NW0439,
        
        /// <remarks/>
        NW0440,
        
        /// <remarks/>
        NW0441,
        
        /// <remarks/>
        NW0442,
        
        /// <remarks/>
        NW0443,
        
        /// <remarks/>
        NW0444,
        
        /// <remarks/>
        NW0445,
        
        /// <remarks/>
        NW0446,
        
        /// <remarks/>
        NW0447,
        
        /// <remarks/>
        NW0448,
        
        /// <remarks/>
        NW0449,
        
        /// <remarks/>
        NW0450,
        
        /// <remarks/>
        NW0451,
        
        /// <remarks/>
        NW0452,
        
        /// <remarks/>
        NW0453,
        
        /// <remarks/>
        NW0454,
        
        /// <remarks/>
        NW0455,
        
        /// <remarks/>
        NW0456,
        
        /// <remarks/>
        NW0457,
        
        /// <remarks/>
        NW0458,
        
        /// <remarks/>
        NW0459,
        
        /// <remarks/>
        NW0460,
        
        /// <remarks/>
        NW0461,
        
        /// <remarks/>
        NW0462,
        
        /// <remarks/>
        NW0463,
        
        /// <remarks/>
        NW0464,
        
        /// <remarks/>
        NW0465,
        
        /// <remarks/>
        NW0466,
        
        /// <remarks/>
        NW0467,
        
        /// <remarks/>
        NW0468,
        
        /// <remarks/>
        NW0469,
        
        /// <remarks/>
        NW0470,
        
        /// <remarks/>
        NW0471,
        
        /// <remarks/>
        NW0472,
        
        /// <remarks/>
        NW0473,
        
        /// <remarks/>
        NW0474,
        
        /// <remarks/>
        NW0475,
        
        /// <remarks/>
        NW0476,
        
        /// <remarks/>
        NW0477,
        
        /// <remarks/>
        NW0478,
        
        /// <remarks/>
        NW0479,
        
        /// <remarks/>
        NW0480,
        
        /// <remarks/>
        NW0481,
        
        /// <remarks/>
        NW0482,
        
        /// <remarks/>
        NW0483,
        
        /// <remarks/>
        NW0484,
        
        /// <remarks/>
        NW0485,
        
        /// <remarks/>
        NW0486,
        
        /// <remarks/>
        NW0487,
        
        /// <remarks/>
        NW0488,
        
        /// <remarks/>
        NW0489,
        
        /// <remarks/>
        NW0490,
        
        /// <remarks/>
        NW0491,
        
        /// <remarks/>
        NW0492,
        
        /// <remarks/>
        NW0493,
        
        /// <remarks/>
        NW0494,
        
        /// <remarks/>
        NW0495,
        
        /// <remarks/>
        NW0496,
        
        /// <remarks/>
        NW0497,
        
        /// <remarks/>
        NW0498,
        
        /// <remarks/>
        NW0499,
        
        /// <remarks/>
        NW0500,
        
        /// <remarks/>
        NW0501,
        
        /// <remarks/>
        NW0502,
        
        /// <remarks/>
        NW0503,
        
        /// <remarks/>
        NW0504,
        
        /// <remarks/>
        NW0505,
        
        /// <remarks/>
        NW0506,
        
        /// <remarks/>
        NW0507,
        
        /// <remarks/>
        NW0508,
        
        /// <remarks/>
        NW0509,
        
        /// <remarks/>
        NW0510,
        
        /// <remarks/>
        NW0511,
        
        /// <remarks/>
        NW0512,
        
        /// <remarks/>
        NW0513,
        
        /// <remarks/>
        NW0514,
        
        /// <remarks/>
        NW0515,
        
        /// <remarks/>
        NW0516,
        
        /// <remarks/>
        NW0517,
        
        /// <remarks/>
        NW0518,
        
        /// <remarks/>
        NW0519,
        
        /// <remarks/>
        NW0520,
        
        /// <remarks/>
        NW0521,
        
        /// <remarks/>
        NW0522,
        
        /// <remarks/>
        NW0523,
        
        /// <remarks/>
        NW0524,
        
        /// <remarks/>
        NW0525,
        
        /// <remarks/>
        NW0526,
        
        /// <remarks/>
        NW0527,
        
        /// <remarks/>
        NW0528,
        
        /// <remarks/>
        NW0529,
        
        /// <remarks/>
        NW0530,
        
        /// <remarks/>
        NW0531,
        
        /// <remarks/>
        NW0532,
        
        /// <remarks/>
        NW0533,
        
        /// <remarks/>
        NW0534,
        
        /// <remarks/>
        NW0535,
        
        /// <remarks/>
        NW0536,
        
        /// <remarks/>
        NW0537,
        
        /// <remarks/>
        NW0538,
        
        /// <remarks/>
        NW0539,
        
        /// <remarks/>
        NW0540,
        
        /// <remarks/>
        NW0541,
        
        /// <remarks/>
        NW0542,
        
        /// <remarks/>
        NW0543,
        
        /// <remarks/>
        NW0544,
        
        /// <remarks/>
        NW0545,
        
        /// <remarks/>
        NW0546,
        
        /// <remarks/>
        NW0547,
        
        /// <remarks/>
        NW0548,
        
        /// <remarks/>
        NW0549,
        
        /// <remarks/>
        NW0550,
        
        /// <remarks/>
        NW0551,
        
        /// <remarks/>
        NW0552,
        
        /// <remarks/>
        NW0553,
        
        /// <remarks/>
        NW0554,
        
        /// <remarks/>
        NW0555,
        
        /// <remarks/>
        NW0556,
        
        /// <remarks/>
        NW0557,
        
        /// <remarks/>
        NW0558,
        
        /// <remarks/>
        NW0559,
        
        /// <remarks/>
        NW0560,
        
        /// <remarks/>
        NW0561,
        
        /// <remarks/>
        NW0562,
        
        /// <remarks/>
        NW0563,
        
        /// <remarks/>
        NW0564,
        
        /// <remarks/>
        NW0565,
        
        /// <remarks/>
        NW0566,
        
        /// <remarks/>
        NW0567,
        
        /// <remarks/>
        NW0568,
        
        /// <remarks/>
        NW0569,
        
        /// <remarks/>
        NW0570,
        
        /// <remarks/>
        NW0571,
        
        /// <remarks/>
        NW0572,
        
        /// <remarks/>
        NW0573,
        
        /// <remarks/>
        NW0574,
        
        /// <remarks/>
        NW0575,
        
        /// <remarks/>
        NW0576,
        
        /// <remarks/>
        NW0577,
        
        /// <remarks/>
        NW0578,
        
        /// <remarks/>
        NW0579,
        
        /// <remarks/>
        NW0580,
        
        /// <remarks/>
        NW0581,
        
        /// <remarks/>
        NW0582,
        
        /// <remarks/>
        NW0583,
        
        /// <remarks/>
        NW0584,
        
        /// <remarks/>
        NW0585,
        
        /// <remarks/>
        NW0586,
        
        /// <remarks/>
        NW0587,
        
        /// <remarks/>
        NW0588,
        
        /// <remarks/>
        NW0589,
        
        /// <remarks/>
        NW0590,
        
        /// <remarks/>
        NW0591,
        
        /// <remarks/>
        NW0592,
        
        /// <remarks/>
        NW0593,
        
        /// <remarks/>
        NW0594,
        
        /// <remarks/>
        NW0595,
        
        /// <remarks/>
        NW0596,
        
        /// <remarks/>
        NW0597,
        
        /// <remarks/>
        NW0598,
        
        /// <remarks/>
        NW0599,
        
        /// <remarks/>
        NW0600,
        
        /// <remarks/>
        NW0601,
        
        /// <remarks/>
        NW0602,
        
        /// <remarks/>
        NW0603,
        
        /// <remarks/>
        NW0604,
        
        /// <remarks/>
        NW0605,
        
        /// <remarks/>
        NW0606,
        
        /// <remarks/>
        NW0607,
        
        /// <remarks/>
        NW0608,
        
        /// <remarks/>
        NW0609,
        
        /// <remarks/>
        NW0610,
        
        /// <remarks/>
        NW0611,
        
        /// <remarks/>
        NW0612,
        
        /// <remarks/>
        NW0613,
        
        /// <remarks/>
        NW0614,
        
        /// <remarks/>
        NW0615,
        
        /// <remarks/>
        NW0616,
        
        /// <remarks/>
        NW0617,
        
        /// <remarks/>
        NW0618,
        
        /// <remarks/>
        NW0619,
        
        /// <remarks/>
        NW0620,
        
        /// <remarks/>
        NW0621,
        
        /// <remarks/>
        NW0622,
        
        /// <remarks/>
        NW0623,
        
        /// <remarks/>
        NW0624,
        
        /// <remarks/>
        NW0625,
        
        /// <remarks/>
        NW0626,
        
        /// <remarks/>
        NW0627,
        
        /// <remarks/>
        NW0628,
        
        /// <remarks/>
        NW0629,
        
        /// <remarks/>
        NW0630,
        
        /// <remarks/>
        NW0631,
        
        /// <remarks/>
        NW0632,
        
        /// <remarks/>
        NW0633,
        
        /// <remarks/>
        NW0634,
        
        /// <remarks/>
        NW0635,
        
        /// <remarks/>
        NW0636,
        
        /// <remarks/>
        NW0637,
        
        /// <remarks/>
        NW0638,
        
        /// <remarks/>
        NW0639,
        
        /// <remarks/>
        NW0640,
        
        /// <remarks/>
        NW0641,
        
        /// <remarks/>
        NW0642,
        
        /// <remarks/>
        NW0643,
        
        /// <remarks/>
        NW0644,
        
        /// <remarks/>
        NW0645,
        
        /// <remarks/>
        NW0646,
        
        /// <remarks/>
        NW0647,
        
        /// <remarks/>
        NW0648,
        
        /// <remarks/>
        NW0649,
        
        /// <remarks/>
        NW0650,
        
        /// <remarks/>
        NW0651,
        
        /// <remarks/>
        NW0652,
        
        /// <remarks/>
        NW0653,
        
        /// <remarks/>
        NW0654,
        
        /// <remarks/>
        NW0655,
        
        /// <remarks/>
        NW0656,
        
        /// <remarks/>
        NW0657,
        
        /// <remarks/>
        NW0658,
        
        /// <remarks/>
        NW0659,
        
        /// <remarks/>
        NW0660,
        
        /// <remarks/>
        NW0661,
        
        /// <remarks/>
        NW0662,
        
        /// <remarks/>
        NW0663,
        
        /// <remarks/>
        NW0664,
        
        /// <remarks/>
        NW0665,
        
        /// <remarks/>
        NW0666,
        
        /// <remarks/>
        NW0667,
        
        /// <remarks/>
        NW0668,
        
        /// <remarks/>
        NW0669,
        
        /// <remarks/>
        NW0670,
        
        /// <remarks/>
        NW0671,
        
        /// <remarks/>
        NW0672,
        
        /// <remarks/>
        NW0673,
        
        /// <remarks/>
        NW0674,
        
        /// <remarks/>
        NW0675,
        
        /// <remarks/>
        NW0676,
        
        /// <remarks/>
        NW0677,
        
        /// <remarks/>
        NW0678,
        
        /// <remarks/>
        NW0679,
        
        /// <remarks/>
        NW0680,
        
        /// <remarks/>
        NW0681,
        
        /// <remarks/>
        NW0682,
        
        /// <remarks/>
        NW0683,
        
        /// <remarks/>
        NW0684,
        
        /// <remarks/>
        NW0685,
        
        /// <remarks/>
        NW0686,
        
        /// <remarks/>
        NW0687,
        
        /// <remarks/>
        NW0688,
        
        /// <remarks/>
        NW0689,
        
        /// <remarks/>
        NW0690,
        
        /// <remarks/>
        NW0691,
        
        /// <remarks/>
        NW0692,
        
        /// <remarks/>
        NW0693,
        
        /// <remarks/>
        NW0694,
        
        /// <remarks/>
        NW0695,
        
        /// <remarks/>
        NW0696,
        
        /// <remarks/>
        NW0697,
        
        /// <remarks/>
        NW0698,
        
        /// <remarks/>
        NW0699,
        
        /// <remarks/>
        NW0700,
        
        /// <remarks/>
        NW0701,
        
        /// <remarks/>
        NW0702,
        
        /// <remarks/>
        NW0703,
        
        /// <remarks/>
        NW0704,
        
        /// <remarks/>
        NW0705,
        
        /// <remarks/>
        NW0706,
        
        /// <remarks/>
        NW0707,
        
        /// <remarks/>
        NW0708,
        
        /// <remarks/>
        NW0709,
        
        /// <remarks/>
        NW0710,
        
        /// <remarks/>
        NW0711,
        
        /// <remarks/>
        NW0712,
        
        /// <remarks/>
        NW0713,
        
        /// <remarks/>
        NW0714,
        
        /// <remarks/>
        NW0715,
        
        /// <remarks/>
        NW0716,
        
        /// <remarks/>
        NW0717,
        
        /// <remarks/>
        NW0718,
        
        /// <remarks/>
        NW0719,
        
        /// <remarks/>
        NW0720,
        
        /// <remarks/>
        NW0721,
        
        /// <remarks/>
        NW0722,
        
        /// <remarks/>
        NW0723,
        
        /// <remarks/>
        NW0724,
        
        /// <remarks/>
        NW0725,
        
        /// <remarks/>
        NW0726,
        
        /// <remarks/>
        NW0727,
        
        /// <remarks/>
        NW0728,
        
        /// <remarks/>
        NW0729,
        
        /// <remarks/>
        NW0730,
        
        /// <remarks/>
        NW0731,
        
        /// <remarks/>
        NW0732,
        
        /// <remarks/>
        NW0733,
        
        /// <remarks/>
        NW0734,
        
        /// <remarks/>
        NW0735,
        
        /// <remarks/>
        NW0736,
        
        /// <remarks/>
        NW0737,
        
        /// <remarks/>
        NW0738,
        
        /// <remarks/>
        NW0739,
        
        /// <remarks/>
        NW0740,
        
        /// <remarks/>
        NW0741,
        
        /// <remarks/>
        NW0742,
        
        /// <remarks/>
        NW0743,
        
        /// <remarks/>
        NW0744,
        
        /// <remarks/>
        NW0745,
        
        /// <remarks/>
        NW0746,
        
        /// <remarks/>
        NW0747,
        
        /// <remarks/>
        NW0748,
        
        /// <remarks/>
        NW0749,
        
        /// <remarks/>
        NW0750,
        
        /// <remarks/>
        NW0751,
        
        /// <remarks/>
        NW0752,
        
        /// <remarks/>
        NW0753,
        
        /// <remarks/>
        NW0754,
        
        /// <remarks/>
        NW0755,
        
        /// <remarks/>
        NW0756,
        
        /// <remarks/>
        NW0757,
        
        /// <remarks/>
        NW0758,
        
        /// <remarks/>
        NW0759,
        
        /// <remarks/>
        NW0760,
        
        /// <remarks/>
        NW0761,
        
        /// <remarks/>
        NW0762,
        
        /// <remarks/>
        NW0763,
        
        /// <remarks/>
        NW0764,
        
        /// <remarks/>
        NW0765,
        
        /// <remarks/>
        NW0766,
        
        /// <remarks/>
        NW0767,
        
        /// <remarks/>
        NW0768,
        
        /// <remarks/>
        NW0769,
        
        /// <remarks/>
        NW0770,
        
        /// <remarks/>
        NW0771,
        
        /// <remarks/>
        NW0772,
        
        /// <remarks/>
        NW0773,
        
        /// <remarks/>
        NW0774,
        
        /// <remarks/>
        NW0775,
        
        /// <remarks/>
        NW0776,
        
        /// <remarks/>
        NW0777,
        
        /// <remarks/>
        NW0778,
        
        /// <remarks/>
        NW0779,
        
        /// <remarks/>
        NW0780,
        
        /// <remarks/>
        NW0781,
        
        /// <remarks/>
        NW0782,
        
        /// <remarks/>
        NW0783,
        
        /// <remarks/>
        NW0784,
        
        /// <remarks/>
        NW0785,
        
        /// <remarks/>
        NW0786,
        
        /// <remarks/>
        NW0787,
        
        /// <remarks/>
        NW0788,
        
        /// <remarks/>
        NW0789,
        
        /// <remarks/>
        NW0790,
        
        /// <remarks/>
        NW0791,
        
        /// <remarks/>
        NW0792,
        
        /// <remarks/>
        NW0793,
        
        /// <remarks/>
        NW0794,
        
        /// <remarks/>
        NW0795,
        
        /// <remarks/>
        NW0796,
        
        /// <remarks/>
        NW0797,
        
        /// <remarks/>
        NW0798,
        
        /// <remarks/>
        NW0799,
        
        /// <remarks/>
        NW0800,
        
        /// <remarks/>
        NW0801,
        
        /// <remarks/>
        NW0802,
        
        /// <remarks/>
        NW0803,
        
        /// <remarks/>
        NW0804,
        
        /// <remarks/>
        NW0805,
        
        /// <remarks/>
        NW0806,
        
        /// <remarks/>
        NW0807,
        
        /// <remarks/>
        NW0808,
        
        /// <remarks/>
        NW0809,
        
        /// <remarks/>
        NW0810,
        
        /// <remarks/>
        NW0811,
        
        /// <remarks/>
        NW0812,
        
        /// <remarks/>
        NW0813,
        
        /// <remarks/>
        NW0814,
        
        /// <remarks/>
        NW0815,
        
        /// <remarks/>
        NW0816,
        
        /// <remarks/>
        NW0817,
        
        /// <remarks/>
        NW0818,
        
        /// <remarks/>
        NW0819,
        
        /// <remarks/>
        NW0820,
        
        /// <remarks/>
        NW0821,
        
        /// <remarks/>
        NW0822,
        
        /// <remarks/>
        NW0823,
        
        /// <remarks/>
        NW0824,
        
        /// <remarks/>
        NW0825,
        
        /// <remarks/>
        NW0826,
        
        /// <remarks/>
        NW0827,
        
        /// <remarks/>
        NW0828,
        
        /// <remarks/>
        NW0829,
        
        /// <remarks/>
        NW0830,
        
        /// <remarks/>
        NW0831,
        
        /// <remarks/>
        NW0832,
        
        /// <remarks/>
        NW0833,
        
        /// <remarks/>
        NW0834,
        
        /// <remarks/>
        NW0835,
        
        /// <remarks/>
        NW0836,
        
        /// <remarks/>
        NW0837,
        
        /// <remarks/>
        NW0838,
        
        /// <remarks/>
        NW0839,
        
        /// <remarks/>
        NW0840,
        
        /// <remarks/>
        NW0841,
        
        /// <remarks/>
        NW0842,
        
        /// <remarks/>
        NW0843,
        
        /// <remarks/>
        NW0844,
        
        /// <remarks/>
        NW0845,
        
        /// <remarks/>
        NW0846,
        
        /// <remarks/>
        NW0847,
        
        /// <remarks/>
        NW0848,
        
        /// <remarks/>
        NW0849,
        
        /// <remarks/>
        NW0850,
        
        /// <remarks/>
        NW0851,
        
        /// <remarks/>
        NW0852,
        
        /// <remarks/>
        NW0853,
        
        /// <remarks/>
        NW0854,
        
        /// <remarks/>
        NW0855,
        
        /// <remarks/>
        NW0856,
        
        /// <remarks/>
        NW0857,
        
        /// <remarks/>
        NW0858,
        
        /// <remarks/>
        NW0859,
        
        /// <remarks/>
        NW0860,
        
        /// <remarks/>
        NW0861,
        
        /// <remarks/>
        NW0862,
        
        /// <remarks/>
        NW0863,
        
        /// <remarks/>
        NW0864,
        
        /// <remarks/>
        NW0865,
        
        /// <remarks/>
        NW0866,
        
        /// <remarks/>
        NW0867,
        
        /// <remarks/>
        NW0868,
        
        /// <remarks/>
        NW0869,
        
        /// <remarks/>
        NW0870,
        
        /// <remarks/>
        NW0871,
        
        /// <remarks/>
        NW0872,
        
        /// <remarks/>
        NW0873,
        
        /// <remarks/>
        NW0874,
        
        /// <remarks/>
        NW0875,
        
        /// <remarks/>
        NW0876,
        
        /// <remarks/>
        NW0877,
        
        /// <remarks/>
        NW0878,
        
        /// <remarks/>
        NW0879,
        
        /// <remarks/>
        NW0880,
        
        /// <remarks/>
        NW0881,
        
        /// <remarks/>
        NW0882,
        
        /// <remarks/>
        NW0883,
        
        /// <remarks/>
        NW0884,
        
        /// <remarks/>
        NW0885,
        
        /// <remarks/>
        NW0886,
        
        /// <remarks/>
        NW0887,
        
        /// <remarks/>
        NW0888,
        
        /// <remarks/>
        NW0889,
        
        /// <remarks/>
        NW0890,
        
        /// <remarks/>
        NW0891,
        
        /// <remarks/>
        NW0892,
        
        /// <remarks/>
        NW0893,
        
        /// <remarks/>
        NW0894,
        
        /// <remarks/>
        NW0895,
        
        /// <remarks/>
        NW0896,
        
        /// <remarks/>
        NW0897,
        
        /// <remarks/>
        NW0898,
        
        /// <remarks/>
        NW0899,
        
        /// <remarks/>
        NW0900,
        
        /// <remarks/>
        NW0901,
        
        /// <remarks/>
        NW0902,
        
        /// <remarks/>
        NW0903,
        
        /// <remarks/>
        NW0904,
        
        /// <remarks/>
        NW0905,
        
        /// <remarks/>
        NW0906,
        
        /// <remarks/>
        NW0907,
        
        /// <remarks/>
        NW0908,
        
        /// <remarks/>
        NW0909,
        
        /// <remarks/>
        NW0910,
        
        /// <remarks/>
        NW0911,
        
        /// <remarks/>
        NW0912,
        
        /// <remarks/>
        NW0913,
        
        /// <remarks/>
        NW0914,
        
        /// <remarks/>
        NW0915,
        
        /// <remarks/>
        NW0916,
        
        /// <remarks/>
        NW0917,
        
        /// <remarks/>
        NW0918,
        
        /// <remarks/>
        NW0919,
        
        /// <remarks/>
        NW0920,
        
        /// <remarks/>
        NW0921,
        
        /// <remarks/>
        NW0922,
        
        /// <remarks/>
        NW0923,
        
        /// <remarks/>
        NW0924,
        
        /// <remarks/>
        NW0925,
        
        /// <remarks/>
        NW0926,
        
        /// <remarks/>
        NW0927,
        
        /// <remarks/>
        NW0928,
        
        /// <remarks/>
        NW0929,
        
        /// <remarks/>
        NW0930,
        
        /// <remarks/>
        NW0931,
        
        /// <remarks/>
        NW0932,
        
        /// <remarks/>
        NW0933,
        
        /// <remarks/>
        NW0934,
        
        /// <remarks/>
        NW0935,
        
        /// <remarks/>
        NW0936,
        
        /// <remarks/>
        NW0937,
        
        /// <remarks/>
        NW0938,
        
        /// <remarks/>
        NW0939,
        
        /// <remarks/>
        NW0940,
        
        /// <remarks/>
        NW0941,
        
        /// <remarks/>
        NW0942,
        
        /// <remarks/>
        NW0943,
        
        /// <remarks/>
        NW0944,
        
        /// <remarks/>
        NW0945,
        
        /// <remarks/>
        NW0946,
        
        /// <remarks/>
        NW0947,
        
        /// <remarks/>
        NW0948,
        
        /// <remarks/>
        NW0949,
        
        /// <remarks/>
        NW0950,
        
        /// <remarks/>
        NW0951,
        
        /// <remarks/>
        NW0952,
        
        /// <remarks/>
        NW0953,
        
        /// <remarks/>
        NW0954,
        
        /// <remarks/>
        NW0955,
        
        /// <remarks/>
        NW0956,
        
        /// <remarks/>
        NW0957,
        
        /// <remarks/>
        NW0958,
        
        /// <remarks/>
        NW0959,
        
        /// <remarks/>
        NW0960,
        
        /// <remarks/>
        NW0961,
        
        /// <remarks/>
        NW0962,
        
        /// <remarks/>
        NW0963,
        
        /// <remarks/>
        NW0964,
        
        /// <remarks/>
        NW0965,
        
        /// <remarks/>
        NW0966,
        
        /// <remarks/>
        NW0967,
        
        /// <remarks/>
        NW0968,
        
        /// <remarks/>
        NW0969,
        
        /// <remarks/>
        NW0970,
        
        /// <remarks/>
        NW0971,
        
        /// <remarks/>
        NW0972,
        
        /// <remarks/>
        NW0973,
        
        /// <remarks/>
        NW0974,
        
        /// <remarks/>
        NW0975,
        
        /// <remarks/>
        NW0976,
        
        /// <remarks/>
        NW0977,
        
        /// <remarks/>
        NW0978,
        
        /// <remarks/>
        NW0979,
        
        /// <remarks/>
        NW0980,
        
        /// <remarks/>
        NW0981,
        
        /// <remarks/>
        NW0982,
        
        /// <remarks/>
        NW0983,
        
        /// <remarks/>
        NW0984,
        
        /// <remarks/>
        NW0985,
        
        /// <remarks/>
        NW0986,
        
        /// <remarks/>
        NW0987,
        
        /// <remarks/>
        NW0988,
        
        /// <remarks/>
        NW0989,
        
        /// <remarks/>
        NW0990,
        
        /// <remarks/>
        NW0991,
        
        /// <remarks/>
        NW0992,
        
        /// <remarks/>
        NW0993,
        
        /// <remarks/>
        NW0994,
        
        /// <remarks/>
        NW0995,
        
        /// <remarks/>
        NW0996,
        
        /// <remarks/>
        NW0997,
        
        /// <remarks/>
        NW0998,
        
        /// <remarks/>
        NW0999,
        
        /// <remarks/>
        NE0000,
        
        /// <remarks/>
        NE9000,
        
        /// <remarks/>
        NE9001,
        
        /// <remarks/>
        NE9002,
        
        /// <remarks/>
        NE9003,
        
        /// <remarks/>
        NE0001,
        
        /// <remarks/>
        NE0002,
        
        /// <remarks/>
        NE0003,
        
        /// <remarks/>
        NE0004,
        
        /// <remarks/>
        NE0005,
        
        /// <remarks/>
        NE0006,
        
        /// <remarks/>
        BE0001,
        
        /// <remarks/>
        BE0002,
        
        /// <remarks/>
        BE0003,
        
        /// <remarks/>
        BE0004,
        
        /// <remarks/>
        BE0005,
        
        /// <remarks/>
        BE0006,
        
        /// <remarks/>
        BE0007,
        
        /// <remarks/>
        BE0008,
        
        /// <remarks/>
        BE0009,
        
        /// <remarks/>
        BE0010,
        
        /// <remarks/>
        BW0001,
        
        /// <remarks/>
        BW0002,
        
        /// <remarks/>
        BW0003,
        
        /// <remarks/>
        BW0004,
        
        /// <remarks/>
        BW0005,
        
        /// <remarks/>
        BW0006,
        
        /// <remarks/>
        BW0007,
        
        /// <remarks/>
        BW0008,
        
        /// <remarks/>
        BW0009,
        
        /// <remarks/>
        BW0010,
        
        /// <remarks/>
        BW0011,
        
        /// <remarks/>
        BW0012,
        
        /// <remarks/>
        BW0013,
        
        /// <remarks/>
        BW0014,
        
        /// <remarks/>
        BW0015,
        
        /// <remarks/>
        BW0016,
        
        /// <remarks/>
        BW0017,
        
        /// <remarks/>
        BW0018,
        
        /// <remarks/>
        BW0019,
        
        /// <remarks/>
        BW0020,
        
        /// <remarks/>
        BI0001,
        
        /// <remarks/>
        BI0002,
        
        /// <remarks/>
        BI0003,
        
        /// <remarks/>
        BI0004,
        
        /// <remarks/>
        BI0005,
        
        /// <remarks/>
        BI0006,
        
        /// <remarks/>
        BI0007,
        
        /// <remarks/>
        BI0008,
        
        /// <remarks/>
        BI0009,
        
        /// <remarks/>
        BI0010,
        
        /// <remarks/>
        SE0001,
        
        /// <remarks/>
        SE0002,
        
        /// <remarks/>
        SE0003,
        
        /// <remarks/>
        SE0004,
        
        /// <remarks/>
        SE0005,
        
        /// <remarks/>
        SE0006,
        
        /// <remarks/>
        SE0007,
        
        /// <remarks/>
        SE0008,
        
        /// <remarks/>
        SE0009,
        
        /// <remarks/>
        SE0010,
        
        /// <remarks/>
        SE0011,
        
        /// <remarks/>
        SE0012,
        
        /// <remarks/>
        SE0013,
        
        /// <remarks/>
        SE0014,
        
        /// <remarks/>
        NP0001,
        
        /// <remarks/>
        NP0002,
        
        /// <remarks/>
        NP0003,
        
        /// <remarks/>
        NP0004,
        
        /// <remarks/>
        NP0005,
        
        /// <remarks/>
        NP0006,
        
        /// <remarks/>
        NP0007,
        
        /// <remarks/>
        NP0008,
        
        /// <remarks/>
        NP0009,
        
        /// <remarks/>
        NP0010,
        
        /// <remarks/>
        NP0011,
        
        /// <remarks/>
        NP0012,
        
        /// <remarks/>
        NP0013,
        
        /// <remarks/>
        NP0014,
        
        /// <remarks/>
        NP0015,
        
        /// <remarks/>
        NP0016,
        
        /// <remarks/>
        NP0017,
        
        /// <remarks/>
        NP0018,
        
        /// <remarks/>
        NP0019,
        
        /// <remarks/>
        NP0020,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppPublicLoginCompletedEventHandler(object sender, NppPublicLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppPublicLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppPublicLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLoginInfo nppLoginInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLoginInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppPublicLogoutCompletedEventHandler(object sender, NppPublicLogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppPublicLogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppPublicLogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchMaterialOrderCompletedEventHandler(object sender, NppSearchMaterialOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchMaterialOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchMaterialOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppInfoMaterialOrder orderInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppInfoMaterialOrder)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSeachManufactResultCompletedEventHandler(object sender, NppSeachManufactResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSeachManufactResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSeachManufactResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppInfoMaterialResults[] resultsInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppInfoMaterialResults[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchBlendResinResultCompletedEventHandler(object sender, NppSearchBlendResinResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchBlendResinResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchBlendResinResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppBlendResinResultInfo blendResinResultInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppBlendResinResultInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditBlendResinResultCompletedEventHandler(object sender, NppEditBlendResinResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditBlendResinResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditBlendResinResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchBlendResinRelationCompletedEventHandler(object sender, NppSearchBlendResinRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchBlendResinRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchBlendResinRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppBlendResinRelationInfo blendResinRelationInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppBlendResinRelationInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditBlendResinRelationCompletedEventHandler(object sender, NppEditBlendResinRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditBlendResinRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditBlendResinRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchBlendResinResultForVBCompletedEventHandler(object sender, NppSearchBlendResinResultForVBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchBlendResinResultForVBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchBlendResinResultForVBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppBlendResinResultInfo blendResinResultInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppBlendResinResultInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchMeasureRstInfoCompletedEventHandler(object sender, NppSearchMeasureRstInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchMeasureRstInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchMeasureRstInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppMeasureRstInfo[] measureRstInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppMeasureRstInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditMeasureRstInfoCompletedEventHandler(object sender, NppEditMeasureRstInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditMeasureRstInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditMeasureRstInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditManufactOrderResultCompletedEventHandler(object sender, NppEditManufactOrderResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditManufactOrderResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditManufactOrderResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchTargetLotManufactResultFacilityCompletedEventHandler(object sender, NppSearchTargetLotManufactResultFacilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchTargetLotManufactResultFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchTargetLotManufactResultFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppResultsFacilityInfo[] resultsFacilityInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppResultsFacilityInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchCarrierLotCompletedEventHandler(object sender, NppSearchCarrierLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchCarrierLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchCarrierLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppCarrierLotInfo[] rsultsCarrierInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppCarrierLotInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditCarrierChangeCompletedEventHandler(object sender, NppEditCarrierChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditCarrierChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditCarrierChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppAddFrameAssignCountCompletedEventHandler(object sender, NppAddFrameAssignCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppAddFrameAssignCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppAddFrameAssignCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppPubEditManufactOrderCompletedEventHandler(object sender, NppPubEditManufactOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppPubEditManufactOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppPubEditManufactOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] retMnfctInstNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppPubEditManufactResultCompletedEventHandler(object sender, NppPubEditManufactResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppPubEditManufactResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppPubEditManufactResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] retMnfctRslNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchResultsFacilityCompletedEventHandler(object sender, NppSearchResultsFacilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchResultsFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchResultsFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppResultsFacilityInfo[] resultsFacInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppResultsFacilityInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditLotCharCompletedEventHandler(object sender, NppEditLotCharCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditLotCharCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditLotCharCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppInsertLotCharProcessScheduleCompletedEventHandler(object sender, NppInsertLotCharProcessScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppInsertLotCharProcessScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppInsertLotCharProcessScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchLotCharProcessScheduleCompletedEventHandler(object sender, NppSearchLotCharProcessScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchLotCharProcessScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchLotCharProcessScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotCharProcessScheduleInfo[] retInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotCharProcessScheduleInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppOutRawMatCompletedEventHandler(object sender, NppOutRawMatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppOutRawMatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppOutRawMatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppMoveOutMatFromSLACompletedEventHandler(object sender, NppMoveOutMatFromSLACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppMoveOutMatFromSLACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppMoveOutMatFromSLACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppBinMovePaymentCompletedEventHandler(object sender, NppBinMovePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppBinMovePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppBinMovePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchInventoryCompletedEventHandler(object sender, NppSearchInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotInfo3 lotInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotInfo3)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppPopMoveOutMatFromSLACompletedEventHandler(object sender, NppPopMoveOutMatFromSLACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppPopMoveOutMatFromSLACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppPopMoveOutMatFromSLACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppPopSearchInventoryCompletedEventHandler(object sender, NppPopSearchInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppPopSearchInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppPopSearchInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotInfo3 lotInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotInfo3)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppPopOutRawMatCompletedEventHandler(object sender, NppPopOutRawMatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppPopOutRawMatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppPopOutRawMatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppUpdateSelectSumStCompletedEventHandler(object sender, NppUpdateSelectSumStCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppUpdateSelectSumStCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppUpdateSelectSumStCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchLotCharCompletedEventHandler(object sender, NppSearchLotCharCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchLotCharCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchLotCharCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotCharInfo[] lotCharInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotCharInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchLotCharPbCompletedEventHandler(object sender, NppSearchLotCharPbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchLotCharPbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchLotCharPbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotCharInfo[] lotCharInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotCharInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppUpdateQultymnteDtCompletedEventHandler(object sender, NppUpdateQultymnteDtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppUpdateQultymnteDtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppUpdateQultymnteDtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchInventoryRootsLotCompletedEventHandler(object sender, NppSearchInventoryRootsLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchInventoryRootsLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchInventoryRootsLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotInfo3[] lotInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotInfo3[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchTargetBinInventoryCompletedEventHandler(object sender, NppSearchTargetBinInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchTargetBinInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchTargetBinInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotInfo3[] lotInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotInfo3[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchOnlyNascaLotPubCompletedEventHandler(object sender, NppSearchOnlyNascaLotPubCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchOnlyNascaLotPubCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchOnlyNascaLotPubCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppNascaLotInfo[] nascaLotInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppNascaLotInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppUpdateNascaLotCommentCompletedEventHandler(object sender, NppUpdateNascaLotCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppUpdateNascaLotCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppUpdateNascaLotCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppUpdateLtStatusCompletedEventHandler(object sender, NppUpdateLtStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppUpdateLtStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppUpdateLtStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppGetMaterialNMCompletedEventHandler(object sender, NppGetMaterialNMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppGetMaterialNMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppGetMaterialNMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string materialNM {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppGetSectionBinInfoCompletedEventHandler(object sender, NppGetSectionBinInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppGetSectionBinInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppGetSectionBinInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppBinInfo[] binInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppBinInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppGetLotCharListCompletedEventHandler(object sender, NppGetLotCharListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppGetLotCharListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppGetLotCharListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotCharInfo[] lotCharListInfos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotCharInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchNFormSuffixCompletedEventHandler(object sender, NppSearchNFormSuffixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchNFormSuffixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchNFormSuffixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppNFormGroupInfo[] nFormGroupInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppNFormGroupInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchMstLotCharCompletedEventHandler(object sender, NppSearchMstLotCharCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchMstLotCharCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchMstLotCharCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppLotCharInfo[] lotCharInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLotCharInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchDefectPotRegCompletedEventHandler(object sender, NppSearchDefectPotRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchDefectPotRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchDefectPotRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppDefectPotRegInfo[] defectPotRegInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppDefectPotRegInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchPdaConditionCompletedEventHandler(object sender, NppSearchPdaConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchPdaConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchPdaConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppPdaConditionInfo[] retInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppPdaConditionInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditPdaConditionCompletedEventHandler(object sender, NppEditPdaConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditPdaConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditPdaConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditWorkPlantClasCompletedEventHandler(object sender, NppEditWorkPlantClasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditWorkPlantClasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditWorkPlantClasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditWorkSurveillanceInfoCompletedEventHandler(object sender, NppEditWorkSurveillanceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditWorkSurveillanceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditWorkSurveillanceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditPatPrintHistoryCompletedEventHandler(object sender, NppEditPatPrintHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditPatPrintHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditPatPrintHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditNascaShipStCompletedEventHandler(object sender, NppEditNascaShipStCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditNascaShipStCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditNascaShipStCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppEditNascaShipSt2CompletedEventHandler(object sender, NppEditNascaShipSt2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppEditNascaShipSt2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppEditNascaShipSt2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppReleaseShipLotCompletedEventHandler(object sender, NppReleaseShipLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppReleaseShipLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppReleaseShipLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppPopLoginCompletedEventHandler(object sender, NppPopLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppPopLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppPopLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppLoginInfo nppLoginInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppLoginInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppSearchInlineMagLotCompletedEventHandler(object sender, NppSearchInlineMagLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppSearchInlineMagLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppSearchInlineMagLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public NppInlineMagazineLotInfo inlineMagLotInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppInlineMagazineLotInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppNelInsertOrderMoveCompletedEventHandler(object sender, NppNelInsertOrderMoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppNelInsertOrderMoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppNelInsertOrderMoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppNelInsertMnfctResultCompletedEventHandler(object sender, NppNelInsertMnfctResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppNelInsertMnfctResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppNelInsertMnfctResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NppNelInsertCutBlendOrderCompletedEventHandler(object sender, NppNelInsertCutBlendOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NppNelInsertCutBlendOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NppNelInsertCutBlendOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NppReturnInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NppReturnInfo)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591